{
    "url": "https://api.github.com/gists/f54484ad2b2ca7f900d0800186ddf420",
    "forks_url": "https://api.github.com/gists/f54484ad2b2ca7f900d0800186ddf420/forks",
    "commits_url": "https://api.github.com/gists/f54484ad2b2ca7f900d0800186ddf420/commits",
    "id": "f54484ad2b2ca7f900d0800186ddf420",
    "node_id": "G_kwDOA5mHbtoAIGY1NDQ4NGFkMmIyY2E3ZjkwMGQwODAwMTg2ZGRmNDIw",
    "git_pull_url": "https://gist.github.com/f54484ad2b2ca7f900d0800186ddf420.git",
    "git_push_url": "https://gist.github.com/f54484ad2b2ca7f900d0800186ddf420.git",
    "html_url": "https://gist.github.com/Untru/f54484ad2b2ca7f900d0800186ddf420",
    "files": {
        "_bsl\\Resources\\726598511\\Catalog\\усАлгоритмыРазмещения\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усАлгоритмыРазмещения\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/390ac06401bcd490ceecaba99f502f631184a8ad/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC%D1%8B%D0%A0%D0%B0%D0%B7%D0%BC%D0%B5%D1%89%D0%B5%D0%BD%D0%B8%D1%8F%5CCatalogForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%AD%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CCatalogForm.obj.bsl",
            "size": 1160,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)\n\tДобавитьРеквизитыНаФорму();\nКонецПроцедуры  \n\n// ++ Ситек Булдаков 28.12.23\n&НаСервере\nПроцедура ДобавитьРеквизитыНаФорму()  \n\t//Создание полей\n\tНовыйЭлемент = Элементы.Добавить(\"Бюро1440_РазмещатьПоПоклажедателю\", Тип(\"ПолеФормы\"), Элементы.ГруппаПараметрыРазмещения); \n\tНовыйЭлемент.Заголовок\t= \"Размещать по поклажедателю\";\n\tНовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;\n\tНовыйЭлемент.ПутьКДанным = \"Объект.Бюро1440_РазмещатьПоПоклажедателю\"; \n\tНовыйЭлемент.ПоложениеЗаголовка\t= ПоложениеЗаголовкаЭлементаФормы.Право;\nКонецПроцедуры\n// -- Ситек Булдаков 28.12.23",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усИсточникиПоступления\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усИсточникиПоступления\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/5b8f13cbf3750245fca8d5815c2d6c29ecde6077/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%98%D1%81%D1%82%D0%BE%D1%87%D0%BD%D0%B8%D0%BA%D0%B8%D0%9F%D0%BE%D1%81%D1%82%D1%83%D0%BF%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F%5CCatalogForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%AD%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CCatalogForm.obj.bsl",
            "size": 397,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)//Ситек Николаев 06.03.24 ++\n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усКонтейнеры\\Catalog.mgr.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усКонтейнеры\\Catalog.mgr.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/6f67e4fc40550f192a4dc05d250616384359cee5/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D1%8B%5CCatalog.mgr.bsl",
            "size": 25107,
            "truncated": false,
            "content": "&После(\"ДобавитьКомандыПечати\")\nПроцедура Бюро1440_ДобавитьКомандыПечати(КомандыПечати)\n\tКомандаПечати = КомандыПечати.Добавить();\n\tКомандаПечати.Идентификатор = \"М11\";\n\tКомандаПечати.Представление = НСтр(\"ru = 'М-11'\");\nКонецПроцедуры\n\n&После(\"Печать\")\nПроцедура Бюро1440_Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)\n\tЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, \"М11\") Тогда\n\t\tУправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, \"М11\", НСтр(\"ru = 'М-11'\"), СформироватьПечатнуюФормуМ11(МассивОбъектов, ОбъектыПечати));\n\tКонецЕсли;\nКонецПроцедуры\n\n// Формирование печатной формы М11\nФункция СформироватьПечатнуюФормуМ11(МассивОбъектов, ОбъектыПечати) Экспорт\n\n\tТабличныйДокумент = Новый ТабличныйДокумент;\n\tТабличныйДокумент.ИмяПараметровПечати = \"ПАРАМЕТРЫ_ПЕЧАТИ_М11_КОНТЕЙНЕР\";\n\tДанныеДляПечати = ПолучитьДанныеДляПечатнойФормыМ11(МассивОбъектов);\n\tЗаполнитьТабличныйДокументМ11(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати);\n\n\tВозврат ТабличныйДокумент;\n\nКонецФункции\n\nФункция ПолучитьДанныеДляПечатнойФормыМ11(МассивОбъектов)\n\t\n\tДатаДокумента\t= ТекущаяДатаСеанса();\n\t\n\t// Получим самую раннюю дату документа из массива\n\tЗапрос\t= Новый Запрос; \n\tЗапрос.МенеджерВременныхТаблиц\t= Новый МенеджерВременныхТаблиц;\n\tЗапрос.УстановитьПараметр(\"Контейнеры\", МассивОбъектов); \n\tЗапрос.УстановитьПараметр(\"ДатаДокумента\",  ДатаДокумента);\n\tЗапрос.Текст\t= \"ВЫБРАТЬ\n\t            \t  |\tусКонтейнеры.ДокументПривязки КАК Заказ,\n\t            \t  |\tусКонтейнеры.Ссылка КАК Контейнер\n\t            \t  |ПОМЕСТИТЬ Заказы\n\t            \t  |ИЗ\n\t            \t  |\tСправочник.усКонтейнеры КАК усКонтейнеры\n\t            \t  |ГДЕ\n\t            \t  |\tусКонтейнеры.Ссылка В(&Контейнеры)\n\t            \t  |;\n\t            \t  |\n\t            \t  |////////////////////////////////////////////////////////////////////////////////\n\t            \t  |ВЫБРАТЬ ПЕРВЫЕ 1\n\t            \t  |\tусЗаказНаОтгрузку.Дата КАК Дата\n\t            \t  |ИЗ\n\t            \t  |\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t            \t  |ГДЕ\n\t            \t  |\tусЗаказНаОтгрузку.Ссылка В\n\t            \t  |\t\t\t(ВЫБРАТЬ\n\t            \t  |\t\t\t\tЗаказы.Заказ\n\t            \t  |\t\t\tИЗ\n\t            \t  |\t\t\t\tЗаказы)\n\t            \t  |\n\t            \t  |УПОРЯДОЧИТЬ ПО\n\t            \t  |\tДата\";\n\tРезультатЗапроса\t= Запрос.Выполнить().Выбрать(); \n\t\n\tНачалоПериода\t= Дата(1, 1, 1);\n\tЕсли РезультатЗапроса.Следующий() Тогда\n\t\tНачалоПериода\t= РезультатЗапроса.Дата;\n\tКонецЕсли; \n\t\n\tЗапрос.УстановитьПараметр(\"НачалоПериода\",  НачалоПериода);\n\n\tЗапрос.Текст =\n\t\"ВЫБРАТЬ\n\t|\tусЗаказНаОтгрузку.Бюро1440_ДокументОснованиеКИС КАК ДокументОснованиеКИС,\n\t|\tусЗаказНаОтгрузку.НомерКИС КАК НомерКИС,\n\t|\tусЗаказНаОтгрузку.Номер КАК Номер,\n\t|\tусЗаказНаОтгрузку.Поклажедатель.Представление КАК Поклажедатель,\n\t|\tусЗаказНаОтгрузку.Контрагент.Представление КАК Контрагент,\n\t|\tусЗаказНаОтгрузку.Организация.Наименование КАК Организация,\n\t|\tусЗаказНаОтгрузку.Организация.КПП КАК ОрганизацияКПП,\n\t|\tусЗаказНаОтгрузку.Организация.ИНН КАК ОрганизацияИНН,\n\t|\tусЗаказНаОтгрузку.Организация.ОКПО КАК ОКПО,\n\t|\tЗаказы.Контейнер КАК КонтейнерСсылка,\n\t|\tЗаказы.Контейнер.Представление КАК НомерКонтейнера,\n\t|\tусЗаказНаОтгрузку.Ссылка КАК Заказ,\n\t|\tусЗаказНаОтгрузку.Организация КАК ОрганизацияСсылка,\n\t|\tусЗаказНаОтгрузку.Автор КАК Автор,\n\t|\tусЗаказНаОтгрузку.Бюро1440_Согласующий КАК Бюро1440_Согласующий,\n\t|\tусЗаказНаОтгрузку.НаправлениеОтгрузки.Представление КАК НаправлениеОтгрузки\n\t|ИЗ\n\t|\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ Заказы КАК Заказы\n\t|\t\tПО усЗаказНаОтгрузку.Ссылка = Заказы.Заказ\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусОстаткиТоваровОстатки.Контейнер.ДокументПривязки КАК Заказ,\n\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.Номенклатура КАК НоменклатураСсылка,\n\t|\tусОстаткиТоваровОстатки.КоличествоОстаток КАК КоличествоФакт\n\t|ПОМЕСТИТЬ Факт\n\t|ИЗ\n\t|\tРегистрНакопления.усОстаткиТоваров.Остатки(&ДатаДокумента, Контейнер В (&Контейнеры)) КАК усОстаткиТоваровОстатки\n\t|ГДЕ\n\t|\tусОстаткиТоваровОстатки.КоличествоОстаток > 0\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусКонтрольОтгрузкиОбороты.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,\n\t|\tусКонтрольОтгрузкиОбороты.Номенклатура КАК Номенклатура,\n\t|\tусКонтрольОтгрузкиОбороты.КоличествоЗапланированоОборот КАК КоличествоПлан\n\t|ПОМЕСТИТЬ План\n\t|ИЗ\n\t|\tРегистрНакопления.усКонтрольОтгрузки.Обороты(\n\t|\t\t\t&НачалоПериода,\n\t|\t\t\t&ДатаДокумента,\n\t|\t\t\t,\n\t|\t\t\tЗаказНаОтгрузку В\n\t|\t\t\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\t\t\tЗаказы.Заказ\n\t|\t\t\t\t\tИЗ\n\t|\t\t\t\t\t\tЗаказы)\n\t|\t\t\t\tИ Номенклатура В\n\t|\t\t\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\t\t\tФакт.НоменклатураСсылка\n\t|\t\t\t\t\tИЗ\n\t|\t\t\t\t\t\tФакт)) КАК усКонтрольОтгрузкиОбороты\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tЕСТЬNULL(План.ЗаказНаОтгрузку, Факт.Заказ) КАК Заказ,\n\t|\tЕСТЬNULL(План.Номенклатура, Факт.НоменклатураСсылка) КАК НоменклатураСсылка,\n\t|\tЕСТЬNULL(План.КоличествоПлан, 0) КАК КоличествоПлан,\n\t|\tЕСТЬNULL(Факт.КоличествоФакт, 0) КАК КоличествоФакт\n\t|ПОМЕСТИТЬ Строки\n\t|ИЗ\n\t|\tПлан КАК План\n\t|\t\tПОЛНОЕ СОЕДИНЕНИЕ Факт КАК Факт\n\t|\t\tПО План.ЗаказНаОтгрузку = Факт.Заказ\n\t|\t\t\tИ План.Номенклатура = Факт.НоменклатураСсылка\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tСтроки.Заказ КАК Заказ,\n\t|\tСтроки.НоменклатураСсылка КАК НоменклатураСсылка,\n\t|\tСтроки.НоменклатураСсылка.КодКИС КАК КодКИС,\n\t|\tСтроки.НоменклатураСсылка.Представление КАК Номенклатура,\n\t|\tСтроки.НоменклатураСсылка.ЕдиницаИзмерения.Код КАК КодЕИ,\n\t|\tСтроки.НоменклатураСсылка.ЕдиницаИзмерения.Представление КАК ЕИ,\n\t|\tСтроки.КоличествоПлан КАК КоличествоПлан,\n\t|\tСтроки.КоличествоФакт КАК КоличествоФакт\n\t|ИЗ\n\t|\tСтроки КАК Строки\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусПоложениеОбъектовЦМТОстатки.Контейнер КАК Контейнер,\n\t|\tусПоложениеОбъектовЦМТОстатки.Объект КАК Объект,\n\t|\tусПоложениеОбъектовЦМТОстатки.КоличествоОстаток КАК КоличествоОстаток\n\t|ПОМЕСТИТЬ ОстаткиОбъектовЦМТ\n\t|ИЗ\n\t|\tРегистрНакопления.усПоложениеОбъектовЦМТ.Остатки(&ДатаДокумента, Контейнер В (&Контейнеры)) КАК усПоложениеОбъектовЦМТОстатки\n\t|ГДЕ\n\t|\tусПоложениеОбъектовЦМТОстатки.КоличествоОстаток > 0\n\t|\n\t|ОБЪЕДИНИТЬ ВСЕ\n\t|\n\t|ВЫБРАТЬ\n\t|\tусПоложениеТранспортныхУпаковокЦМТОстатки.Контейнер,\n\t|\tусСоставТранспортныхУпаковокЦМТОстатки.Объект,\n\t|\tусСоставТранспортныхУпаковокЦМТОстатки.КоличествоОстаток\n\t|ИЗ\n\t|\tРегистрНакопления.усПоложениеТранспортныхУпаковокЦМТ.Остатки(&ДатаДокумента, Контейнер В (&Контейнеры)) КАК усПоложениеТранспортныхУпаковокЦМТОстатки\n\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.усСоставТранспортныхУпаковокЦМТ.Остатки(&ДатаДокумента, ) КАК усСоставТранспортныхУпаковокЦМТОстатки\n\t|\t\tПО усПоложениеТранспортныхУпаковокЦМТОстатки.ТранспортнаяУпаковка = усСоставТранспортныхУпаковокЦМТОстатки.ТранспортнаяУпаковка\n\t|ГДЕ\n\t|\tусПоложениеТранспортныхУпаковокЦМТОстатки.КоличествоОстаток > 0\n\t|\tИ усСоставТранспортныхУпаковокЦМТОстатки.КоличествоОстаток > 0\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусРеквизитыОбъектовЦМТСрезПоследних.Номенклатура КАК НоменклатураСсылка,\n\t|\tОстаткиОбъектовЦМТ.КоличествоОстаток КАК КоличествоОстаток,\n\t|\tОстаткиОбъектовЦМТ.Объект КАК Объект,\n\t|\tОстаткиОбъектовЦМТ.Объект.Представление КАК КодЦМТ,\n\t|\tОстаткиОбъектовЦМТ.Контейнер.ДокументПривязки КАК Заказ\n\t|ИЗ\n\t|\tОстаткиОбъектовЦМТ КАК ОстаткиОбъектовЦМТ\n\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.усРеквизитыОбъектовЦМТ.СрезПоследних(&ДатаДокумента, ) КАК усРеквизитыОбъектовЦМТСрезПоследних\n\t|\t\tПО ОстаткиОбъектовЦМТ.Объект = усРеквизитыОбъектовЦМТСрезПоследних.Объект\";\n\n\tРезультатЗапроса\t= Запрос.ВыполнитьПакет();\n\tДанныеШапка  = РезультатЗапроса[0].Выгрузить();\n\tДанныеСтроки = РезультатЗапроса[4].Выгрузить();\n\tДанныеЦМТ\t = РезультатЗапроса[6].Выгрузить();\n\n\t// Подготовим данные таблицы шапки документа \n\tШапка = Новый ТаблицаЗначений;\n\tШапка.Колонки.Добавить(\"Заказ\"); \n\tШапка.Колонки.Добавить(\"ДанныеНомера\");\n\tШапка.Колонки.Добавить(\"НаправлениеОтгрузки\");\n\tШапка.Колонки.Добавить(\"ДокументОснованиеКИС\");       \n\tШапка.Колонки.Добавить(\"НомерКИС\");\n\tШапка.Колонки.Добавить(\"ДанныеОрганизации\");\n\tШапка.Колонки.Добавить(\"ОКПО\");\n\tШапка.Колонки.Добавить(\"Поклажедатель\");\n\tШапка.Колонки.Добавить(\"Контрагент\");\n\tШапка.Колонки.Добавить(\"ДатаДокумента\");\n\tШапка.Колонки.Добавить(\"НомерКонтейнера\");\n\tШапка.Колонки.Добавить(\"Автор\");\n\tШапка.Колонки.Добавить(\"Согласующий\");\n\t\n\t// Заполним данные таблицы шапки документа\n\tДля Каждого Строка Из ДанныеШапка Цикл\n\t\tНоваяСтрока = Шапка.Добавить();\n\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);\n\t\tЕсли ЗначениеЗаполнено(Строка.ОрганизацияСсылка) Тогда\n\t\t\tПредставление = ПолучитьКонтактнуюИнформацию(Строка.ОрганизацияСсылка);\n\t\t\tДанныеОрганизации\t= Строка.Организация + \n\t\t\t\t?(ЗначениеЗаполнено(Строка.ОрганизацияИНН), \", ИНН \" + Строка.ОрганизацияИНН, \"\") +\n\t\t\t\t?(ЗначениеЗаполнено(Строка.ОрганизацияКПП), \", \" + Строка.ОрганизацияКПП, \"\") + \n\t\t\t\t?(ЗначениеЗаполнено(Представление), \", \" + Представление, \"\");\n\t\t\tНоваяСтрока.ДанныеОрганизации = ДанныеОрганизации;\n\t\tКонецЕсли; \n\t\t\n\t\tНоваяСтрока.ДанныеНомера\t= Строка.Номер; \n\t\tНоваяСтрока.ДатаДокумента\t= Формат(ДатаДокумента, \"ДФ=dd.MM.yyyy\");\n\tКонецЦикла;\n\n\tСтруктураДанныхДляПечати = Новый Структура;\n\tСтруктураДанныхДляПечати.Вставить(\"Шапка\",  Шапка);\n\tСтруктураДанныхДляПечати.Вставить(\"Строки\", ДанныеСтроки); \n\tСтруктураДанныхДляПечати.Вставить(\"ЦМТ\", \tДанныеЦМТ);\n\n\tВозврат СтруктураДанныхДляПечати;\n\nКонецФункции\n\nПроцедура ЗаполнитьТабличныйДокументМ11(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати)\n\n\tДанныеШапка  = ДанныеДляПечати.Шапка;\n\tДанныеСтроки = ДанныеДляПечати.Строки;\n\tДанныеЦМТ\t = ДанныеДляПечати.ЦМТ;\n\n\tЕсли НЕ ДанныеСтроки.Количество() Тогда\n\t\tВозврат;\n\tКонецЕсли;\n\n\tтекШаблон = УправлениеПечатью.МакетПечатнойФормы(\"Справочник.усКонтейнеры.ПФ_MXL_М11_К\");\n\n\tОбластьЗаголовок = текШаблон.ПолучитьОбласть(\"Заголовок\");\n\tОбластьШапка \t = текШаблон.ПолучитьОбласть(\"Шапка\");\n\tОбластьСтроки \t = текШаблон.ПолучитьОбласть(\"Строка\");\n\tОбластьПодвал\t = текШаблон.ПолучитьОбласть(\"Подвал\");\n\tОбластьИтог\t\t = текШаблон.ПолучитьОбласть(\"Итог\");\n\n\tДля Каждого текСтрокаШапка Из ДанныеШапка Цикл\n      \tОбластьЗаголовок.Параметры.Заполнить(текСтрокаШапка);\n\t\tОбластьЗаголовок.Параметры.ТекущийПользователь\t= ПараметрыСеанса.ТекущийПользователь;\n\n\t\tНомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;\n\t\tТабличныйДокумент.Вывести(ОбластьЗаголовок);\n\t\tТабличныйДокумент.Вывести(ОбластьШапка);\n\n\t\tсткОтбор  = Новый Структура(\"Заказ\", текСтрокаШапка.Заказ);\n\t\tмсвСтроки = ДанныеСтроки.НайтиСтроки(сткОтбор);\n\n\t   \tИтогоПлан = 0; \n\t\tИтогоФакт = 0;\n\n\t\tСтрокаНомер = 1;\n\t\tКоличествоСтрок = мсвСтроки.Количество();\n\t\tДля Каждого текЭлементСтрока Из мсвСтроки Цикл\n\t\t\tОбластьСтроки.Параметры.Заполнить(текЭлементСтрока);\t\t\t\n\t\t\t\n\t\t\tСтруктураПоиска\t= Новый Структура(\"Заказ, НоменклатураСсылка\"); \n\t\t\tЗаполнитьЗначенияСвойств(СтруктураПоиска, текЭлементСтрока);\n\t\t\tНайденныеСтроки\t= ДанныеЦМТ.НайтиСтроки(СтруктураПоиска);\n\t\t\tСтрокаЦМТ\t= \"\";\n\t\t\tДля каждого НайденнаяСтрока Из НайденныеСтроки Цикл\n\t\t\t\tСтрокаЦМТ\t= СтрокаЦМТ + НайденнаяСтрока.КодЦМТ + \"; \";\n\t\t\tКонецЦикла;  \n\t\t\tСтрокаЦМТ\t= Лев(СтрокаЦМТ, СтрДлина(СтрокаЦМТ) - 2); \n\t\t\tОбластьСтроки.Параметры.СерийныеНомера\t= СтрокаЦМТ;\n\n\t\t\tСтрокаСПодвалом = Новый Массив;\n\t\t\tСтрокаСПодвалом.Добавить(ОбластьСтроки);\n\t\t\tЕсли СтрокаНомер = КоличествоСтрок Тогда\n\t\t\t\tСтрокаСПодвалом.Добавить(ОбластьИтог);\n\t\t\t\tСтрокаСПодвалом.Добавить(ОбластьПодвал);\n\t\t\tКонецЕсли;\n\t\t\tПопытка\n\t\t\t\tЕсли ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда\n\t\t\t\t\tТабличныйДокумент.Вывести(ОбластьСтроки);\n\t\t\t\tИначе\n\t\t\t\t\tТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();\n\t\t\t\t\tТабличныйДокумент.Вывести(ОбластьШапка);\n\t\t\t\t\tТабличныйДокумент.Вывести(ОбластьСтроки);\n\t\t\t\tКонецЕсли;\n\t\t\tИсключение\n\t\t\t\tТабличныйДокумент.Вывести(ОбластьСтроки);\n\t\t\tКонецПопытки;\n\t\t\tИтогоПлан = ИтогоПлан + текЭлементСтрока.КоличествоПлан;\n\t\t\tИтогоФакт = ИтогоФакт + текЭлементСтрока.КоличествоФакт;\n\n\t\t\tСтрокаНомер = СтрокаНомер + 1;\n\t\tКонецЦикла;\n\t\t\n\t\tОбластьИтог.Параметры.КоличествоФактИтог\t= ИтогоФакт;\n\t\tТабличныйДокумент.Вывести(ОбластьИтог);\n\t\t\n\t\tОбластьПодвал.Параметры.ТекущийПользователь\t= ПараметрыСеанса.ТекущийПользователь; \n\t\tОбластьПодвал.Параметры.Контрагент\t\t\t= текСтрокаШапка.Контрагент;\n\t\tТабличныйДокумент.Вывести(ОбластьПодвал);\n\t\t\n\t\tУправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, текСтрокаШапка.Заказ);\n\t\tТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();\n\tКонецЦикла;\n\nКонецПроцедуры\n\nФункция ПолучитьКонтактнуюИнформацию(Объект, ТипИнформации = Неопределено, ВидИнформации = Неопределено)\n\n\tтекКонструктор = Новый ПостроительЗапроса;\n\tтекКонструктор.Текст =\n\t\"ВЫБРАТЬ\n\t|\tтбИнформация.Представление,\n\t|\tтбИнформация.Тип.Порядок КАК ТипПорядок\n\t|ИЗ\n\t|\tСправочник.Организации.КонтактнаяИнформация КАК тбИнформация\n\t|ГДЕ\n\t|\tтбИнформация.Ссылка = &Ссылка\n\t|\tИ тбИнформация.Тип В(&Типы)\n\t|{ГДЕ\n\t|\tтбИнформация.Вид.*}\n\t|\n\t|ОБЪЕДИНИТЬ ВСЕ\n\t|\n\t|ВЫБРАТЬ\n\t|\tтбИнформация.Представление,\n\t|\tтбИнформация.Тип.Порядок\n\t|ИЗ\n\t|\tСправочник.усКонтрагенты.КонтактнаяИнформация КАК тбИнформация\n\t|ГДЕ\n\t|\tтбИнформация.Ссылка = &Ссылка\n\t|\tИ тбИнформация.Тип В(&Типы)\n\t|{ГДЕ\n\t|\tтбИнформация.Вид.*}\n\t|\n\t|УПОРЯДОЧИТЬ ПО\n\t|\tТипПорядок\";\n\n\tмсвТипыКИ = Новый Массив;\n\tЕсли ЗначениеЗаполнено(ТипИнформации) Тогда\n\t\tмсвТипыКИ.Добавить(ТипИнформации);\n\tИначе\n\t\tмсвТипыКИ.Добавить(Перечисления.ТипыКонтактнойИнформации.Адрес);\n\t\tмсвТипыКИ.Добавить(Перечисления.ТипыКонтактнойИнформации.Телефон);\n\t\tмсвТипыКИ.Добавить(Перечисления.ТипыКонтактнойИнформации.Факс);\n\tКонецЕсли;\n\tЕсли ЗначениеЗаполнено(ВидИнформации) Тогда\n\t\tтекЭлемент = текКонструктор.Отбор.Добавить(\"Вид\");\n\t\tтекЭлемент.ВидСравнения  = ВидСравнения.ВСписке;\n\t\tтекЭлемент.Значение      = ВидИнформации;\n\t\tтекЭлемент.Использование = Истина;\n\tКонецЕсли;\n\n\tтекКонструктор.Параметры.Вставить(\"Ссылка\", Объект);\n\tтекКонструктор.Параметры.Вставить(\"Типы\", мсвТипыКИ);\n\n\tтекКонструктор.Выполнить();\n\tтекВыборка = текКонструктор.Результат.Выбрать();\n\n\tтекПредставление = \"\";\n\tПока текВыборка.Следующий() Цикл\n\t\tтекПредставление = текПредставление +?(ПустаяСтрока(текПредставление), \"\", \", \") + СокрЛП(текВыборка.Представление);\n\tКонецЦикла;\n\n\tВозврат текПредставление;\n\nКонецФункции",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усКонтейнеры\\CatalogForm\\ФормаВыбора\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усКонтейнеры\\CatalogForm\\ФормаВыбора\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/c1b1cc668216d2ce9b9d5ff69b115cb0088e2f3d/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D1%8B%5CCatalogForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%92%D1%8B%D0%B1%D0%BE%D1%80%D0%B0%5CCatalogForm.obj.bsl",
            "size": 435,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)\n\tЕсли Параметры.Свойство(\"ПоказыватьФиксированные\") Тогда \n\t\tСписок.КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();\n\tКонецЕсли;\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усКонтейнеры\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усКонтейнеры\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/68922de95fac83b260df95567b51feceb03280cc/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D1%8B%5CCatalogForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%AD%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CCatalogForm.obj.bsl",
            "size": 397,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка) //Ситек Николаев 22346 ++\n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка); \t\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усКонтрагенты\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усКонтрагенты\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/c3af859348459f301c62331ca4d08950adeae68a/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9A%D0%BE%D0%BD%D1%82%D1%80%D0%B0%D0%B3%D0%B5%D0%BD%D1%82%D1%8B%5CCatalogForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%AD%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CCatalogForm.obj.bsl",
            "size": 395,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)//Ситек Николаев 193695 ++\n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усМоделиУчетаНоменклатуры\\Catalog.mgr.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усМоделиУчетаНоменклатуры\\Catalog.mgr.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/0aafc83cb2598e1e1bcee651f6d4c5425415cb6a/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9C%D0%BE%D0%B4%D0%B5%D0%BB%D0%B8%D0%A3%D1%87%D0%B5%D1%82%D0%B0%D0%9D%D0%BE%D0%BC%D0%B5%D0%BD%D0%BA%D0%BB%D0%B0%D1%82%D1%83%D1%80%D1%8B%5CCatalog.mgr.bsl",
            "size": 5881,
            "truncated": false,
            "content": "&ИзменениеИКонтроль(\"РазобратьШаблонНаименованияПартии\")\nФункция Бюро1440_РазобратьШаблонНаименованияПартии(СтрокаШаблона)\n\n\tШаблон     = \"\";\n\tФорматДаты = \"\";\n\n\tтекШаблон = СтрокаШаблона;\n\n\tНачатаСтрока = Ложь;\n\tтекСтрока    = \"\";\n\tтекПараметр  = \"\";\n\n\tПока СтрДлина(текШаблон) > 0 Цикл\n\t\tСимвол    = Лев(текШаблон, 1);\n\t\tтекШаблон = Сред(текШаблон, 2);\n\n\t\tЕсли Символ = \"\"\"\" Тогда\n\t\t\tЕсли НачатаСтрока Тогда\n\t\t\t\tЕсли Лев(текШаблон, 1) = \"\"\"\" Тогда\n\t\t\t\t\tтекШаблон = Сред(текШаблон, 2);\n\t\t\t\t\tтекСтрока = текСтрока + \"\"\"\";\n\t\t\t\tИначе\n\t\t\t\t\tНачатаСтрока = Ложь;\n\t\t\t\t\tШаблон       = Шаблон + текСтрока;\n\t\t\t\tКонецЕсли;\n\t\t\tИначе\n\t\t\t\tНачатаСтрока = Истина;\n\t\t\t\tтекСтрока    = \"\";\n\t\t\tКонецЕсли;\n\t\tИначеЕсли НачатаСтрока Тогда\n\t\t\tтекСтрока = текСтрока + Символ;\n\t\tИначеЕсли Символ = \" \" ИЛИ Символ = \"+\" Тогда\n\t\t\tЕсли ЗначениеЗаполнено(текПараметр) Тогда\n\t\t\t\tЕсли текПараметр = \"Код\" Тогда\n\t\t\t\t\tШаблон = Шаблон + НСтр(\"ru='[Номер партии]';\n\t\t\t\t\t\t|en='[Номер партии]'\");\n\t\t\t\tИначеЕсли текПараметр = \"ДатаПартии\" Тогда\n\t\t\t\t\tШаблон = Шаблон + НСтр(\"ru='[Дата партии]';\n\t\t\t\t\t\t|en='[Дата партии]'\");\n\t\t\t\tИначеЕсли текПараметр = \"ДатаПроизводства\" Тогда\n\t\t\t\t\tШаблон = Шаблон + НСтр(\"ru='[Дата производства]';\n\t\t\t\t\t\t|en='[Дата производства]'\");\n\t\t\t\tИначеЕсли текПараметр = \"СрокГодности\" Тогда\n\t\t\t\t\tШаблон = Шаблон + НСтр(\"ru='[Срок годности]';\n\t\t\t\t\t\t|en='[Срок годности]'\");\n\t\t\t\tИначеЕсли текПараметр = \"НомерДокументаПоступления\" Тогда\n\t\t\t\t\tШаблон = Шаблон + НСтр(\"ru='[Номер документа поступления]';\n\t\t\t\t\t\t|en='[Номер документа поступления]'\");\n\t\t\t\tИначеЕсли текПараметр = \"Поклажедатель\" Тогда\n\t\t\t\t\tШаблон = Шаблон + НСтр(\"ru='[Поклажедатель]';\n\t\t\t\t\t\t|en='[Поклажедатель]'\");\n\t\t\t\tКонецЕсли;\n\t\t\t\tтекПараметр = \"\";\n\t\t\tКонецЕсли;\n\n\t\tИначеЕсли Символ = \"(\" Тогда\n\t\t\tЕсли текПараметр = \"Формат\" Тогда\n\n\t\t\t\tНомерСкобки = СтрНайти(текШаблон, \")\");\n\n\t\t\t\tтекФункция = Лев(текШаблон, НомерСкобки - 2);\n\t\t\t\tтекШаблон  = Сред(текШаблон, НомерСкобки + 1);\n\n\t\t\t\tЕсли СтрНайти(текФункция, \"ДатаПартии\") Тогда\n\t\t\t\t\tШаблон = Шаблон + НСтр(\"ru='[Дата партии]';\n\t\t\t\t\t\t|en='[Дата партии]'\");\n\t\t\t\t\tФорматДаты = Сред(текФункция, 14);\n\n\t\t\t\tИначеЕсли СтрНайти(текФункция, \"ДатаПроизводства\") Тогда\n\t\t\t\t\tШаблон = Шаблон + НСтр(\"ru='[Дата производства]';\n\t\t\t\t\t\t|en='[Дата производства]'\");\n\t\t\t\t\tФорматДаты = Сред(текФункция, 20);\n\n\t\t\t\tИначеЕсли СтрНайти(текФункция, \"СрокГодности\") Тогда\n\t\t\t\t\tШаблон = Шаблон + НСтр(\"ru='[Срок годности]';\n\t\t\t\t\t\t|en='[Срок годности]'\");\n\t\t\t\t\tФорматДаты = Сред(текФункция, 16);\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\t\tтекПараметр = \"\";\n\t\tИначеЕсли Символ = \")\" Тогда\n\t\t\tПродолжить;\n\t\tИначе\n\t\t\tтекПараметр = текПараметр + Символ;\n\t\tКонецЕсли;\n\tКонецЦикла;\n\n\tЕсли ЗначениеЗаполнено(текПараметр) Тогда\n\t\tЕсли текПараметр = \"Код\" Тогда\n\t\t\tШаблон = Шаблон + НСтр(\"ru='[Номер партии]';\n\t\t\t\t\t\t|en='[Номер партии]'\");\n\t\tИначеЕсли текПараметр = \"ДатаПартии\" Тогда\n\t\t\tШаблон = Шаблон + НСтр(\"ru='[Дата партии]';\n\t\t\t\t\t\t|en='[Дата партии]'\");\n\t\tИначеЕсли текПараметр = \"ДатаПроизводства\" Тогда\n\t\t\tШаблон = Шаблон + НСтр(\"ru='[Дата производства]';\n\t\t\t\t\t\t|en='[Дата производства]'\");\n\t\tИначеЕсли текПараметр = \"СрокГодности\" Тогда\n\t\t\tШаблон = Шаблон + НСтр(\"ru='[Срок годности]';\n\t\t\t\t\t\t|en='[Срок годности]'\");\n\t\tИначеЕсли текПараметр = \"НомерДокументаПоступления\" Тогда\n\t\t\tШаблон = Шаблон + НСтр(\"ru='[Номер документа поступления]';\n\t\t\t\t\t\t|en='[Номер документа поступления]'\");\n\t\tИначеЕсли текПараметр = \"Поклажедатель\" Тогда\n\t\t\tШаблон = Шаблон + НСтр(\"ru='[Поклажедатель]';\n\t\t\t\t\t\t|en='[Поклажедатель]'\");\n\t\tКонецЕсли;\n\t\tтекПараметр = \"\";\n\tКонецЕсли;\n\n\tВозврат Новый Структура(\"Шаблон, ФорматДаты\", Шаблон, ФорматДаты);\n\nКонецФункции",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усНаправлениеОтгрузки\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усНаправлениеОтгрузки\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/f1cbaa04d29317b865a399b69892ed4c730b886a/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9D%D0%B0%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%D0%9E%D1%82%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D0%B8%5CCatalogForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%AD%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CCatalogForm.obj.bsl",
            "size": 398,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка) //Ситек Николаев 06.03.24 ++\n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усНоменклатура\\Catalog.mgr.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усНоменклатура\\Catalog.mgr.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/ab96f4d9b80b152d807d6da529470dc1abbe545b/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9D%D0%BE%D0%BC%D0%B5%D0%BD%D0%BA%D0%BB%D0%B0%D1%82%D1%83%D1%80%D0%B0%5CCatalog.mgr.bsl",
            "size": 3170,
            "truncated": false,
            "content": "&После(\"ОбработкаПолученияДанныхВыбора\")\nПроцедура Бюро1440_ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)\n\tСтандартнаяОбработка = Ложь;\n\t\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст = \"ВЫБРАТЬ\n\t               |\tусНоменклатура.Ссылка КАК Ссылка,\n\t               |\tусНоменклатура.Представление КАК Представление,\n\t               |\tусНоменклатура.Код КАК Код,\n\t               |\tусНоменклатура.Наименование КАК Наименование,\n\t               |\tусНоменклатура.Артикул КАК Артикул,\n\t               |\tусНоменклатура.КодКИС КАК КодКИС\n\t               |ИЗ\n\t               |\tСправочник.усНоменклатура КАК усНоменклатура\n\t               |ГДЕ\n\t               |\tИСТИНА\";\n\t\n\tЕсли ЗначениеЗаполнено(Параметры.СтрокаПоиска) Тогда\n\t\tЗапрос.Текст = Запрос.Текст + \"\n\t\t|\tИ (усНоменклатура.Код ПОДОБНО &СтрокаПоиска\n\t\t|\tИЛИ усНоменклатура.Наименование ПОДОБНО &СтрокаПоиска\n\t\t|\tИЛИ усНоменклатура.Артикул ПОДОБНО &СтрокаПоиска\n\t\t|\tИЛИ усНоменклатура.КодКИС ПОДОБНО &СтрокаПоиска)\";\n\t\tЗапрос.УстановитьПараметр(\"СтрокаПоиска\", \"%\" + Параметры.СтрокаПоиска + \"%\");\n\tКонецЕсли;\n\t\n\tДанныеВыбора = Новый СписокЗначений;\n\tВыборка = Запрос.Выполнить().Выбрать();\n\tПока Выборка.Следующий() Цикл  \n\t\tЕсли Выборка.КодКИС = Параметры.СтрокаПоиска Тогда\n\t\t\tПредставление\t= Выборка.КодКИС + \" (\" + Выборка.Представление + \")\";\n\t\tИначеЕсли Выборка.Артикул = Параметры.СтрокаПоиска Тогда\n\t\t\tПредставление\t= Выборка.Артикул + \" (\" + Выборка.Представление + \")\";\n\t\tИначеЕсли Выборка.Код = Параметры.СтрокаПоиска Тогда\n\t\t\tПредставление\t= Выборка.Код + \" (\" + Выборка.Представление + \")\";\n\t\tИначе\n\t\t\tЕсли ЗначениеЗаполнено(Выборка.КодКИС) Тогда\n\t\t\t\tПредставление\t= Выборка.КодКИС + \" (\" + Выборка.Представление + \")\";\n\t\t\tИначе\n\t\t\t\tПредставление\t= Выборка.Представление;\n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\n\t\tДанныеВыбора.Добавить(Выборка.Ссылка, Представление);\n\tКонецЦикла;\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усНоменклатура\\Catalog.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усНоменклатура\\Catalog.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/00f19585a7d1ba8821f743837b1f3d9e2ae3fa6f/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9D%D0%BE%D0%BC%D0%B5%D0%BD%D0%BA%D0%BB%D0%B0%D1%82%D1%83%D1%80%D0%B0%5CCatalog.obj.bsl",
            "size": 920,
            "truncated": false,
            "content": "// ++ Ситек Ситников А.В. 29.10.2024 Перевод номенклатуры на учёт в разрезе сроков годности\n\n&Перед(\"ОбработкаПроверкиЗаполнения\")\nПроцедура Бюро1440_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)\n\n\tОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, \"СрокХранения\");\n\tОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, \"ПериодСрокаХранения\");\n\nКонецПроцедуры\n// -- Ситек Ситников А.В. 29.10.2024 Перевод номенклатуры на учёт в разрезе сроков годности",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усНоменклатура\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усНоменклатура\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/376613d6ee92329adb44679ca7be75a0e6ca87ee/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9D%D0%BE%D0%BC%D0%B5%D0%BD%D0%BA%D0%BB%D0%B0%D1%82%D1%83%D1%80%D0%B0%5CCatalogForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%AD%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CCatalogForm.obj.bsl",
            "size": 401,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)   \n\t//Ситек Николаев 193695 ++ \n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усПартииНоменклатуры\\Catalog.mgr.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усПартииНоменклатуры\\Catalog.mgr.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/57defd6e8cc98aadc29d416401923af5c79a079e/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9F%D0%B0%D1%80%D1%82%D0%B8%D0%B8%D0%9D%D0%BE%D0%BC%D0%B5%D0%BD%D0%BA%D0%BB%D0%B0%D1%82%D1%83%D1%80%D1%8B%5CCatalog.mgr.bsl",
            "size": 1796,
            "truncated": false,
            "content": "&ИзменениеИКонтроль(\"ПолучитьНаименованиеПартииПоШаблону\")\nФункция Бюро1440_ПолучитьНаименованиеПартииПоШаблону(Знач РеквизитыПартии, ШаблонНаименования)\n\t\n\tШаблон = ШаблонНаименования;\n\t\n\tШаблон = СтрЗаменить(Шаблон, \"Код\", \t\t\t\t\t  \"Параметры.Код\");\n\tШаблон = СтрЗаменить(Шаблон, \"НомерДокументаПоступления\", \"Параметры.НомерДокументаПоступления\");\n\tШаблон = СтрЗаменить(Шаблон, \"ДатаПартии\", \t\t \t\t  \"Параметры.ДатаПартии\");\n\tШаблон = СтрЗаменить(Шаблон, \"ДатаПроизводства\", \t\t  \"Параметры.ДатаПроизводства\");\n\tШаблон = СтрЗаменить(Шаблон, \"СрокГодности\", \t  \t\t  \"Параметры.СрокГодности\");\n\tШаблон = СтрЗаменить(Шаблон, \"Поклажедатель\", \t  \t\t  \"Параметры.Поклажедатель\");\n\t\n\tРеквизитыПартии.Вставить(\"Результат\", \"\"); \n\t\n\tПопытка\t\t\n\t\tОбщегоНазначения.ВыполнитьВБезопасномРежиме(\"Параметры.Результат = \" + Шаблон, РеквизитыПартии);\n\tИсключение\n\t\tВызватьИсключение НСтр(\"ru='Не удалось сформировать наименование партии';\n\t\t\t|en='Cannot generate a batch name'\");\n\tКонецПопытки;\n\t\n\tВозврат СокрЛП(РеквизитыПартии.Результат);\n\t\nКонецФункции",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усПартииНоменклатуры\\Catalog.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усПартииНоменклатуры\\Catalog.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/ea4741cab98e5b4a42c4f9a6ddecb22a2d3f80b2/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9F%D0%B0%D1%80%D1%82%D0%B8%D0%B8%D0%9D%D0%BE%D0%BC%D0%B5%D0%BD%D0%BA%D0%BB%D0%B0%D1%82%D1%83%D1%80%D1%8B%5CCatalog.obj.bsl",
            "size": 6109,
            "truncated": false,
            "content": "&ИзменениеИКонтроль(\"ПередЗаписью\")\nПроцедура Бюро1440_ПередЗаписью(Отказ)\n\t\n\tЕсли ОбменДанными.Загрузка Тогда\n\t\tВозврат;\n\tКонецЕсли;\n\t\t\n\tЕсли Не ЗначениеЗаполнено(СрокГодности) И ЗначениеЗаполнено(ДатаПроизводства) Тогда \n\t\tсткДанные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Владелец, Новый Структура(\"ВестиУчетПоСрокамГодности, СрокХранения\", \"МодельУчета.ВестиУчетПоСрокамГодности\", \"СрокХранения\"));\n\t\tЕсли ПолучитьФункциональнуюОпцию(\"усИспользуетсяУчетСрокаГодностиТовара\") И сткДанные.ВестиУчетПоСрокамГодности И Не сткДанные.СрокХранения Тогда\n\t\t\tВызватьИсключение НСтр(\"ru='Не указан срок хранения';\n\t\t\t\t|en='Shelf life is not specified'\");\n\t\tКонецЕсли;\n\t\t\n\t\tСрокГодности     = ДатаПроизводства + (сткДанные.СрокХранения * 86400);\n\t\tДатаПроизводства = СрокГодности - (сткДанные.СрокХранения * 86400);\n\t\n\tИначеЕсли ЗначениеЗаполнено(СрокГодности) И НЕ ЗначениеЗаполнено(ДатаПроизводства) Тогда\n\t\tсткДанные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Владелец, Новый Структура(\"ВестиУчетПоСрокамГодности, СрокХранения\", \"МодельУчета.ВестиУчетПоСрокамГодности\", \"СрокХранения\"));\n\t\tЕсли ПолучитьФункциональнуюОпцию(\"усИспользуетсяУчетСрокаГодностиТовара\") И сткДанные.ВестиУчетПоСрокамГодности И Не сткДанные.СрокХранения Тогда\n\t\t\tВызватьИсключение НСтр(\"ru='Не указан срок хранения';\n\t\t\t\t|en='Shelf life is not specified'\");\n\t\tКонецЕсли;\n\t\tДатаПроизводства = СрокГодности - (сткДанные.СрокХранения * 86400);\n\tКонецЕсли;\t\n\t\t\t\n\tЕсли ЭтоНовый() И Не ЗначениеЗаполнено(Наименование) Тогда \n\t\tШаблон = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Владелец, Новый Структура(\"ШаблонНаименованияПартии\", \"МодельУчета.ШаблонНаименованияПартии\")).ШаблонНаименованияПартии;\n\t\t\n\t\tРеквизитыПартии = Новый Структура;\n\t\tРеквизитыПартии.Вставить(\"Код\", \t\t\t\t\t  Код);\n\t\tРеквизитыПартии.Вставить(\"ДатаПартии\", \t\t\t   \t  ДатаПартии);\n\t\tРеквизитыПартии.Вставить(\"СрокГодности\", \t\t\t  СрокГодности);\n\t\tРеквизитыПартии.Вставить(\"ДатаПроизводства\", \t\t  ДатаПроизводства);\n\t\tРеквизитыПартии.Вставить(\"НомерДокументаПоступления\", НомерДокументаПоступления);\n\t\t#Вставка  \n\t\t// ++ Ситек Булдаков 28.12.23   \n\t\tЕсли ЗначениеЗаполнено(Поклажедатель) Тогда\n\t\t\tПредставлениеПоклажедателя\t= Строка(Поклажедатель);\n\t\tИначе\n\t\t\tПредставлениеПоклажедателя\t= \"\";\n\t\tКонецЕсли;\n\t\tРеквизитыПартии.Вставить(\"Поклажедатель\", ПредставлениеПоклажедателя);\n\t\t// -- Ситек Булдаков 28.12.23\n\t\t#КонецВставки\n\t\t\n\t\tПопытка\t\n\t\t\tНаименование = Справочники.усПартииНоменклатуры.ПолучитьНаименованиеПартииПоШаблону(РеквизитыПартии, Шаблон);\n\t\tИсключение\n\t\t\tВызватьИсключение НСтр(\"ru='Не удалось сформировать наименование партии';\n\t\t\t\t|en='Cannot generate a batch name'\");\n\t\tКонецПопытки;\n\t\t\n\t\tЕсли Не ЗначениеЗаполнено(Наименование) Тогда\n\t\t\tВызватьИсключение НСтр(\"ru='Не указано наименование';\n\t\t\t\t|en='Description is not specified'\");\n\t\tКонецЕсли;\n\tКонецЕсли;\n\t\t\t\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст = \n\t\"ВЫБРАТЬ ПЕРВЫЕ 1\n\t|\tусПартииНоменклатуры.Ссылка\n\t|ИЗ\n\t|\tСправочник.усПартииНоменклатуры КАК усПартииНоменклатуры\n\t|ГДЕ\n\t|\tусПартииНоменклатуры.Владелец = &Владелец\n\t|\tИ усПартииНоменклатуры.Наименование = &Наименование\n\t|\tИ усПартииНоменклатуры.Ссылка <> &Ссылка\";\n\tЗапрос.УстановитьПараметр(\"Владелец\",     Владелец);\n\tЗапрос.УстановитьПараметр(\"Наименование\", Наименование);\n\tЗапрос.УстановитьПараметр(\"Ссылка\",       Ссылка);\n\t\n\tВыборка = Запрос.Выполнить().Выбрать();\n\tЕсли Выборка.Следующий() Тогда \n\t\tВызватьИсключение НСтр(\"ru='Партия с таким наименованием уже существует';\n\t\t\t|en='Batch with this name already exists'\");\n\tКонецЕсли;\t\n\t\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усПартииНоменклатуры\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усПартииНоменклатуры\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/567a4bbb73ef19dbb060f1257b8294a8e443593f/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9F%D0%B0%D1%80%D1%82%D0%B8%D0%B8%D0%9D%D0%BE%D0%BC%D0%B5%D0%BD%D0%BA%D0%BB%D0%B0%D1%82%D1%83%D1%80%D1%8B%5CCatalogForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%AD%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CCatalogForm.obj.bsl",
            "size": 14681,
            "truncated": false,
            "content": "// ++ Ситек Булдаков 28.12.23\n&НаСервереБезКонтекста\nФункция Бюро1440_СформироватьАвтоНаименование_Полное(Владелец, Код, ДатаПартии, СрокГодности, ДатаПроизводства, НомерДокументаПоступления, Поклажедатель)\n\n\tНаименование = \"\";\n\n\tШаблон = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Владелец, Новый Структура(\"ШаблонНаименованияПартии\", \"МодельУчета.ШаблонНаименованияПартии\")).ШаблонНаименованияПартии;\n\n\tРеквизитыПартии = Новый Структура;\n\tРеквизитыПартии.Вставить(\"Код\", \t\t\t\t\t  Код);\n\tРеквизитыПартии.Вставить(\"ДатаПартии\", \t\t\t   \t  ДатаПартии);\n\tРеквизитыПартии.Вставить(\"СрокГодности\", \t\t\t  СрокГодности);\n\tРеквизитыПартии.Вставить(\"ДатаПроизводства\", \t\t  ДатаПроизводства);\n\tРеквизитыПартии.Вставить(\"НомерДокументаПоступления\", НомерДокументаПоступления); \n\tЕсли ЗначениеЗаполнено(Поклажедатель) Тогда\n\t\tПредставлениеПоклажедателя\t= Строка(Поклажедатель);\n\tИначе\n\t\tПредставлениеПоклажедателя\t= \"\";\n\tКонецЕсли;\n\tРеквизитыПартии.Вставить(\"Поклажедатель\", ПредставлениеПоклажедателя);\n\t\n\tНаименование = Справочники.усПартииНоменклатуры.ПолучитьНаименованиеПартииПоШаблону(РеквизитыПартии, Шаблон);\n\n\tВозврат Наименование;\n\nКонецФункции\n// -- Ситек Булдаков 28.12.23\n\n&НаСервере\n&ИзменениеИКонтроль(\"ПриСозданииНаСервере\")\nПроцедура Бюро1440_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)\n\t\n\t// СтандартныеПодсистемы.ВерсионированиеОбъектов\n\tВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);\n\t// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов\n\t\n\t// СтандартныеПодсистемы.Свойства\n\tДополнительныеПараметры = Новый Структура;\n\tДополнительныеПараметры.Вставить(\"ИмяЭлементаДляРазмещения\", \"ГруппаДополнительныеРеквизиты\");\n\tУправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);\n\t// Конец СтандартныеПодсистемы.Свойства\n\t\n\tЕсли Не ЗначениеЗаполнено(Объект.Владелец) Тогда \n\t\tОбщегоНазначения.СообщитьПользователю(НСтр(\"ru='Партия может быть создана только из номенклатуры';\n\t\t\t|en='Batch can be created only from products'\"),,,, Отказ);\n\t\tВозврат;\n\tКонецЕсли;\t\n\t\n\t#Удаление \n\tРучноеНаименование = ЗначениеЗаполнено(Объект.Наименование) И (Объект.Наименование <> СформироватьАвтоНаименование(Объект.Владелец, Объект.Код, Объект.ДатаПартии, Объект.СрокГодности, Объект.ДатаПроизводства, Объект.НомерДокументаПоступления, Объект.Поклажедатель));\n\t#КонецУдаления\n\t#Вставка  \n\t// ++ Ситек Булдаков 28.12.23\n\tРучноеНаименование = ЗначениеЗаполнено(Объект.Наименование) \n\t\tИ (Объект.Наименование <> Бюро1440_СформироватьАвтоНаименование_Полное(Объект.Владелец, Объект.Код, Объект.ДатаПартии, Объект.СрокГодности, Объект.ДатаПроизводства, Объект.НомерДокументаПоступления, Объект.Поклажедатель));\n\t// -- Ситек Булдаков 28.12.23\n\t#КонецВставки\n\t\n\tЕсли Не ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Владелец, Новый Структура(\"МодельУчетаВестиУчетПоСрокамГодности\", \"МодельУчета.ВестиУчетПоСрокамГодности\")).МодельУчетаВестиУчетПоСрокамГодности = Истина Тогда \n\t\tЭлементы.СрокГодности.Доступность = Ложь;\n\tКонецЕсли;\n\t\n\tЕсли НЕ усЦифроваяМаркировкаТоваровВызовСервера.ВестиУчетПоКодамЦМТ() Тогда\n\t\tЭлементы.ВестиУчетПоКодамЦМТ.Видимость = Ложь;\n\tКонецЕсли;\t\n\t\n\tЕсли Объект.Ссылка.Пустая() Тогда\n\t\t Объект.ВестиУчетПоКодамЦМТ = усЦифроваяМаркировкаТоваровВызовСервера.ВестиУчетПоКодамЦМТ() И Объект.Владелец.МодельУчета.ВестиУчетПоКодамЦМТ; \n\tКонецЕсли;\n\t\t\nКонецПроцедуры\n\n&НаКлиенте\n&ИзменениеИКонтроль(\"КодПриИзменении\")\nПроцедура Бюро1440_КодПриИзменении(Элемент)\n\n\tЕсли Не РучноеНаименование Тогда \n\t\t#Удаление\n\t\tОбъект.Наименование = СформироватьАвтоНаименование(Объект.Владелец, Объект.Код, Объект.ДатаПартии, Объект.СрокГодности, Объект.ДатаПроизводства, Объект.НомерДокументаПоступления, Объект.Поклажедатель);\n\t\t#КонецУдаления\n\t\t#Вставка  \n\t\t// ++ Ситек Булдаков 28.12.23\n\t\tОбъект.Наименование = Бюро1440_СформироватьАвтоНаименование_Полное(Объект.Владелец, Объект.Код, Объект.ДатаПартии, Объект.СрокГодности, Объект.ДатаПроизводства, Объект.НомерДокументаПоступления, Объект.Поклажедатель);\n\t\t// -- Ситек Булдаков 28.12.23\n\t\t#КонецВставки\n\tКонецЕсли;\n\t\nКонецПроцедуры\n\n&НаКлиенте\n&ИзменениеИКонтроль(\"ДатаПартииПриИзменении\")\nПроцедура Бюро1440_ДатаПартииПриИзменении(Элемент)\n\n\tЕсли Не РучноеНаименование Тогда \n\t\t#Удаление\n\t\tОбъект.Наименование = СформироватьАвтоНаименование(Объект.Владелец, Объект.Код, Объект.ДатаПартии, Объект.СрокГодности, Объект.ДатаПроизводства, Объект.НомерДокументаПоступления, Объект.Поклажедатель);\n\t\t#КонецУдаления \n\t\t#Вставка  \n\t\t// ++ Ситек Булдаков 28.12.23\n\t\tОбъект.Наименование = Бюро1440_СформироватьАвтоНаименование_Полное(Объект.Владелец, Объект.Код, Объект.ДатаПартии, Объект.СрокГодности, Объект.ДатаПроизводства, Объект.НомерДокументаПоступления, Объект.Поклажедатель);\n\t\t// -- Ситек Булдаков 28.12.23\n\t\t#КонецВставки\n\tКонецЕсли;\n\t\nКонецПроцедуры\n\n&НаКлиенте\n&ИзменениеИКонтроль(\"НаименованиеПриИзменении\")\nПроцедура Бюро1440_НаименованиеПриИзменении(Элемент) \n\n\t#Удаление\n\tРучноеНаименование = ЗначениеЗаполнено(Объект.Наименование) И (Объект.Наименование <> СформироватьАвтоНаименование(Объект.Владелец, Объект.Код, Объект.ДатаПартии, Объект.СрокГодности, Объект.ДатаПроизводства, Объект.НомерДокументаПоступления, Объект.Поклажедатель));\n\t#КонецУдаления\n\t#Вставка  \n\t// ++ Ситек Булдаков 28.12.23\n\tРучноеНаименование = ЗначениеЗаполнено(Объект.Наименование) И (Объект.Наименование <> Бюро1440_СформироватьАвтоНаименование_Полное(Объект.Владелец, Объект.Код, Объект.ДатаПартии, Объект.СрокГодности, Объект.ДатаПроизводства, Объект.НомерДокументаПоступления, Объект.Поклажедатель));\n\t// -- Ситек Булдаков 28.12.23\n\t#КонецВставки\n\t\nКонецПроцедуры\n\n&НаКлиенте\n&ИзменениеИКонтроль(\"СрокГодностиПриИзменении\")\nПроцедура Бюро1440_СрокГодностиПриИзменении(Элемент)\n\t\n\tСрокХранения = ЗначениеРеквизитаОбъектаСервер(Объект.Владелец, \"СрокХранения\");\n\tЕсли ЗначениеЗаполнено(СрокХранения) Тогда \n\t\tОбъект.ДатаПроизводства = Объект.СрокГодности - (СрокХранения * 86400);\n\tКонецЕсли;\n\t\n\tЕсли Не РучноеНаименование Тогда \n\t\tОбъект.Наименование = СформироватьАвтоНаименование(Объект.Владелец, Объект.Код, Объект.ДатаПартии, Объект.СрокГодности, Объект.ДатаПроизводства, Объект.НомерДокументаПоступления, Объект.Поклажедатель);\n\t\t#Удаление\n\t\t#КонецУдаления \n\t\t#Вставка  \n\t\t// ++ Ситек Булдаков 28.12.23\n\t\tОбъект.Наименование = Бюро1440_СформироватьАвтоНаименование_Полное(Объект.Владелец, Объект.Код, Объект.ДатаПартии, Объект.СрокГодности, Объект.ДатаПроизводства, Объект.НомерДокументаПоступления, Объект.Поклажедатель);\n\t\t// -- Ситек Булдаков 28.12.23\n\t\t#КонецВставки\n\tКонецЕсли;\n\t\nКонецПроцедуры\n\n&НаКлиенте\n&ИзменениеИКонтроль(\"ДатаПроизводстваПриИзменении\")\nПроцедура Бюро1440_ДатаПроизводстваПриИзменении(Элемент)\n\n\tСрокХранения = ЗначениеРеквизитаОбъектаСервер(Объект.Владелец, \"СрокХранения\");\n\tЕсли ЗначениеЗаполнено(СрокХранения) Тогда \n\t\tОбъект.СрокГодности = Объект.ДатаПроизводства + (СрокХранения * 86400);\n\tКонецЕсли;\n\t\n\tЕсли Не РучноеНаименование Тогда \n\t\tОбъект.Наименование = СформироватьАвтоНаименование(Объект.Владелец, Объект.Код, Объект.ДатаПартии, Объект.СрокГодности, Объект.ДатаПроизводства, Объект.НомерДокументаПоступления, Объект.Поклажедатель);\n\t\t#Удаление\n\t\t#КонецУдаления \n\t\t#Вставка  \n\t\t// ++ Ситек Булдаков 28.12.23\n\t\tОбъект.Наименование = Бюро1440_СформироватьАвтоНаименование_Полное(Объект.Владелец, Объект.Код, Объект.ДатаПартии, Объект.СрокГодности, Объект.ДатаПроизводства, Объект.НомерДокументаПоступления, Объект.Поклажедатель);\n\t\t// -- Ситек Булдаков 28.12.23\n\t\t#КонецВставки\n\tКонецЕсли;\n\t\nКонецПроцедуры\n\n&НаКлиенте\n&ИзменениеИКонтроль(\"НомерДокументаПоступленияПриИзменении\")\nПроцедура Бюро1440_НомерДокументаПоступленияПриИзменении(Элемент)\n\n\tЕсли Не РучноеНаименование Тогда \n\t\t#Удаление\n\t\tОбъект.Наименование = СформироватьАвтоНаименование(Объект.Владелец, Объект.Код, Объект.ДатаПартии, Объект.СрокГодности, Объект.ДатаПроизводства, Объект.НомерДокументаПоступления, Объект.Поклажедатель);\n\t\t#КонецУдаления \n\t\t#Вставка  \n\t\t// ++ Ситек Булдаков 28.12.23\n\t\tОбъект.Наименование = Бюро1440_СформироватьАвтоНаименование_Полное(Объект.Владелец, Объект.Код, Объект.ДатаПартии, Объект.СрокГодности, Объект.ДатаПроизводства, Объект.НомерДокументаПоступления, Объект.Поклажедатель);\n\t\t// -- Ситек Булдаков 28.12.23\n\t\t#КонецВставки\n\tКонецЕсли;\n\t\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усПравилаСкладскихОпераций\\CatalogForm\\СтраницаИнвентаризацияКонтейнеров\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усПравилаСкладскихОпераций\\CatalogForm\\СтраницаИнвентаризацияКонтейнеров\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/ccb27a775ff77aa39f4ad3edf5da8743c906a872/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9F%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%B0%D0%A1%D0%BA%D0%BB%D0%B0%D0%B4%D1%81%D0%BA%D0%B8%D1%85%D0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D0%B9%5CCatalogForm%5C%D0%A1%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D0%B0%D0%98%D0%BD%D0%B2%D0%B5%D0%BD%D1%82%D0%B0%D1%80%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%BE%D0%B2%5CCatalogForm.obj.bsl",
            "size": 360,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)\n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усПравилаСкладскихОпераций\\CatalogForm\\СтраницаИнвентаризацияСоставаКонтейнеров\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усПравилаСкладскихОпераций\\CatalogForm\\СтраницаИнвентаризацияСоставаКонтейнеров\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/ccb27a775ff77aa39f4ad3edf5da8743c906a872/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9F%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%B0%D0%A1%D0%BA%D0%BB%D0%B0%D0%B4%D1%81%D0%BA%D0%B8%D1%85%D0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D0%B9%5CCatalogForm%5C%D0%A1%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D0%B0%D0%98%D0%BD%D0%B2%D0%B5%D0%BD%D1%82%D0%B0%D1%80%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F%D0%A1%D0%BE%D1%81%D1%82%D0%B0%D0%B2%D0%B0%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%BE%D0%B2%5CCatalogForm.obj.bsl",
            "size": 360,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)\n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усПравилаСкладскихОпераций\\CatalogForm\\СтраницаОтборТовара\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усПравилаСкладскихОпераций\\CatalogForm\\СтраницаОтборТовара\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/ccb27a775ff77aa39f4ad3edf5da8743c906a872/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9F%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%B0%D0%A1%D0%BA%D0%BB%D0%B0%D0%B4%D1%81%D0%BA%D0%B8%D1%85%D0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D0%B9%5CCatalogForm%5C%D0%A1%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D0%B0%D0%9E%D1%82%D0%B1%D0%BE%D1%80%D0%A2%D0%BE%D0%B2%D0%B0%D1%80%D0%B0%5CCatalogForm.obj.bsl",
            "size": 360,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)\n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усПравилаСкладскихОпераций\\CatalogForm\\СтраницаПриемка\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усПравилаСкладскихОпераций\\CatalogForm\\СтраницаПриемка\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/ccb27a775ff77aa39f4ad3edf5da8743c906a872/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9F%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%B0%D0%A1%D0%BA%D0%BB%D0%B0%D0%B4%D1%81%D0%BA%D0%B8%D1%85%D0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D0%B9%5CCatalogForm%5C%D0%A1%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D0%B0%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B0%5CCatalogForm.obj.bsl",
            "size": 360,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)\n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усПравилаСкладскихОпераций\\CatalogForm\\СтраницаПриемкаПослеПредварительнойПриемки\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усПравилаСкладскихОпераций\\CatalogForm\\СтраницаПриемкаПослеПредварительнойПриемки\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/ccb27a775ff77aa39f4ad3edf5da8743c906a872/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9F%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%B0%D0%A1%D0%BA%D0%BB%D0%B0%D0%B4%D1%81%D0%BA%D0%B8%D1%85%D0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D0%B9%5CCatalogForm%5C%D0%A1%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D0%B0%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B0%D0%9F%D0%BE%D1%81%D0%BB%D0%B5%D0%9F%D1%80%D0%B5%D0%B4%D0%B2%D0%B0%D1%80%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D0%B9%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B8%5CCatalogForm.obj.bsl",
            "size": 360,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)\n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усПравилаСкладскихОпераций\\CatalogForm\\СтраницаСвободнаяИнвентаризацияКонтейнеров\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усПравилаСкладскихОпераций\\CatalogForm\\СтраницаСвободнаяИнвентаризацияКонтейнеров\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/ccb27a775ff77aa39f4ad3edf5da8743c906a872/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9F%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%B0%D0%A1%D0%BA%D0%BB%D0%B0%D0%B4%D1%81%D0%BA%D0%B8%D1%85%D0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D0%B9%5CCatalogForm%5C%D0%A1%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D0%B0%D0%A1%D0%B2%D0%BE%D0%B1%D0%BE%D0%B4%D0%BD%D0%B0%D1%8F%D0%98%D0%BD%D0%B2%D0%B5%D0%BD%D1%82%D0%B0%D1%80%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%BE%D0%B2%5CCatalogForm.obj.bsl",
            "size": 360,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)\n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усПравилаСкладскихОпераций\\CatalogForm\\СтраницаСвободнаяИнвентаризацияСоставаКонтейнеров\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усПравилаСкладскихОпераций\\CatalogForm\\СтраницаСвободнаяИнвентаризацияСоставаКонтейнеров\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/ccb27a775ff77aa39f4ad3edf5da8743c906a872/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9F%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%B0%D0%A1%D0%BA%D0%BB%D0%B0%D0%B4%D1%81%D0%BA%D0%B8%D1%85%D0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D0%B9%5CCatalogForm%5C%D0%A1%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D0%B0%D0%A1%D0%B2%D0%BE%D0%B1%D0%BE%D0%B4%D0%BD%D0%B0%D1%8F%D0%98%D0%BD%D0%B2%D0%B5%D0%BD%D1%82%D0%B0%D1%80%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F%D0%A1%D0%BE%D1%81%D1%82%D0%B0%D0%B2%D0%B0%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%BE%D0%B2%5CCatalogForm.obj.bsl",
            "size": 360,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)\n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усПравилаСкладскихОпераций\\CatalogForm\\СтраницаСвободноеПеремещениеТовара\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усПравилаСкладскихОпераций\\CatalogForm\\СтраницаСвободноеПеремещениеТовара\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/ccb27a775ff77aa39f4ad3edf5da8743c906a872/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%9F%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%B0%D0%A1%D0%BA%D0%BB%D0%B0%D0%B4%D1%81%D0%BA%D0%B8%D1%85%D0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D0%B9%5CCatalogForm%5C%D0%A1%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D0%B0%D0%A1%D0%B2%D0%BE%D0%B1%D0%BE%D0%B4%D0%BD%D0%BE%D0%B5%D0%9F%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D1%89%D0%B5%D0%BD%D0%B8%D0%B5%D0%A2%D0%BE%D0%B2%D0%B0%D1%80%D0%B0%5CCatalogForm.obj.bsl",
            "size": 360,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)\n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усСтадииОтгрузки\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усСтадииОтгрузки\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/ccb27a775ff77aa39f4ad3edf5da8743c906a872/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%A1%D1%82%D0%B0%D0%B4%D0%B8%D0%B8%D0%9E%D1%82%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D0%B8%5CCatalogForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%AD%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CCatalogForm.obj.bsl",
            "size": 360,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)\n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усСтадииПриемки\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усСтадииПриемки\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/ccb27a775ff77aa39f4ad3edf5da8743c906a872/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%A1%D1%82%D0%B0%D0%B4%D0%B8%D0%B8%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B8%5CCatalogForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%AD%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CCatalogForm.obj.bsl",
            "size": 360,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)\n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усТипыСкладскихСобытий\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усТипыСкладскихСобытий\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/3e9bf26d23527771eae3893351b142f37f9d2e2e/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%A2%D0%B8%D0%BF%D1%8B%D0%A1%D0%BA%D0%BB%D0%B0%D0%B4%D1%81%D0%BA%D0%B8%D1%85%D0%A1%D0%BE%D0%B1%D1%8B%D1%82%D0%B8%D0%B9%5CCatalogForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%AD%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CCatalogForm.obj.bsl",
            "size": 7691,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)\n\tДобавитьРеквизитыНаФорму();\nКонецПроцедуры \n\n// ++ Ситек Булдаков 27.12.23\n&НаСервере\nПроцедура ДобавитьРеквизитыНаФорму()  \n\t//Создание реквизитов\n\tДобавляемыеРеквизиты = Новый Массив;\n\tНовыйРеквизит = Новый РеквизитФормы(\"ТемаОповещенияКонтрагента\", Новый ОписаниеТипов(\"Строка\", , Новый КвалификаторыСтроки(500))); \n\tДобавляемыеРеквизиты.Добавить(НовыйРеквизит);\n\tНовыйРеквизит = Новый РеквизитФормы(\"ТекстОповещенияКонтрагента\", Новый ОписаниеТипов(\"Строка\", , Новый КвалификаторыСтроки(3000))); \n\tДобавляемыеРеквизиты.Добавить(НовыйРеквизит);\n\tЭтотОбъект.ИзменитьРеквизиты(ДобавляемыеРеквизиты);\n\t\n\t//Создание полей\n\tСтраницаОповеститьКонтрагента = Элементы.Добавить(\"ГруппаДанныеАлгоритмаОбработки_ОповеститьКонтрагента\", Тип(\"ГруппаФормы\"), Элементы.ГруппаДанныеАлгоритмаОбработки);\n\tСтраницаОповеститьКонтрагента.Вид = ВидГруппыФормы.Страница;\n\tСтраницаОповеститьКонтрагента.Заголовок = \"Оповестить контрагента\";\n\t\n\tНовыйЭлемент = Элементы.Добавить(\"ПодсказкаОповещенияКонтрагента\", Тип(\"ДекорацияФормы\"), СтраницаОповеститьКонтрагента);\n\tНовыйЭлемент.Вид = ВидДекорацииФормы.Надпись;\n\tНовыйЭлемент.Заголовок = \"Сообщение будет отправлено на электронную почту, указанную у контрагента\"; \n\tНовыйЭлемент.АвтоМаксимальнаяШирина\t= Ложь;\n\t\n\tНовыйЭлемент = Элементы.Добавить(\"ТемаОповещенияКонтрагента\", Тип(\"ПолеФормы\"), СтраницаОповеститьКонтрагента); \n\tНовыйЭлемент.Заголовок\t= \"Тема\";\n\tНовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;\n\tНовыйЭлемент.ПутьКДанным = \"ТемаОповещенияКонтрагента\";\n\tНовыйЭлемент.АвтоМаксимальнаяШирина\t= Ложь;\n\tНовыйЭлемент.МногострочныйРежим\t= Истина;\n\tНовыйЭлемент.Высота\t= 2;\n\tНовыйЭлемент.УстановитьДействие(\"ПриИзменении\", \"ИзменениеШаблонаПисьма\");\n\t\n\tНовыйЭлемент = Элементы.Добавить(\"ТекстОповещенияКонтрагента\", Тип(\"ПолеФормы\"), СтраницаОповеститьКонтрагента);\n\tНовыйЭлемент.Заголовок\t= \"Текст сообщения\"; \t\n\tНовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;\n\tНовыйЭлемент.ПутьКДанным = \"ТекстОповещенияКонтрагента\";\n\tНовыйЭлемент.АвтоМаксимальнаяШирина\t= Ложь; \n\tНовыйЭлемент.МногострочныйРежим\t= Истина; \n\tНовыйЭлемент.Высота\t= 5;\n\tНовыйЭлемент.УстановитьДействие(\"ПриИзменении\", \"ИзменениеШаблонаПисьма\");\n\t\n\tНачалоТема\t= СтрНайти(Объект.ШаблонПисьма, \"Тема = \"); \n\tНачалоТекст\t= СтрНайти(Объект.ШаблонПисьма, \"Текст = \");\n\t\n\tЕсли НачалоТема <> 0 Тогда\n\t\tЭтотОбъект[\"ТемаОповещенияКонтрагента\"]\t\t= Сред(Объект.ШаблонПисьма, НачалоТема + 7, НачалоТекст - НачалоТема - 9);\n\tИначе\n\t\tЭтотОбъект[\"ТемаОповещенияКонтрагента\"]\t\t= \"\";\n\tКонецЕсли;  \n\t\n\tЕсли НачалоТема <> 0 Тогда\n\t\tЭтотОбъект[\"ТекстОповещенияКонтрагента\"]\t= Сред(Объект.ШаблонПисьма, НачалоТекст + 8, СтрДлина(Объект.ШаблонПисьма) - НачалоТекст - 8); \n\tИначе\n        ЭтотОбъект[\"ТекстОповещенияКонтрагента\"]\t= \"\"\"\"\" + ДокументОснование\";\n\tКонецЕсли;\n\t\n\tЕсли ЗначениеЗаполнено(ЭтотОбъект[\"ТемаОповещенияКонтрагента\"]) Тогда\n\t\tТемаШаблон\t= \"Тема = \" + ЭтотОбъект[\"ТемаОповещенияКонтрагента\"];\n\tИначе\n\t\tТемаШаблон\t= \"Тема = \" + \"\"\"\"\"\";\n\tКонецЕсли;\n\t\n\tЕсли ЗначениеЗаполнено(ЭтотОбъект[\"ТекстОповещенияКонтрагента\"]) Тогда\n\t\tТекстШаблон\t= \"Текст = \" + ЭтотОбъект[\"ТекстОповещенияКонтрагента\"];\n\tИначе\n\t\tТекстШаблон\t= \"Текст = \" + \"\"\"\"\"\";\n\tКонецЕсли;\n\t\n    Объект.ШаблонПисьма\t= СтрШаблон(\"%1;%2%3;\", ТемаШаблон, Символы.ПС, ТекстШаблон);\nКонецПроцедуры\n\n&НаКлиенте\nПроцедура ИзменениеШаблонаПисьма(Элемент)\n\tЕсли ЗначениеЗаполнено(ЭтотОбъект[\"ТемаОповещенияКонтрагента\"]) Тогда\n\t\tТемаШаблон\t= \"Тема = \" + ЭтотОбъект[\"ТемаОповещенияКонтрагента\"];\n\tИначе\n\t\tТемаШаблон\t= \"Тема = \" + \"\"\"\"\"\";\n\tКонецЕсли;\n\t\n\tЕсли ЗначениеЗаполнено(ЭтотОбъект[\"ТекстОповещенияКонтрагента\"]) Тогда\n\t\tТекстШаблон\t= \"Текст = \" + ЭтотОбъект[\"ТекстОповещенияКонтрагента\"];\n\tИначе\n\t\tТекстШаблон\t= \"Текст = \" + \"\"\"\"\"\";\n\tКонецЕсли;\n\t\n    Объект.ШаблонПисьма\t= СтрШаблон(\"%1;%2%3;\", ТемаШаблон, Символы.ПС, ТекстШаблон);  \n\tЭтотОбъект.Модифицированность\t= Истина; \n\nКонецПроцедуры \n\n&НаКлиенте\n&После(\"НастройкаФормы\")\nПроцедура Бюро1440_НастройкаФормы(Открытие)\n\tЕсли Объект.АлгоритмОбработки = ПредопределенноеЗначение(\"Перечисление.усАлгоритмыОбработкиСобытия.Бюро1440_ОповещениеКонтрагента\") Тогда\n\t\tЭлементы.ГруппаДанныеАлгоритмаОбработки.ТекущаяСтраница = Элементы.ГруппаДанныеАлгоритмаОбработки_ОповеститьКонтрагента;\n\tКонецЕсли;\nКонецПроцедуры\n// -- Ситек Булдаков 27.12.23",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усУпаковкиНоменклатуры\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усУпаковкиНоменклатуры\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/c309b992c36140d2d660df51a8cfeb77743d4ee6/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%A3%D0%BF%D0%B0%D0%BA%D0%BE%D0%B2%D0%BA%D0%B8%D0%9D%D0%BE%D0%BC%D0%B5%D0%BD%D0%BA%D0%BB%D0%B0%D1%82%D1%83%D1%80%D1%8B%5CCatalogForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%AD%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CCatalogForm.obj.bsl",
            "size": 397,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка) //Ситек Николаев 193695 ++ \n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Catalog\\усШаблоныЭтикеток\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Catalog\\усШаблоныЭтикеток\\CatalogForm\\ФормаЭлемента\\CatalogForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/59edfca65a21f4d40aaa4c436d94810bba285152/_bsl%5CResources%5C726598511%5CCatalog%5C%D1%83%D1%81%D0%A8%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD%D1%8B%D0%AD%D1%82%D0%B8%D0%BA%D0%B5%D1%82%D0%BE%D0%BA%5CCatalogForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%AD%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CCatalogForm.obj.bsl",
            "size": 5238,
            "truncated": false,
            "content": "&НаСервере\n&ИзменениеИКонтроль(\"ТипШаблонаПриИзменении_Сервер\")\nПроцедура Бюро1440_ТипШаблонаПриИзменении_Сервер()\n\n\tУстановитьПривилегированныйРежим(Истина);\n\t// Заполнение доступных полей\n\tЕсли Объект.ТипШаблона = Перечисления.усТипыШаблоновЭтикеток.Номенклатура Тогда\n\t\tСхемаКомпоновкиДанных = Обработки.усПечатьЭтикеток.ПолучитьМакет(\"ПоляШаблона_Номенклатура\");\n\n\tИначеЕсли Объект.ТипШаблона = Перечисления.усТипыШаблоновЭтикеток.Ячейки Тогда\n\t\tСхемаКомпоновкиДанных = Обработки.усПечатьЭтикеток.ПолучитьМакет(\"ПоляШаблона_Ячейка\");\n\n\tИначеЕсли Объект.ТипШаблона = Перечисления.усТипыШаблоновЭтикеток.Контейнеры Тогда\n\t\t#Удаление \n\t\tСхемаКомпоновкиДанных = Обработки.усПечатьЭтикеток.ПолучитьМакет(\"ПоляШаблона_Контейнер\");\n\t\t#КонецУдаления\n\t\t#Вставка  \n\t\t// ++ Ситек Булдаков 01.02.24\n\t\tСхемаКомпоновкиДанных = Обработки.усПечатьЭтикеток.ПолучитьМакет(\"Бюро1440_ПоляШаблона_Контейнер\");\n\t\t// -- Ситек Булдаков 01.02.24\n\t\t#КонецВставки\n\n\tИначеЕсли Объект.ТипШаблона = Перечисления.усТипыШаблоновЭтикеток.Бейджики Тогда\n\t\tСхемаКомпоновкиДанных = Обработки.усПечатьЭтикеток.ПолучитьМакет(\"ПоляШаблона_Сотрудник\");\n\n\tИначеЕсли Объект.ТипШаблона = Перечисления.усТипыШаблоновЭтикеток.Оборудование Тогда\n\t\tСхемаКомпоновкиДанных = Обработки.усПечатьЭтикеток.ПолучитьМакет(\"ПоляШаблона_Оборудование\");\n\n\tИначеЕсли Объект.ТипШаблона = Перечисления.усТипыШаблоновЭтикеток.Зона Тогда\n\t\tСхемаКомпоновкиДанных = Обработки.усПечатьЭтикеток.ПолучитьМакет(\"ПоляШаблона_Зона\");\n\n\tИначеЕсли Объект.ТипШаблона = Перечисления.усТипыШаблоновЭтикеток.ТранспортнаяУпаковка Тогда\n\t\tСхемаКомпоновкиДанных = Обработки.усПечатьЭтикеток.ПолучитьМакет(\"ПоляШаблона_ТранспортнаяУпаковка\");\n\n\tИначеЕсли Объект.ТипШаблона = Перечисления.усТипыШаблоновЭтикеток.ОбъектЦМТ Тогда\n\t\tСхемаКомпоновкиДанных = Обработки.усПечатьЭтикеток.ПолучитьМакет(\"ПоляШаблона_ОбъектЦМТ\");\n\n\tИначеЕсли Объект.ТипШаблона = Перечисления.усТипыШаблоновЭтикеток.Принтеры Тогда\n\t\tСхемаКомпоновкиДанных = Обработки.усПечатьЭтикеток.ПолучитьМакет(\"ПоляШаблона_Принтер\");\n\tКонецЕсли;\n\n\tАдресВХранилище = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтотОбъект.УникальныйИдентификатор);\n\tКомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресВХранилище));\n\tУстановитьПривилегированныйРежим(Ложь);\n\n\tСтруктураШаблона = СтруктураШаблона();\n\n\tШтрихкодов = Новый Структура;\n\n\tЕсли СтруктураШаблона <> Неопределено Тогда\n\t\t// Загрузка шаблона.\n\t\tСтруктураШаблона.Свойство(\"РедакторТабличныйДокумент\", ПолеТабличногоДокумента);\n\t\tСтруктураШаблона.Свойство(\"КоличествоПоВертикали\"    , КоличествоПоВертикали);\n\t\tСтруктураШаблона.Свойство(\"КоличествоПоГоризонтали\"  , КоличествоПоГоризонтали);\n\t\tСтруктураШаблона.Свойство(\"Штрихкоды\",                 Штрихкодов);\n\tИначе\n\t\t// Создание нового шаблона.\n\t\tПолеТабличногоДокумента = Новый ТабличныйДокумент;\n\tКонецЕсли;\n\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonForm\\ФормаРедактированияПочтыДляУведомления\\CommonForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonForm\\ФормаРедактированияПочтыДляУведомления\\CommonForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/eefd47037e59d27bbc2a383ca626af08856f8a6c/_bsl%5CResources%5C726598511%5CCommonForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%A0%D0%B5%D0%B4%D0%B0%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%D0%9F%D0%BE%D1%87%D1%82%D1%8B%D0%94%D0%BB%D1%8F%D0%A3%D0%B2%D0%B5%D0%B4%D0%BE%D0%BC%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F%5CCommonForm.obj.bsl",
            "size": 1429,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)\n\tЕстьИзменения = Ложь;\nКонецПроцедуры\n\n&НаКлиенте\nПроцедура Бюро1440_ПриЗакрытииПосле(ЗавершениеРаботы)\n\tЕсли Не ЕстьИзменения Тогда\n\t\tОповестить(\"ПочтаСтрокаБезИзменений\",,ЭтотОбъект.ВладелецФормы);\n\tКонецЕсли;\nКонецПроцедуры\n\n&НаКлиенте\nПроцедура Бюро1440_ОКВместо(Команда)\n\t\n\tстрРезультат = \"\";\n\tДля каждого стр из СписокПочты Цикл\n\t\tстрРезультат = стрРезультат + Строка(стр.Почта) + \";\";\n\tКонецЦикла; \n\tстрРезультат = СРЕД(стрРезультат, 1 , СтрДлина(стрРезультат) - 1);\n\t\n\t//++Крутских СИТЕК 27.01.25++\n\tЕстьИзменения = Истина;\n\tЗакрыть();   \n\tВладелец\t\t= ЭтотОбъект.ВладелецФормы;\n    Оповестить(\"ПочтаСтрокаНовая\" , стрРезультат, Владелец);\n\t//ОповеститьОВыборе(стрРезультат); \n    //--Крутских СИТЕК 27.01.25++   \n\t\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonForm\\усОтборОтгрузка\\CommonForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonForm\\усОтборОтгрузка\\CommonForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/05b562a42c687e982a9aa4d1baf2a87317e9b638/_bsl%5CResources%5C726598511%5CCommonForm%5C%D1%83%D1%81%D0%9E%D1%82%D0%B1%D0%BE%D1%80%D0%9E%D1%82%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D0%B0%5CCommonForm.obj.bsl",
            "size": 1849,
            "truncated": false,
            "content": "&НаКлиенте\nПроцедура Бюро1440_ОбработкаОповещенияПосле(ИмяСобытия, Параметр, Источник)\n\t\n\tЕсли Источник = ЭтотОбъект Тогда\n\t\tЕсли ИмяСобытия = \"ПочтаСтрокаБезИзменений\" Тогда \n\t\t\tПочтаСтрока = НаборКонстант.Бюро_1440_EmailДляУведомления;\n\t\tИначеЕсли ИмяСобытия = \"ПочтаСтрокаНовая\" Тогда\n\t\t\tПочтаСтрока = Параметр;\n\t\tКонецЕсли;\n\tКонецЕсли;\t\n\t\t\n\nКонецПроцедуры\n\n&НаКлиенте\nПроцедура Бюро1440_ПочтаСтрокаНачалоВыбораВместо(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)\n\tПараметрыФормы = Новый Структура;\n\tПараметрыФормы.Вставить(\"РежимВыбора\",Истина);\n\tПараметрыФормы.Вставить(\"EmailДляУведомления\",ПочтаСтрока);\n\t//++Крутских СИТЕК 27.01.25++\n\t//ОбработкаВыбора = Новый ОписаниеОповещения(\"ПриЗакрытииФормыВыбора\", ЭтаФорма);\n\t//ОткрытьФорму(\"ОбщаяФорма.ФормаРедактированияПочтыДляУведомления\",ПараметрыФормы, ЭтаФорма,,,,ОбработкаВыбора ); \n    ОткрытьФорму(\"ОбщаяФорма.ФормаРедактированияПочтыДляУведомления\",ПараметрыФормы, ЭтотОбъект, ЭтаФорма.УникальныйИдентификатор);\n\t//--Крутских СИТЕК 27.01.25++\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonForm\\усСерверПечати\\CommonForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonForm\\усСерверПечати\\CommonForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/7abe6d62a74458ca9415e6441aebbcc2db8cc9d6/_bsl%5CResources%5C726598511%5CCommonForm%5C%D1%83%D1%81%D0%A1%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%9F%D0%B5%D1%87%D0%B0%D1%82%D0%B8%5CCommonForm.obj.bsl",
            "size": 448,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)\n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);  \n\tЭлементы.Группа45.ОтображатьЗаголовок\t=Истина\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonForm\\усСкладскойУчет\\CommonForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonForm\\усСкладскойУчет\\CommonForm.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/87d5a757808da5f451d4416bf698e034a88ddd8f/_bsl%5CResources%5C726598511%5CCommonForm%5C%D1%83%D1%81%D0%A1%D0%BA%D0%BB%D0%B0%D0%B4%D1%81%D0%BA%D0%BE%D0%B9%D0%A3%D1%87%D0%B5%D1%82%5CCommonForm.obj.bsl",
            "size": 360,
            "truncated": false,
            "content": "&НаСервере\nПроцедура Бюро1440_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)\n\tБюро1440_МодификацияФормСервер.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\Бюро1440_ДоработкиСервер\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\Бюро1440_ДоработкиСервер\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/52fca9481dd00979861beb8d48b0061b27ffa75d/_bsl%5CResources%5C726598511%5CCommonModule%5C%D0%91%D1%8E%D1%80%D0%BE1440_%D0%94%D0%BE%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8%D0%A1%D0%B5%D1%80%D0%B2%D0%B5%D1%80%5CCommonModule.obj.bsl",
            "size": 38176,
            "truncated": false,
            "content": "// Процедура - Обновить упаковки номенклатуры по упаковке набора\n//\n// Параметры:\n//  УпаковкаНабора\t - ссылка на упаковку номенклатуры с владельцем НаборыУпаковок \n//\nПроцедура ОбновитьУпаковкиНоменклатурПоУпаковкеНабора(УпаковкаНабора) Экспорт \n\n\tЕсли ТипЗнч(УпаковкаНабора.Владелец) = Тип(\"СправочникСсылка.Бюро1440_НаборыУпаковок\") Тогда\n\t\n\t\tЗапрос = Новый Запрос;\n\t\tЗапрос.Текст = \n\t\t\t\"ВЫБРАТЬ\n\t\t\t|\tусУпаковкиНоменклатуры.Ссылка КАК Ссылка,\n\t\t\t|\tусУпаковкиНоменклатуры.Бюро1440_УпаковкаНабора КАК Бюро1440_УпаковкаНабора\n\t\t\t|ИЗ\n\t\t\t|\tСправочник.усУпаковкиНоменклатуры КАК усУпаковкиНоменклатуры\n\t\t\t|ГДЕ\n\t\t\t|\tусУпаковкиНоменклатуры.Бюро1440_УпаковкаНабора = &Бюро1440_УпаковкаНабора\";\n\t\t\n\t\tЗапрос.УстановитьПараметр(\"Бюро1440_УпаковкаНабора\", УпаковкаНабора);\n\t\t\n\t\tРезультатЗапроса = Запрос.Выполнить();\n\t\t\n\t\tВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();\n\t\t\n\t\tПока ВыборкаДетальныеЗаписи.Следующий() Цикл\n\t\t\tОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект(); \n\t\t\tЗаполнитьЗначенияСвойств(Объект, УпаковкаНабора,, \"Родитель, Владелец, Бюро1440_УпаковкаНабора\"); \n\t\t\tОбъект.ОбменДанными.Загрузка = Истина;\n\t\t\tОбъект.Записать();\n\t\tКонецЦикла;\t\t\n\t\n\tКонецЕсли;\n\t\nКонецПроцедуры\n\n// Процедура - Создать упаковки для номенклатуры по набору упаковок\n//\n// Параметры:\n//  Номенклатура\t - Номенклатура \n//  НаборУпаковок\t - Общий набор упаковок - Бюро1440_НаборыУпаковок \n//\nПроцедура СоздатьУпаковкиДляНоменклатурыПоНаборуУпаковок(Номенклатура, НаборУпаковок) Экспорт \n\n\tЕсли ТипЗнч(НаборУпаковок) = Тип(\"СправочникСсылка.Бюро1440_НаборыУпаковок\") Тогда\n\t\n\t\tЗапрос = Новый Запрос;\n\t\tЗапрос.Текст = \n\t\t\"ВЫБРАТЬ\n\t\t|    усУпаковкиНоменклатуры.Ссылка КАК Ссылка\n\t\t|ПОМЕСТИТЬ втУпаковкиНабора\n\t\t|ИЗ\n\t\t|    Справочник.усУпаковкиНоменклатуры КАК усУпаковкиНоменклатуры\n\t\t|ГДЕ\n\t\t|    усУпаковкиНоменклатуры.Владелец ССЫЛКА Справочник.Бюро1440_НаборыУпаковок\n\t\t|    И усУпаковкиНоменклатуры.Владелец = &НаборУпаковок\n\t\t|\n\t\t|ИНДЕКСИРОВАТЬ ПО\n\t\t|    Ссылка\n\t\t|;\n\t\t|\n\t\t|////////////////////////////////////////////////////////////////////////////////\n\t\t|ВЫБРАТЬ\n\t\t|    втУпаковкиНабора.Ссылка КАК УпаковкаНабора,\n\t\t|    усУпаковкиНоменклатуры.Ссылка КАК УпаковкаНоменклатуры\n\t\t|ИЗ\n\t\t|    втУпаковкиНабора КАК втУпаковкиНабора\n\t\t|        ЛЕВОЕ СОЕДИНЕНИЕ Справочник.усУпаковкиНоменклатуры КАК усУпаковкиНоменклатуры\n\t\t|        ПО (втУпаковкиНабора.Ссылка = усУпаковкиНоменклатуры.Бюро1440_УпаковкаНабора \n\t\t|        И усУпаковкиНоменклатуры.Владелец ССЫЛКА Справочник.усНоменклатура \n\t\t|        И усУпаковкиНоменклатуры.Владелец = &Номенклатура)\n\t\t|ГДЕ\n\t\t|    усУпаковкиНоменклатуры.Ссылка ЕСТЬ NULL\n\t\t|    \n\t\t|    \";\n\t\t\n\t\tЗапрос.УстановитьПараметр(\"НаборУпаковок\", НаборУпаковок);\n\t\tЗапрос.УстановитьПараметр(\"Номенклатура\",  Номенклатура);\n\t\t\n\t\tРезультатЗапроса = Запрос.Выполнить();\n\t\t\n\t\tВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();\n\t\t\n\t\tПока ВыборкаДетальныеЗаписи.Следующий() Цикл \t\t\t\n\t\t\tНоваяУпаковка = Справочники.усУпаковкиНоменклатуры.СоздатьЭлемент();\t \n\t\t\tЗаполнитьЗначенияСвойств(НоваяУпаковка, ВыборкаДетальныеЗаписи.УпаковкаНабора,, \"Родитель, Владелец, Бюро1440_УпаковкаНабора\");\n\t\t\tНоваяУпаковка.Владелец \t\t\t\t\t= Номенклатура;\n\t\t\tНоваяУпаковка.Бюро1440_УпаковкаНабора \t= ВыборкаДетальныеЗаписи.УпаковкаНабора;\n\t\t\tНоваяУпаковка.ОбменДанными.Загрузка = Истина;\n\t\t\tНоваяУпаковка.Записать();\n\t\tКонецЦикла;\t\t\n\t\n\tКонецЕсли;\n\t\nКонецПроцедуры\n\nФункция ОбъектМодифицирован(Объект) Экспорт\n\n   МетаданныеОбъекта = Объект.Метаданные();\n   Если Метаданные.Справочники.Содержит(МетаданныеОбъекта) Тогда\n       Вид = \"Справочник\";\n   ИначеЕсли Метаданные.Документы.Содержит(МетаданныеОбъекта) Тогда\n       Вид = \"Документ\";\n   Иначе\n       ВызватьИсключение СтрШаблон(\n       НСтр(\"ru='Проверка модифицированности для объекта %1 не предусмотрена.'\"),\n       МетаданныеОбъекта);\n   КонецЕсли;\n\n   Запрос = Новый Запрос(\n   \"ВЫБРАТЬ\n    |    *\n    |ИЗ\n    |    \" + Вид + \".\" + МетаданныеОбъекта.Имя + \"\n    |ГДЕ\n    |    Ссылка = &Ссылка\");\n   Запрос.УстановитьПараметр(\"Ссылка\", Объект.Ссылка);\n\n   РезультатЗапроса = Запрос.Выполнить();\n\n   Возврат ПроверитьМодифицированностьРеквизитов(Объект, РезультатЗапроса, \"\");\n\nКонецФункции\n\nФункция ПроверитьМодифицированностьРеквизитов(Объект, РезультатЗапроса, Префикс)\n   НеобрабатываемыеРеквизиты = СтрРазделить(\"Ссылка,НомерСтроки\", \",\");\n\n   Выборка = РезультатЗапроса.Выбрать();\n   НомерСтроки = 0;\n   Пока Выборка.Следующий() Цикл\n       ТабличнаяЧасть = ?(Не ПустаяСтрока(Префикс), Объект[Префикс], Неопределено);\n       Если ТабличнаяЧасть <> Неопределено И Выборка.Количество()\n             <> ТабличнаяЧасть.Количество() Тогда\n           Возврат Истина;\n       КонецЕсли;\n\n       НомерСтроки = НомерСтроки + 1;\n       Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл\n           Если НеобрабатываемыеРеквизиты.Найти(Колонка.Имя) <> Неопределено Тогда\n               Продолжить;\n           КонецЕсли;\n\n           ЗначениеДоРедактирования = Выборка[Колонка.Имя];\n           ТипЗначения = ТипЗнч(ЗначениеДоРедактирования);\n           Если ТипЗначения = Тип(\"ХранилищеЗначения\") Тогда\n               // ХранилищеЗначения не проверяем.\n               Продолжить;\n           ИначеЕсли ТипЗначения = Тип(\"РезультатЗапроса\") Тогда\n               Если ПроверитьМодифицированностьРеквизитов(Объект,\n                   ЗначениеДоРедактирования, Колонка.Имя) Тогда\n                   Возврат Истина;\n               КонецЕсли;\n           Иначе\n               ЗначениеПослеРедактирования = ?(ТабличнаяЧасть = Неопределено,\n               Объект[Колонка.Имя],\n               ТабличнаяЧасть[НомерСтроки - 1][Колонка.Имя]);\n               Если ЗначениеДоРедактирования <> ЗначениеПослеРедактирования Тогда\n                   Возврат Истина;\n               КонецЕсли;\n           КонецЕсли;\n       КонецЦикла;\n   КонецЦикла;\n\n   Возврат Ложь;\n\nКонецФункции \n\n\nФункция ЭтоРегЗадание() Экспорт\n\tЕсли ПолучитьТекущийСеансИнформационнойБазы().ИмяПриложения = \"BackgroundJob\" Тогда\n\t\tЭтоРегЗадание\t= Истина;\n\tИначе\n\t\tЭтоРегЗадание\t= Ложь;\n\tКонецЕсли;\n\tВозврат ЭтоРегЗадание;\nКонецФункции\n\n//Ситек ICT-41402 Николаев ++\nПроцедура Бюро1440_ПечатьЭтикетокПриПереводеДокументаПриемкаКВыполнению(ДокументОснование, Исполнитель = Неопределено, ПринтерЭтикеток = Неопределено, ИдентификаторПечати = \"\") Экспорт\n\n\tЕсли ПолучитьФункциональнуюОпцию(\"усИспользоватьСерверПечати\") Тогда\n\t\tсткДанныеПриемки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, \n\t\t\t\t\t\t\tНовый Структура(\"ОжидаемаяПриемка, Бюро1440_ПечатьЭтикетокПриПереводеДокументаПриемкаКВыполнению, Бюро1440_ШаблонЭтикеткиДляПечати\"\n\t\t\t\t\t\t\t, \"ОжидаемаяПриемка\", \"ОжидаемаяПриемка.СтадииПриемки.Бюро1440_ПечатьЭтикетокПриПереводеДокументаПриемкаКВыполнению\", \"ОжидаемаяПриемка.СтадииПриемки.Бюро1440_ШаблонЭтикеткиДляПечати\"));\n\t\tЕсли Не сткДанныеПриемки.Бюро1440_ПечатьЭтикетокПриПереводеДокументаПриемкаКВыполнению Тогда\n\t\t\tВозврат;\n\t\tКонецЕсли; \n\t\t\t\t\n\t\tСтатусПриемки = Документы.усПриемка.Статус(ДокументОснование);\n\t\t\n\t\tЕсли СтатусПриемки <> Перечисления.усСтатусыПриемок.КВыполнению Тогда \n\t\t\tВозврат;\t\n\t\tКонецЕсли;\n\t\t\n\t\tЗапрос = Новый Запрос;\n\t\tЗапрос.Текст = \n\t\t\"ВЫБРАТЬ\n\t\t|\tусСтрокаОжидаемойПриемки.Номенклатура КАК Номенклатура,\n\t\t|\tМАКСИМУМ(усСтрокаОжидаемойПриемки.УпаковкаНоменклатуры) КАК УпаковкаНоменклатуры,\n\t\t|\tМИНИМУМ(усСтрокаОжидаемойПриемки.СтатусНоменклатуры) КАК СтатусНоменклатуры,\n\t\t|\tусСтрокаОжидаемойПриемки.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t\t|\tМАКСИМУМ(усСтрокаОжидаемойПриемки.Номенклатура.ВидНоменклатуры.ШаблонЭтикетки) КАК ШаблонЭтикетки,\n\t\t|\tСУММА(усСтрокаОжидаемойПриемки.Количество) КАК Количество,\n\t\t|\tусСтрокаОжидаемойПриемки.Владелец.Поклажедатель КАК Поклажедатель,\n\t\t|\tусСтрокаОжидаемойПриемки.Владелец.Номер КАК Номер\n\t\t|ИЗ\n\t\t|\tДокумент.усСтрокаОжидаемойПриемки КАК усСтрокаОжидаемойПриемки\n\t\t|ГДЕ\n\t\t|\tусСтрокаОжидаемойПриемки.Владелец = &Владелец\n\t\t|\tИ НЕ усСтрокаОжидаемойПриемки.ПометкаУдаления\n\t\t|\n\t\t|СГРУППИРОВАТЬ ПО\n\t\t|\tусСтрокаОжидаемойПриемки.Номенклатура,\n\t\t|\tусСтрокаОжидаемойПриемки.ПартияНоменклатуры,\n\t\t|\tусСтрокаОжидаемойПриемки.Владелец.Поклажедатель,\n\t\t|\tусСтрокаОжидаемойПриемки.Владелец.Номер\";\n\t\t\n\t\tЗапрос.УстановитьПараметр(\"Владелец\", сткДанныеПриемки.ОжидаемаяПриемка); \n\t\tРезультатЗапроса = Запрос.Выполнить();\n\t\t\n\t\tтбзПечати = РезультатЗапроса.Выгрузить();\n\t\t\n\t\tДля Каждого Стр ИЗ тбзПечати Цикл \n\t\t\tЕсли НЕ ЗначениеЗаполнено(Стр.ПартияНоменклатуры) Тогда\n\t\t\t\tСтр.ПартияНоменклатуры = усСервисныеФункцииВызовСервера.СоздатьПартию(Стр.Номенклатура, \"\", ТекущаяДатаСеанса(), ТекущаяДатаСеанса(), ТекущаяДатаСеанса(), стр.Номер,,,,, стр.Поклажедатель);\t\t\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\t\t\n\t\tОтправитьЭтикеткиНаПечать(тбзПечати, сткДанныеПриемки.Бюро1440_ШаблонЭтикеткиДляПечати, Исполнитель, ПринтерЭтикеток, ИдентификаторПечати); \n\t\t\n\tКонецЕсли;\n\t\nКонецПроцедуры \n\nПроцедура Бюро1440_ПечатьЭтикетокПриПолученииСтатусаДокументаОтобран(ДокументОснование) Экспорт\n\n\tЕсли ПолучитьФункциональнуюОпцию(\"усИспользоватьСерверПечати\") Тогда\n\t\tсткДанныеЗНО = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, \n\t\t\t\t\t\t\tНовый Структура(\"Бюро1440_ПечатьЭтикетокПриПолученииСтатусаДокументаОтобран, Бюро1440_ШаблонЭтикеткиДляПечати\"\n\t\t\t\t\t\t\t, \"СтадииОтгрузки.Бюро1440_ПечатьЭтикетокПриПолученииСтатусаДокументаОтобран\", \"СтадииОтгрузки.Бюро1440_ШаблонЭтикеткиДляПечати\"));\n\t\t\t\t\t\t\t\n\t\tСтатусДокумента = Документы.усЗаказНаОтгрузку.Статус(ДокументОснование);\n\t\tЕсли Не сткДанныеЗНО.Бюро1440_ПечатьЭтикетокПриПолученииСтатусаДокументаОтобран Тогда \n\t\t\tВозврат;\n\t\tКонецЕсли;    \n\t\t\n\t\tЕсли НЕ (СтатусДокумента = Перечисления.усСтатусыЗаказовНаОтгрузку.Отобран \n\t\t\t\t\tИЛИ СтатусДокумента = Перечисления.усСтатусыЗаказовНаОтгрузку.Упакован\n\t\t\t\t\tИЛИ СтатусДокумента = Перечисления.усСтатусыЗаказовНаОтгрузку.ГотовКОтгрузке) Тогда\n\t\t\t\t\t\n\t\t\tВозврат;\n\t\tКонецЕсли;\n\n\t\t\n\t\tЗапрос = Новый Запрос;\n\t\tЗапрос.Текст = \n\t\t\"ВЫБРАТЬ\n\t\t|    усОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,\n\t\t|    МАКСИМУМ(усОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.УпаковкаНоменклатуры) КАК УпаковкаНоменклатуры,\n\t\t|    МИНИМУМ(усОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.СтатусНоменклатуры) КАК СтатусНоменклатуры,\n\t\t|    усОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t\t|    СУММА(усОстаткиТоваровОстатки.КоличествоОстаток) КАК Количество,\n\t\t|    МАКСИМУМ(усОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.Номенклатура.ВидНоменклатуры.ШаблонЭтикетки) КАК ШаблонЭтикетки\n\t\t|ИЗ\n\t\t|    РегистрНакопления.усОстаткиТоваров.Остатки(, Контейнер.ДокументПривязки = &ДокументОснование) КАК усОстаткиТоваровОстатки\n\t\t|\n\t\t|СГРУППИРОВАТЬ ПО\n\t\t|    усОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.Номенклатура,\n\t\t|    усОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры\n\t\t|;\n\t\t|\n\t\t|////////////////////////////////////////////////////////////////////////////////\n\t\t|ВЫБРАТЬ ПЕРВЫЕ 1\n\t\t|    усЗадачаПеремещениеТовара.Исполнитель КАК Исполнитель\n\t\t|ИЗ\n\t\t|    Документ.усЗадачаПеремещениеТовара КАК усЗадачаПеремещениеТовара\n\t\t|ГДЕ\n\t\t|    усЗадачаПеремещениеТовара.ДокументОснование = &ДокументОснование\n\t\t|    И НЕ усЗадачаПеремещениеТовара.Исполнитель = ЗНАЧЕНИЕ(Справочник.усСкладскиеСотрудники.ПустаяСсылка)\n\t\t|    И усЗадачаПеремещениеТовара.ТипЗадачи = ЗНАЧЕНИЕ(Перечисление.усТипыЗадач.Отбор)\n\t\t|\n\t\t|УПОРЯДОЧИТЬ ПО\n\t\t|    усЗадачаПеремещениеТовара.ДатаВыполнения УБЫВ\";\n\t\t\n\t\tЗапрос.УстановитьПараметр(\"ДокументОснование\", ДокументОснование); \n\t\tРезультатЗапроса = Запрос.ВыполнитьПакет();\n\t\t\n\t\tтбзПечати = РезультатЗапроса[0].Выгрузить();\n\t\tВыборкаИсполнитель = РезультатЗапроса[1].Выбрать();\n\t\tЕсли ВыборкаИсполнитель.Следующий() Тогда\n\t\t\tИсполнитель = ВыборкаИсполнитель.Исполнитель;\n\t\tИначе\n\t\t\tИсполнитель = Справочники.усСкладскиеСотрудники.ПустаяСсылка();\t\n\t\tКонецЕсли;\n\t\t\n\t\tОтправитьЭтикеткиНаПечать(тбзПечати, сткДанныеЗНО.Бюро1440_ШаблонЭтикеткиДляПечати, Исполнитель); \n\t\t\n\tКонецЕсли;\n\t\nКонецПроцедуры \n\nПроцедура ОтправитьЭтикеткиНаПечать(тбзПечати, СтандартныйШаблонЭтикетки, Исполнитель = Неопределено, ПринтерЭтикеток = Неопределено, ИдентификаторПечати = \"\") \n\n\tПопытка\n\t\t\n\t\tЕсли Не ЗначениеЗаполнено(ПринтерЭтикеток) Тогда \n\t\t\tПринтерЭтикеток = усСервисныеФункцииВызовСервераПовтИсп.ПолучитьЗначениеКонстанты(\"усСерверПечатиПринтерЭтикетокПоУмолчанию\"); \n\t\t\t\n\t\t\tЕсли НЕ ЗначениеЗаполнено(Исполнитель) Тогда \n\t\t\t\tИсполнитель = Пользователи.ТекущийПользователь().СкладскойСотрудник; \n\t\t\tКонецЕсли;\n\t\t\t\n\t\t\tЕсли ЗначениеЗаполнено(Исполнитель) Тогда \n\t\t\t\tПринтерЭтикеток = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Исполнитель, \"Принтер\");\n\t\t\tКонецЕсли;  \n\t\tКонецЕсли;\n\t\t\n\t\tДля Каждого Стр Из тбзПечати Цикл\n\t\t\t\n\t\t\tОбработкаЭтикетки = Обработки.усПечатьЭтикеток.Создать(); \n\t\t\t\n\t\t\tШаблонЭтикетки = Справочники.усШаблоныЭтикеток.ПустаяСсылка();\n\t\t\t\n\t\t\tШтрихкод = \"\";\n\t\t\t\n\t\t\tШтрихкод = усТСДОсновной.НайтиПодходящийШтрихкодНоменклатуры(Стр.Номенклатура, Стр.УпаковкаНоменклатуры, Стр.СтатусНоменклатуры, Стр.ПартияНоменклатуры);\n\t\t\tЕсли Штрихкод = \"\" Тогда\n\t\t\t\tШтрихкод = усСервисныеФункцииВызовСервера.ШтрихКодНовый(\"2\");\n\t\t\t\t\n\t\t\t\tстрНов = РегистрыСведений.усШтрихкоды.СоздатьМенеджерЗаписи();\n\t\t\t\tстрНов.Номенклатура = Стр.Номенклатура;\n\t\t\t\tстрНов.УпаковкаНоменклатуры = Стр.УпаковкаНоменклатуры;\n\t\t\t\tстрНов.СтатусНоменклатуры = Стр.СтатусНоменклатуры;\n\t\t\t\tстрНов.ПартияНоменклатуры = Стр.ПартияНоменклатуры;\n\t\t\t\tстрНов.Штрихкод = Штрихкод;\n\t\t\t\tстрНов.Записать();\n\t\t\tКонецЕсли;\n\n\t\t\tЕсли ЗначениеЗаполнено(СтандартныйШаблонЭтикетки) Тогда \n\t\t\t\tШаблонЭтикетки = СтандартныйШаблонЭтикетки;\t\n\t\t\tИначе\n\t\t\t\tШаблонЭтикетки = Стр.ШаблонЭтикетки;\n\t\t\tКонецЕсли;\n\t\t\tЕсли Не ЗначениеЗаполнено(ШаблонЭтикетки) Тогда\n\t\t\t\tВызватьИсключение СтрШаблон(НСтр(\"ru = 'Не задан шаблон этикетки для Номенклатуры %1 '\"), Стр.Номенклатура);\n\t\t\tКонецЕсли;  \t\n\t\t\t\n\t\t\tновСтр = ОбработкаЭтикетки.Товары.Добавить();\n\t\t\tновСтр.Выбран = Истина;\n\t\t\tновСтр.Номенклатура = Стр.Номенклатура;\n\t\t\tновСтр.УпаковкаНоменклатуры = Стр.УпаковкаНоменклатуры;\n\t\t\tновСтр.СтатусНоменклатуры = Стр.СтатусНоменклатуры;\n\t\t\tновСтр.ПартияНоменклатуры = Стр.ПартияНоменклатуры;\n\t\t\tновСтр.Количество = Стр.Количество;\n\t\t\tновСтр.КоличествоУпаковок = 0;\n\t\t\tновСтр.КоличествоЭтикеток = 1;\n\t\t\tновСтр.Штрихкод = Штрихкод;\n\t\t\tновСтр.ШаблонЭтикетки = ШаблонЭтикетки;\n\t\t\t\t\n\t\t\tПараметрКоманды = Новый Массив; // Добавим объект обработки печати этикеток в массив параметров печати.\n\t\t\tПараметрКоманды.Добавить(ОбработкаЭтикетки);\n\t\t\t\n\t\t\tПараметрыПечати = Новый Структура(\"ТипЭтикетки\", Перечисления.усТипыШаблоновЭтикеток.Номенклатура);\n\t\t\t\n\t\t\tРезультат = УправлениеПечатью.СформироватьПечатныеФормыДляБыстройПечати(\"Обработка.усПечатьЭтикеток\", \"Этикетки\", ПараметрКоманды, ПараметрыПечати);\n\t\t\tОтказ = Результат.Отказ;\n\t\t\tТабличныеДокументы = Результат.ТабличныеДокументы;\n\t\t\tПараметрыВывода = Результат.ПараметрыВывода;\n\t\t\tОбъектыПечати= Результат.ОбъектыПечати;\n\t\t\tДля каждого табДокумент Из ТабличныеДокументы Цикл\n\t\t\t\tЕсли ТипЗнч(табДокумент.Значение) = Тип(\"ТабличныйДокумент\") Тогда\n\t\t\t\t\tусСерверПечатиВызовСервера.ОтправитьНаПечать(табДокумент.Значение, ПринтерЭтикеток, 1, ШаблонЭтикетки, ,ИдентификаторПечати);\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЦикла;\t\n\t\t\t\n\t\tКонецЦикла; \n\t\t\n\tИсключение\n\t\tИнформацияОбОшибке = ИнформацияОбОшибке();\n\t\tЗаписьЖурналаРегистрации(\"ПечатьЭтикеток\", УровеньЖурналаРегистрации.Ошибка,,, \"Печать отклонена по причине \" + ОписаниеОшибки());\n\tКонецПопытки;\n\t\nКонецПроцедуры\n//Ситек ICT-41402 Николаев --\n\n//Ситек Николаев 22346 отмена подчиненных приемок ++\nФункция ОтменитьПодчиненныеПриемки(ОжидаемаяПриемка) Экспорт\n\t\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст = \n\t\t\"ВЫБРАТЬ\n\t\t|\tусПриемка.Ссылка КАК Ссылка\n\t\t|ИЗ\n\t\t|\tДокумент.усПриемка КАК усПриемка\n\t\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.усСтатусыПриемок КАК усСтатусыПриемок\n\t\t|\t\tПО усПриемка.Ссылка = усСтатусыПриемок.Приемка\n\t\t|ГДЕ\n\t\t|\tусПриемка.ОжидаемаяПриемка = &ОжидаемаяПриемка\n\t\t|\tИ усСтатусыПриемок.Статус В (ЗНАЧЕНИЕ(Перечисление.усСтатусыПриемок.Новая), ЗНАЧЕНИЕ(Перечисление.усСтатусыПриемок.КВыполнению), ЗНАЧЕНИЕ(Перечисление.усСтатусыПриемок.ВРаботе))\";  \n\t\n\tЗапрос.УстановитьПараметр(\"ОжидаемаяПриемка\", ОжидаемаяПриемка);\n\t\n\t\n\tРезультатЗапроса = Запрос.Выполнить();\n\t\n\tВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();\n\t\n\tПриемкиОтменены = Истина;\n\tПока ВыборкаДетальныеЗаписи.Следующий() Цикл\n\t\t//усРаботаСоСтатусамиВызовСервера.УстановитьСтатусПриемки(ВыборкаДетальныеЗаписи.Ссылка, Перечисления.усСтатусыПриемок.Отменена); \n\t\tПриемка = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект(); \n\t\tПриемка.ДополнительныеСвойства.Вставить(\"Статус\",Перечисления.усСтатусыПриемок.Отменена); \n\t\tПопытка\n\t\t\tПриемка.Записать();\n\t\tИсключение \n\t\t\tПриемкиОтменены= Ложь;\n\t\tКонецПопытки;\n\n\tКонецЦикла;\n\t\n\tВозврат ПриемкиОтменены;\n\t\nКонецФункции\n//Ситек Николаев 22346 --\n\n//++ Николаев ситек 20.08.24  ICT-37999\nФункция ПроверитьВыбранныеСтрокиЗаказаНаОтгрузкуПриКорректировке(мсвСтрок) Экспорт \n\t\n\tСообщение = \"\";\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст = \n\t\t\"ВЫБРАТЬ\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Владелец КАК ЗаказНаОтгрузку,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Владелец.НаправлениеОтгрузки КАК НаправлениеОтгрузки,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Ссылка КАК Ссылка\n\t\t|ПОМЕСТИТЬ втСтроки\n\t\t|ИЗ\n\t\t|\tДокумент.усСтрокаЗаказаНаОтгрузку КАК усСтрокаЗаказаНаОтгрузку\n\t\t|ГДЕ\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Ссылка В(&мсвДокументов)\n\t\t|;\n\t\t|\n\t\t|////////////////////////////////////////////////////////////////////////////////\n\t\t|ВЫБРАТЬ\n\t\t|\tусНаправлениеОтгрузки.Ссылка КАК Ссылка\n\t\t|ПОМЕСТИТЬ втНедоступныеНаправления\n\t\t|ИЗ\n\t\t|\tСправочник.усНаправлениеОтгрузки КАК усНаправлениеОтгрузки\n\t\t|ГДЕ\n\t\t|\tусНаправлениеОтгрузки.Бюро1440_ИдентификаторОбмена = \"\"ОтгрузкаСырьяПереработчику\"\"\n\t\t|;\n\t\t|\n\t\t|////////////////////////////////////////////////////////////////////////////////\n\t\t|ВЫБРАТЬ\n\t\t|\tвтСтроки.Ссылка КАК Ссылка,\n\t\t|\tвтСтроки.Ссылка.Представление КАК СсылкаПредставление\n\t\t|ИЗ\n\t\t|\tвтСтроки КАК втСтроки\n\t\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ втНедоступныеНаправления КАК втНедоступныеНаправления\n\t\t|\t\tПО втСтроки.НаправлениеОтгрузки = втНедоступныеНаправления.Ссылка\";\n\t\n\tЗапрос.УстановитьПараметр(\"мсвДокументов\", мсвСтрок);\n\t\n\tРезультатЗапроса = Запрос.Выполнить();\n\t\n\tЕсли НЕ РезультатЗапроса.Пустой() Тогда \t\t\n\t\tВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();\n\t\tСтроки = \"\";\n\t\tКоличество = 0;          \n\t\tПока ВыборкаДетальныеЗаписи.Следующий() Цикл\n\t\t\tНайденаяСтрока = мсвСтрок.Найти(ВыборкаДетальныеЗаписи.Ссылка);\t\t  \n\t\t\tЕсли НЕ НайденаяСтрока = Неопределено Тогда\n\t\t\t\tмсвСтрок.Удалить(НайденаяСтрока);   \n\t\t\t\tСтроки = Строки + ВыборкаДетальныеЗаписи.СсылкаПредставление + Символы.ПС;\n\t\t\t\tКоличество = Количество + 1;\n\t\t\tКонецЕсли; \t\n\t\tКонецЦикла;  \n\t\tЕсли Количество > 1 Тогда\n\t\t\tСообщение = \"Строки:\" + Символы.ПС;\t\n\t\tИначе\n\t\t\tСообщение = \"Строка:\" + Символы.ПС;\n\t\tКонецЕсли;\n\t\tСообщение = Сообщение + СтрШаблон(\"%1 из корректировки т.к. направление отгрузки = \"\"Отгрузка сырья переработчику\"\"\",  ?(Количество > 1, Строки + \"исключены\", Строки + \"исключена\"));\n\tКонецЕсли;\n\t\n\tВозврат Сообщение;\n\t\nКонецФункции\n\nПроцедура СоздатьИсходящееЭлектронноеПисьмо(ПараметрыПисьма) Экспорт \n\t\n\tЕсли ПараметрыПисьма.Получатели.Количество() Тогда \n\t\t\n\t\tПисьмо \t\t\t\t\t\t\t= Документы.ЭлектронноеПисьмоИсходящее.СоздатьДокумент();\n\t\tПисьмо.Дата \t\t\t\t\t= ТекущаяДата();\n\t\tПисьмо.Тема \t\t\t\t\t= ПараметрыПисьма.Тема;\n\t\tПисьмо.Текст \t\t\t\t\t= ПараметрыПисьма.Текст;\n\t\tПисьмо.ТипТекста \t\t\t\t= Перечисления.ТипыТекстовЭлектронныхПисем.ПростойТекст;\n\t\tПисьмо.Автор \t\t\t\t\t= ПараметрыСеанса.ТекущийПользователь;\n\t\tПисьмо.Ответственный \t\t\t= ПараметрыСеанса.ТекущийПользователь;\n\t\tПисьмо.Важность \t\t\t\t= Перечисления.ВариантыВажностиВзаимодействия.Обычная;\n\t\tПисьмо.Кодировка \t\t\t\t= \"UTF-8\"; \n\t\tПисьмо.ОтправительПредставление = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты.ИмяПользователя + \" <\" \n\t\t+ Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты.АдресЭлектроннойПочты + \">\";\t\t\n\t\tСоставПредмета \t\t\t\t\t= Письмо.Метаданные().Реквизиты.ВзаимодействиеОснование.Тип.типы();\n\t\tЕсли НЕ СоставПредмета.Найти(ТипЗнч(ПараметрыПисьма.Предмет)) = Неопределено Тогда\n\t\t\tПисьмо.ВзаимодействиеОснование \t= ПараметрыПисьма.Предмет;\t\n\t\tКонецЕсли;\n\t\tПисьмо.СтатусПисьма \t\t\t= Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Исходящее;\n\t\tПисьмо.УчетнаяЗапись \t\t\t= Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты; \t\n\t\t\n\t\tДля каждого Получатель Из ПараметрыПисьма.Получатели Цикл\n\t\t\tНовыйПолучатель = Письмо.ПолучателиПисьма.Добавить();\n\t\t\tЗаполнитьЗначенияСвойств(НовыйПолучатель, Получатель);\n\t\tКонецЦикла;\n\t\tПисьмо.СписокПолучателейПисьма = ВзаимодействияКлиентСервер.ПолучитьПредставлениеСпискаАдресатов(Письмо.ПолучателиПисьма, Ложь);\n\t\t\n\t\tПисьмо.Записать(); \n\t\t\t\t\n\t\tНаборЗаписей = РегистрыСведений.ПредметыПапкиВзаимодействий.СоздатьНаборЗаписей();\n\t\tНаборЗаписей.Отбор.Взаимодействие.Установить(Письмо.Ссылка);\n\t\t\n\t\tЗапись = НаборЗаписей.Добавить();\n\t\tЗапись.Взаимодействие          = Письмо.Ссылка;\n\t\tСоставПредмета = НаборЗаписей.Метаданные().Ресурсы.предмет.Тип.Типы();\n\t\tЕсли НЕ СоставПредмета.Найти(ТипЗнч(ПараметрыПисьма.Предмет)) = Неопределено Тогда\n\t\t\tЗапись.Предмет             = ПараметрыПисьма.Предмет; \n\t\tКонецЕсли;\t\n\t\tЗапись.ПапкаЭлектронногоПисьма = Справочники.ПапкиЭлектронныхПисем.НайтиПоНаименованию(\"Исходящие\", Истина);\n\t\tЗапись.Рассмотрено             = Истина;\n\t\tЗапись.РассмотретьПосле        = Дата(1,1,1);\n\t\t\n\t\tНаборЗаписей.Записать();\n\t\t\n\t\tПараметрыПисьма.СозданноеПисьмо = Письмо.Ссылка;\n\tКонецЕсли;\n\t\nКонецПроцедуры   \n\nФункция ВернутьПараметрыПисьма() Экспорт \n\t\n\tсткПараметры = Новый Структура;\n\tсткПараметры.Вставить(\"Тема\", \"\");\n\tсткПараметры.Вставить(\"Текст\", \"\");\n\tсткПараметры.Вставить(\"Предмет\", Неопределено);\n\tсткПараметры.Вставить(\"Получатели\", Новый Массив);\n\tсткПараметры.Вставить(\"СозданноеПисьмо\", Документы.ЭлектронноеПисьмоИсходящее.ПустаяСсылка());\n\t\n\tВозврат сткПараметры;\n\nКонецФункции",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\Бюро1440_МодификацияФормСервер\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\Бюро1440_МодификацияФормСервер\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/ff0c8b35da5307fea197e1e877613e6ae74bf066/_bsl%5CResources%5C726598511%5CCommonModule%5C%D0%91%D1%8E%D1%80%D0%BE1440_%D0%9C%D0%BE%D0%B4%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D1%8F%D0%A4%D0%BE%D1%80%D0%BC%D0%A1%D0%B5%D1%80%D0%B2%D0%B5%D1%80%5CCommonModule.obj.bsl",
            "size": 61422,
            "truncated": false,
            "content": "Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт\n\t\n\tПопытка\n\t\tИмяФормы = Форма.ИмяФормы;\n\tИсключение\n\t\tИмяФормы = \"\";\n\tКонецПопытки;\n\t\n\tЕсли ИмяФормы = \"Справочник.усУпаковкиНоменклатуры.Форма.ФормаЭлемента\" Тогда\n\t\tСправочник_усУпаковкиНоменклатуры_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка); \t\n\tИначеЕсли ИмяФормы = \"Справочник.усКонтрагенты.Форма.ФормаЭлемента\" Тогда\n\t\tСправочник_усКонтрагенты_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\tИначеЕсли ИмяФормы = \"Справочник.усНоменклатура.Форма.ФормаЭлемента\" Тогда\n\t\tСправочник_усНоменклатура_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка); \n\tИначеЕсли ИмяФормы = \"Справочник.усСтадииПриемки.Форма.ФормаЭлемента\" Тогда\n\t\tСправочник_усСтадииПриемки_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\tИначеЕсли ИмяФормы = \"Справочник.усСтадииОтгрузки.Форма.ФормаЭлемента\" Тогда\n\t\tСправочник_усСтадииОтгрузки_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\tИначеЕсли ИмяФормы = \"Справочник.усИсточникиПоступления.Форма.ФормаЭлемента\" Тогда\n\t\tСправочник_усИсточникиПоступления_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\tИначеЕсли ИмяФормы = \"Справочник.усНаправлениеОтгрузки.Форма.ФормаЭлемента\" Тогда\n\t\tСправочник_усНаправлениеОтгрузки_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\tИначеЕсли ИмяФормы = \"Справочник.усКонтейнеры.Форма.ФормаЭлемента\" Тогда\n\t\tСправочник_усКонтейнеры_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\n\tИначеЕсли ИмяФормы = \"Документ.усЗаказНаОтгрузку.Форма.ФормаДокумента\" Тогда\n\t\tДокумент_усЗаказНаОтгрузку_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\tИначеЕсли ИмяФормы = \"Документ.усОжидаемаяПриемка.Форма.ФормаДокумента\" Тогда\n\t\tДокумент_усОжидаемаяПриемка_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);  \n\tИначеЕсли ИмяФормы = \"Документ.усПриемка.Форма.ФормаДокумента\" Тогда\n\t\tДокумент_усПриемка_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\t\t\n\tИначеЕсли ИмяФормы = \"Документ.усГруппаОтбора.Форма.ФормаДокумента\" Тогда\n\t\tДокумент_усГруппаОтбора_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\tИначеЕсли ИмяФормы = \"Документ.усАктСверкиИнвентаризации.Форма.ФормаДокумента\" Тогда\n\t\tДокумент_усАктСверкиИнвентаризации_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\tИначеЕсли ИмяФормы = \"Документ.усСтрокаЗаказаНаОтгрузку.Форма.ФормаДокумента\" Тогда\n\t\tДокумент_усСтрокаЗаказаНаОтгрузку_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\tИначеЕсли ИмяФормы = \"Документ.усСтрокаОжидаемойПриемки.Форма.ФормаДокумента\" Тогда\n\t\tДокумент_усСтрокаОжидаемойПриемки_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\t\t\n\tИначеЕсли ИмяФормы = \"Справочник.усПравилаСкладскихОпераций.Форма.СтраницаПриемка\"\n\t\tИЛИ ИмяФормы = \"Справочник.усПравилаСкладскихОпераций.Форма.СтраницаПриемкаПослеПредварительнойПриемки\" Тогда\n\t\tСправочник_усПравилаСкладскихОпераций_СтраницаПриемка_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\tИначеЕсли ИмяФормы = \"Справочник.усПравилаСкладскихОпераций.Форма.СтраницаОтборТовара\" Тогда\n\t\tСправочник_усПравилаСкладскихОпераций_СтраницаОтборТовара_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\tИначеЕсли ИмяФормы = \"Справочник.усПравилаСкладскихОпераций.Форма.СтраницаСвободноеПеремещениеТовара\" Тогда\n\t\tСправочник_усПравилаСкладскихОпераций_СтраницаСвободноеПеремещениеТовара_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\t\t\n\tИначеЕсли ИмяФормы = \"Справочник.усПравилаСкладскихОпераций.Форма.СтраницаИнвентаризацияКонтейнеров\"\n\t\tИЛИ ИмяФормы = \"Справочник.усПравилаСкладскихОпераций.Форма.СтраницаИнвентаризацияСоставаКонтейнеров\"\n\t\tИЛИ ИмяФормы = \"Справочник.усПравилаСкладскихОпераций.Форма.СтраницаСвободнаяИнвентаризацияКонтейнеров\"\n\t\tИЛИ ИмяФормы = \"Справочник.усПравилаСкладскихОпераций.Форма.СтраницаСвободнаяИнвентаризацияСоставаКонтейнеров\" Тогда\n\t\tСправочник_усПравилаСкладскихОпераций_СтраницаИнвентаризация_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\t\t\n\tИначеЕсли ИмяФормы = \"ОбщаяФорма.усСерверПечати\" Тогда  \n\t\tОбщаяФорма_усСерверПечати_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\tИначеЕсли ИмяФормы = \"ОбщаяФорма.усСкладскойУчет\" Тогда  \n\t\tОбщаяФорма_усСкладскойУчет_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\t\t\n\tИначеЕсли ИмяФормы = \"Обработка.усПланированиеЗадач.Форма.ПросмотрЗадач\" Тогда  \n\t\tСправочник_усПланированиеЗадач_ПросмотрЗадач_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\t\t\n\tИначеЕсли ИмяФормы = \"Обработка.усПланированиеЗадач.Форма.ПеремещениеТовара\" Тогда  \n\t\tСправочник_усПланированиеЗадач_ПеремещениеТовара_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);\n\n\tКонецЕсли;\n\t\nКонецПроцедуры\n\n\nПроцедура Справочник_усУпаковкиНоменклатуры_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t\n\tДопПараметры = Новый Структура(\"Доступность\", Ложь);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"Бюро1440_УпаковкаНабора\", \"Упаковка набора (Бюро1440)\", \"Объект.Бюро1440_УпаковкаНабора\", Неопределено, ДопПараметры, Элементы.ГруппаКоэффициент);\n\t\nКонецПроцедуры    \n\nПроцедура Справочник_усКонтрагенты_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t\n\tДопПараметры = Новый Структура(\"Доступность\", Ложь);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"Бюро1440_ТипСправочникаКИС\", \"Тип справочника КИС (Бюро1440)\", \"Объект.Бюро1440_ТипСправочникаКИС\", Элементы.ГруппаНастройки, ДопПараметры);\n\t\nКонецПроцедуры    \n\nПроцедура Справочник_усНоменклатура_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t\n\tДопПараметры = Новый Структура(\"Доступность\", Ложь);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"Бюро1440_НаборУпаковок\", \"Набор упаковок (Бюро1440)\", \"Объект.Бюро1440_НаборУпаковок\", Элементы.ГруппаПараметрыУчетаПравая, ДопПараметры);\n\t\nКонецПроцедуры    \n\nПроцедура Справочник_усСтадииПриемки_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t\n\tДополнительныеПараметры = Новый Структура;\n\tДополнительныеПараметры.Вставить(\"Вид\", ВидПоляФормы.ПолеФлажка); \n\tДополнительныеПараметры.Вставить(\"ПоложениеЗаголовка\", ПоложениеЗаголовкаЭлементаФормы.Право);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ПроверятьНаличиеПриемкиПриЗакрытииОП\", \n\t\t\t\"Проверять наличие приёмки при закрытии ОП (Бюро1440)\", \"Объект.Бюро1440_ПроверятьНаличиеПриемкиПриЗакрытииОП\", \n\t\t\tЭлементы.ГруппаПриемка_ОтступПравая, ДополнительныеПараметры, Элементы.ГруппаПриемкаНастройкиПечати);  \n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ПечатьЭтикетокПриПереводеДокументаПриемкаКВыполнению\", \n\t\t\t\"Печать этикеток при переводе документа приемка к выполнению (Бюро_1440)\", \"Объект.Бюро1440_ПечатьЭтикетокПриПереводеДокументаПриемкаКВыполнению\", \n\t\t\tЭлементы.ГруппаПриемка_ОтступПравая, ДополнительныеПараметры, Элементы.ГруппаПриемкаПечатьЭтикеток);\n\t\t\t\n\tДополнительныеПараметры = Новый Структура;\n\tДополнительныеПараметры.Вставить(\"Вид\", ВидПоляФормы.ПолеВвода); \n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ШаблонЭтикеткиДляПечати\",,\"Объект.Бюро1440_ШаблонЭтикеткиДляПечати\", \n\t\t\tЭлементы.ГруппаПриемка_ОтступПравая, ДополнительныеПараметры, Элементы.ГруппаПриемкаПечатьЭтикеток);\n\n\n\t\nКонецПроцедуры      \n\nПроцедура Справочник_усСтадииОтгрузки_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t\n\tДополнительныеПараметры = Новый Структура;\n\tДополнительныеПараметры.Вставить(\"Вид\", ВидПоляФормы.ПолеФлажка); \n\tДополнительныеПараметры.Вставить(\"ПоложениеЗаголовка\", ПоложениеЗаголовкаЭлементаФормы.Право);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ИспользоватьМаркировку\", \n\t\t\t\"Использовать маркировку (Бюро1440)\", \"Объект.Бюро1440_ИспользоватьМаркировку\", \n\t\t\tЭлементы.ГруппаОтбор_ОтступПравая, ДополнительныеПараметры, Элементы.ЗонаОтобранныхЗаказовЦелыхКонтейнеров); \n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ПечатьЭтикетокПриПолученииСтатусаДокументаОтобран\",, \"Объект.Бюро1440_ПечатьЭтикетокПриПолученииСтатусаДокументаОтобран\", \n\t\t\tЭлементы.ГруппаОтбор_ОтступПравая, ДополнительныеПараметры, Элементы.ЗонаОтобранныхЗаказовЦелыхКонтейнеров);\n\t\t\t\n\tДополнительныеПараметры = Новый Структура;\n\tДополнительныеПараметры.Вставить(\"Вид\", ВидПоляФормы.ПолеВвода); \n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ШаблонЭтикеткиДляПечати\",,\"Объект.Бюро1440_ШаблонЭтикеткиДляПечати\", \n\t\t\tЭлементы.ГруппаОтбор_ОтступПравая, ДополнительныеПараметры, Элементы.ЗонаОтобранныхЗаказовЦелыхКонтейнеров);\n\n\t\nКонецПроцедуры\n\nПроцедура Справочник_усИсточникиПоступления_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t\n\tДопПараметры = Новый Структура(\"Доступность\", Истина);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"Бюро1440_ИдентификаторОбмена\", \"Идентификатор обмена (Бюро 1440)\", \"Объект.Бюро1440_ИдентификаторОбмена\",, ДопПараметры);\n\t\nКонецПроцедуры  \n\t\t\nПроцедура Справочник_усНаправлениеОтгрузки_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t\n\tДопПараметры = Новый Структура(\"Доступность\", Истина);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"Бюро1440_ИдентификаторОбмена\", \"Идентификатор обмена (Бюро 1440)\", \"Объект.Бюро1440_ИдентификаторОбмена\",, ДопПараметры);\n\t\t\nКонецПроцедуры    \n\nПроцедура Справочник_усПравилаСкладскихОпераций_СтраницаПриемка_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\tДобавитьРеквизитФормы(Форма, \"Бюро1440_ОтключитьПроверкуИспользованияКонтейнераВПриемках\", Новый ОписаниеТипов(\"Булево\"), ,\n\t\t\t\"Отключить проверку использования контейнера в приемках (Бюро1440)\");   \n\t\n\tДопПараметры = Новый Структура;\n\tДопПараметры.Вставить(\"Вид\", ВидПоляФормы.ПолеФлажка); \n\tДопПараметры.Вставить(\"ПоложениеЗаголовка\", ПоложениеЗаголовкаЭлементаФормы.Право);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ОтключитьПроверкуИспользованияКонтейнераВПриемках\", , \n\t\t\t\"Бюро1440_ОтключитьПроверкуИспользованияКонтейнераВПриемках\", Элементы.ГруппаПраво, ДопПараметры, Элементы.РаскладыватьПринятыйТоварПоКонтейнерам);\n\t\nКонецПроцедуры\n\nПроцедура Справочник_усПравилаСкладскихОпераций_СтраницаОтборТовара_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\tДобавитьРеквизитФормы(Форма, \"Бюро1440_УказыватьЯчейкуВозвратаТовара\", Новый ОписаниеТипов(\"Булево\"), ,\n\t\t\t\"Указывать ячейку возврата товара (Бюро1440)\");   \n\t\n\tДопПараметры = Новый Структура;\n\tДопПараметры.Вставить(\"Вид\", ВидПоляФормы.ПолеФлажка); \n\tДопПараметры.Вставить(\"ПоложениеЗаголовка\", ПоложениеЗаголовкаЭлементаФормы.Право);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_УказыватьЯчейкуВозвратаТовара\", , \n\t\t\t\"Бюро1440_УказыватьЯчейкуВозвратаТовара\", Элементы.ГруппаОтборТовара_ВзятьТовар, ДопПараметры, Элементы.отПроверятьЗаполненностьВГХ);\n\t\nКонецПроцедуры \n\nПроцедура Справочник_усПравилаСкладскихОпераций_СтраницаСвободноеПеремещениеТовара_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\tДобавитьРеквизитФормы(Форма, \"Бюро1440_ОтображатьОстатокПриВводеТовара\", Новый ОписаниеТипов(\"Булево\"), ,\n\t\t\t\"Отображать остаток при вводе товара (Бюро1440)\");   \n\t\n\tДопПараметры = Новый Структура;\n\tДопПараметры.Вставить(\"Вид\", ВидПоляФормы.ПолеФлажка); \n\tДопПараметры.Вставить(\"ПоложениеЗаголовка\", ПоложениеЗаголовкаЭлементаФормы.Право);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ОтображатьОстатокПриВводеТовара\", , \n\t\t\t\"Бюро1440_ОтображатьОстатокПриВводеТовара\", Элементы.СтраницаСвободноеПеремещениеТовара_Взять, ДопПараметры);\n\t\nКонецПроцедуры\n\nПроцедура Справочник_усПравилаСкладскихОпераций_СтраницаИнвентаризация_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t\n\tЕсли Форма.ИмяФормы = \"Справочник.усПравилаСкладскихОпераций.Форма.СтраницаИнвентаризацияКонтейнеров\" Тогда\n\t\tГруппаРодитель\t= Элементы.СтраницаИнвентаризацияКонтейнеров;\n\tИначеЕсли Форма.ИмяФормы = \"Справочник.усПравилаСкладскихОпераций.Форма.СтраницаИнвентаризацияСоставаКонтейнеров\" Тогда\n\t\tГруппаРодитель\t= Элементы.СтраницаИнвентаризацияСоставаКонтейнеров; \n\tИначеЕсли Форма.ИмяФормы = \"Справочник.усПравилаСкладскихОпераций.Форма.СтраницаСвободнаяИнвентаризацияКонтейнеров\" Тогда\n\t\tГруппаРодитель\t= Элементы.СтраницаСвободнаяИнвентаризацияКонтейнеров;\n\tИначеЕсли Форма.ИмяФормы = \"Справочник.усПравилаСкладскихОпераций.Форма.СтраницаСвободнаяИнвентаризацияСоставаКонтейнеров\" Тогда\n\t\tГруппаРодитель\t= Элементы.СтраницаСвободнаяИнвентаризацияСоставаКонтейнеров;\n\tКонецЕсли;\n\t\n\tДобавляемыеРеквизиты = Новый Массив;\n\tДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(\"Бюро1440_ПодтверждатьНесоответствиеПланаФакту\", Новый ОписаниеТипов(\"Булево\"), , \n\t\t\t\"Подтверждать несоответствие плана факту (Бюро1440)\"));\n\tДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(\"Бюро1440_ЯчейкаНедостач\", Новый ОписаниеТипов(\"СправочникСсылка.усЯчейки\"), , \n\t\t\t\"Ячейка недостач (Бюро1440)\")); \n\tДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(\"Бюро1440_ОтображатьПланПересчета\", Новый ОписаниеТипов(\"Булево\"), , \n\t\t\t\"Отображать план пересчета (Бюро1440)\"));\n\tФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты); \n\t\n\tДополнительныеПараметры = Новый Структура;\n\tДополнительныеПараметры.Вставить(\"ОтображатьЗаголовок\", Ложь);\n\tДобавитьГруппуНаФорму(Элементы, ВидГруппыФормы.ОбычнаяГруппа, \"Бюро1440_ГруппаНесоответствиеПланаФакту\", \n\t\t\t\"Не соответсвие плана факту\", , ГруппаРодитель, ДополнительныеПараметры);\n\t\n\tДополнительныеПараметры = Новый Структура;\n\tДополнительныеПараметры.Вставить(\"Вид\", ВидПоляФормы.ПолеФлажка); \n\tДополнительныеПараметры.Вставить(\"ПоложениеЗаголовка\", ПоложениеЗаголовкаЭлементаФормы.Право);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ПодтверждатьНесоответствиеПланаФакту\", , \n\t\t\t\"Бюро1440_ПодтверждатьНесоответствиеПланаФакту\", Элементы.Бюро1440_ГруппаНесоответствиеПланаФакту, ДополнительныеПараметры); \n\t\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ЯчейкаНедостач\", , \n\t\t\t\"Бюро1440_ЯчейкаНедостач\", Элементы.Бюро1440_ГруппаНесоответствиеПланаФакту);\n \n\tДополнительныеПараметры = Новый Структура;\n\tДополнительныеПараметры.Вставить(\"Вид\", ВидПоляФормы.ПолеФлажка); \n\tДополнительныеПараметры.Вставить(\"ПоложениеЗаголовка\", ПоложениеЗаголовкаЭлементаФормы.Право);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ОтображатьПланПересчета\", , \n\t\t\t\"Бюро1440_ОтображатьПланПересчета\", ГруппаРодитель, ДополнительныеПараметры);\n\t\nКонецПроцедуры \n\nПроцедура Справочник_усКонтейнеры_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t//ДобавитьКомандуНаФорму(Элементы, ВидКнопкиФормы.КнопкаКоманднойПанели, \"ФормаОбработкаБюро1440_СменитьПоклажедателяДляНоменклатурВКонтейнерахСменитьПоклажедателяДляНоменклатурВКонтейнерах\",,, Элементы.ФормаКоманднаяПанель); \n\t\nКонецПроцедуры \n\n\nПроцедура Документ_усЗаказНаОтгрузку_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t\t\n\tДопПараметры = Новый Структура(\"ТолькоПросмотр\", Истина);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"Бюро1440_ДокументОснованиеКИС\",,\"Объект.Бюро1440_ДокументОснованиеКИС\",Элементы.ГруппаШапкаЛево, ДопПараметры);\n\t\n\tДопПараметры = Новый Структура(\"ТолькоПросмотр, Вид\", Истина, ВидПоляФормы.ПолеФлажка);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"Бюро1440_РазрешенОтборСверхПлана\",,\"Объект.Бюро1440_РазрешенОтборСверхПлана\",Элементы.ГруппаШапкаПраво, ДопПараметры);\n\t\n\tЭлементы.НомерКИС.ТолькоПросмотр\t= Истина; \n\t\n\tДобавитьКомандуФормы(Форма, \"ЗагрузкаИзТД\", \"Загрузка из табличного документа\", \"ЗагрузкаИзТД\"); \n\tДобавитьКомандуНаФорму(Элементы, ВидКнопкиФормы.ОбычнаяКнопка, \"ЗагрузкаИзТД\", \"Загрузка из табличного документа\", \"ЗагрузкаИзТД\",\n\t\tЭлементы.СтрокиЗаказаНаОтгрузку.КоманднаяПанель); \n\t\t\n\tДобавитьКомандуФормы(Форма, \"Бюро1440_СоздатьМаркировку\", \"Создать маркировку (Бюро 1440)\", \"Бюро1440_СоздатьМаркировку\"); \n\tДобавитьКомандуНаФорму(Элементы, ВидКнопкиФормы.КнопкаКоманднойПанели, \"ФормаДокументусЗаказНаОтгрузкуБюро1440_СоздатьМаркировку\", \"Создать маркировку (Бюро 1440)\", \"Бюро1440_СоздатьМаркировку\",\n\tэлементы.ФормаСоздатьНаОсновании);  \n\t\n\tОтменитьДокумент = Элементы.Найти(\"ОтменитьДокумент\");\n\tЕсли ОтменитьДокумент <> Неопределено Тогда \n\t\tОтменитьДокумент.Доступность = Пользователи.РолиДоступны(\"ПолныеПрава, усРазработчик\");\n\tКонецЕсли;\n\t\nКонецПроцедуры  \n\nПроцедура Документ_усОжидаемаяПриемка_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t\n\tДопПараметры = Новый Структура(\"ТолькоПросмотр\", Истина);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"Бюро1440_ДокументОснованиеКИС\",,\"Объект.Бюро1440_ДокументОснованиеКИС\",Элементы.ГруппаШапкаЛево, ДопПараметры);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"Бюро1440_ЗаказПоставщика\",,\"Объект.Бюро1440_ЗаказПоставщика\",Элементы.ГруппаШапкаЛево, ДопПараметры);\n\t\n\tЭлементы.НомерКИС.ТолькоПросмотр\t= Истина; \n\t\n\tДобавитьКомандуФормы(Форма, \"ЗагрузкаИзТД\", \"Загрузка из табличного документа\", \"ЗагрузкаИзТД\"); \n\tДобавитьКомандуНаФорму(Элементы, ВидКнопкиФормы.ОбычнаяКнопка, \"ЗагрузкаИзТД\", \"Загрузка из табличного документа\", \"ЗагрузкаИзТД\",\n\t\tЭлементы.СтрокиОжидаемойПриемки.КоманднаяПанель);\n\t\t\n\tОтменитьДокумент = Элементы.Найти(\"ОтменитьДокумент\");\n\tЕсли ОтменитьДокумент <> Неопределено Тогда \n\t\tОтменитьДокумент.Доступность = Пользователи.РолиДоступны(\"ПолныеПрава, усРазработчик\");\n\tКонецЕсли;\n\t\nКонецПроцедуры \n\nПроцедура Документ_усПриемка_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t\n\tДопПараметры = Новый Структура(\"ТолькоПросмотр\", Истина);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"Бюро1440_ДокументОснованиеКИС\",,\"Объект.Бюро1440_ДокументОснованиеКИС\",Элементы.ГруппаШапкаЛево, ДопПараметры);  \n\t\n\tДопПараметры = Новый Структура();\n\tДопПараметры.Вставить(\"ТолькоПросмотр\", Ложь); \n\tДопПараметры.Вставить(\"Вид\", ВидПоляФормы.ПолеФлажка); \n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"Бюро1440_ПечатьЭтикетокВыполнена\",,\"Объект.Бюро1440_ПечатьЭтикетокВыполнена\",Элементы.ГруппаШапкаПраво, ДопПараметры);\n\t\nКонецПроцедуры \n\nПроцедура Документ_усГруппаОтбора_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_Поклажедатель\", , \"Объект.Бюро1440_Поклажедатель\", Элементы.ГруппаЛевая);\n\t\nКонецПроцедуры \n\nПроцедура Документ_усАктСверкиИнвентаризации_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t\n\tДобавитьГруппуНаФорму(Элементы, ВидГруппыФормы.Страница, \"Группа_ОстаткиТовараНаСкладе\", \n\t\t\"Остатки товара на складе\", , Элементы.Страницы, , Элементы.ГруппаДополнительно); \n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеТабличногоДокумента, \"Бюро1440_ОстаткиТовараНаСкладе\", , \n\t\t\"Объект.Бюро1440_ОстаткиТовараНаСкладе\", Элементы.Группа_ОстаткиТовараНаСкладе);\n\t\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеНадписи, \"Бюро1440_ОстаткиТовараНаСкладеНомерСтроки\", , \n\t\t\"Объект.Бюро1440_ОстаткиТовараНаСкладе.НомерСтроки\", Элементы.Бюро1440_ОстаткиТовараНаСкладе);   \t\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ОстаткиТовараНаСкладеНоменклатура\", , \n\t\t\"Объект.Бюро1440_ОстаткиТовараНаСкладе.Номенклатура\", Элементы.Бюро1440_ОстаткиТовараНаСкладе);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ОстаткиТовараНаСкладеСтатусНоменклатуры\", , \n\t\t\"Объект.Бюро1440_ОстаткиТовараНаСкладе.СтатусНоменклатуры\", Элементы.Бюро1440_ОстаткиТовараНаСкладе);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ОстаткиТовараНаСкладеПартияНоменклатуры\", , \n\t\t\"Объект.Бюро1440_ОстаткиТовараНаСкладе.ПартияНоменклатуры\", Элементы.Бюро1440_ОстаткиТовараНаСкладе);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ОстаткиТовараНаСкладеУпаковкаНоменклатуры\", , \n\t\t\"Объект.Бюро1440_ОстаткиТовараНаСкладе.УпаковкаНоменклатуры\", Элементы.Бюро1440_ОстаткиТовараНаСкладе);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ОстаткиТовараНаСкладеКоличество\", , \n\t\t\"Объект.Бюро1440_ОстаткиТовараНаСкладе.Количество\", Элементы.Бюро1440_ОстаткиТовараНаСкладе);\n\t\nКонецПроцедуры \n\nПроцедура Документ_усСтрокаЗаказаНаОтгрузку_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t\n\tЭлементы.НомерКонтейнера.КнопкаОткрытия\t= Истина;\n\tЭлементы.НомерКонтейнера.КнопкаВыбора\t= Истина; \n\t\n\tЭлементы.НомерКонтейнера.УстановитьДействие(\"Открытие\", \t\"ОткрытьКонтейнер\"); \n\tЭлементы.НомерКонтейнера.УстановитьДействие(\"НачалоВыбора\", \"НачалоВыбораКонтейнер\"); \n\t\n\tЭлементы.КодСтрокиКИС.ТолькоПросмотр = НЕ РольДоступна(\"ПолныеПрава\");\n\t\nКонецПроцедуры\n\nПроцедура Документ_усСтрокаОжидаемойПриемки_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t\t\n\tЭлементы.КодСтрокиКИС.ТолькоПросмотр = НЕ РольДоступна(\"ПолныеПрава\");\n\t\nКонецПроцедуры \n\n\n\nПроцедура ОбщаяФорма_усСерверПечати_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\t\n\tДополнительныеПараметры = Новый Структура;\n\tДополнительныеПараметры.Вставить(\"ОтображатьЗаголовок\", Ложь);\n\tДобавитьГруппуНаФорму(Элементы, ВидГруппыФормы.ОбычнаяГруппа, \"Бюро1440_ZPL\", \n\t\t\"ZPL\", , Элементы.Группа46, ДополнительныеПараметры, Элементы.ГруппаНастройкиСерверПечати);  \n\t\n\tДополнительныеПараметры = Новый Структура;\n\tДополнительныеПараметры.Вставить(\"Вид\", ВидПоляФормы.ПолеФлажка); \n\tДополнительныеПараметры.Вставить(\"ПоложениеЗаголовка\", ПоложениеЗаголовкаЭлементаФормы.Право);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_ИспользоватьZPL\", \"Использовать ZPL\",\n\t\t\"НаборКонстант.Бюро1440_ИспользоватьZPL\", Элементы.Бюро1440_ZPL, ДополнительныеПараметры);\n\t\n\tДополнительныеПараметры = Новый Структура;\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_Каталог\", \"Каталог\",\n\t\t\"НаборКонстант.Бюро1440_Каталог\", Элементы.Бюро1440_ZPL, ДополнительныеПараметры);\n\t\nКонецПроцедуры \n\nПроцедура ОбщаяФорма_усСкладскойУчет_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы;\n\n\tДополнительныеПараметры = Новый Структура;\n\tДополнительныеПараметры.Вставить(\"Вид\", ВидПоляФормы.ПолеФлажка); \n\tДополнительныеПараметры.Вставить(\"ПоложениеЗаголовка\", ПоложениеЗаголовкаЭлементаФормы.Право);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, \"Бюро1440_РазрешитьГрупповоеВыполнениеЗадач\", \"Разрешить групповое выполнение задач (Бюро1440)\",\n\t\t\"НаборКонстант.Бюро1440_РазрешитьГрупповоеВыполнениеЗадач\", Элементы.Группа24, ДополнительныеПараметры, Элементы.Группа3);\nКонецПроцедуры \n\n\nПроцедура Справочник_усПланированиеЗадач_ПросмотрЗадач_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы; \n\tДопПараметры = Новый Структура(\"ТолькоПросмотр\", Истина);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"КодКИС\",,\"Задач.Номенклатура.КодКИС\",Элементы.СписокЗадачГруппаНоменклатура, ДопПараметры, Элементы.СписокЗадачКоличество);\n\t\nКонецПроцедуры\n\nПроцедура Справочник_усПланированиеЗадач_ПеремещениеТовара_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n\t\n\tЭлементы = Форма.Элементы; \n\tДопПараметры = Новый Структура(\"ТолькоПросмотр\", Истина);\n\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"КодКИС\",,\"ПеремещениеТоваров.Номенклатура.КодКИС\",Элементы.ПеремещениеТоваровГруппаНоменклатура, ДопПараметры, Элементы.ПеремещениеТоваровСтатусНоменклатуры);\n\t\nКонецПроцедуры \n\nПроцедура Пример()\n//Процедура Документ_усЗаказНаОтгрузку_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n//\t\n//\tЭлементы = Форма.Элементы;\n//\t\n//\tДопПараметры = Новый Структура();\n//\tДобавитьГруппуНаФорму(Элементы,ВидГруппыФормы.Страница,\"рж_РеквизитыСобственногоУчета\", \"Реквизиты собственного учета\",,Элементы.ГруппаСтраницы,,);\n//\t\n//\tДопПараметры = Новый Структура(\"Группировка\", ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);\n//\tДобавитьГруппуНаФорму(Элементы,ВидГруппыФормы.ОбычнаяГруппа,\"Группарж_Сборщики\", \"Сборщики\",,Элементы.рж_РеквизитыСобственногоУчета,ДопПараметры);\n//\t\n//\t\n//\tДопПараметры = Новый Структура(\"ТолькоПросмотр, ПоложениеКоманднойПанели, ИзменятьСоставСтрок, ИзменятьПорядокСтрок, ПоложениеЗаголовка\"\n//\t, Истина, ПоложениеКоманднойПанелиЭлементаФормы.Нет, Ложь, Ложь, ПоложениеЗаголовкаЭлементаФормы.Верх);\n//\t\n//\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеТабличногоДокумента,\"ржСборщики\", \"Сборщики\" , \"Объект.ржСборщики\",Элементы.Группарж_Сборщики, ДопПараметры);\n//\t\n//\tДопПараметры = Новый Структура();\n//\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"ржСборщикиГруппаСборки\",,\"Объект.ржСборщики.ГруппаСборки\",Элементы.ржСборщики, ДопПараметры);\n//\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"ржСборщикиГруппаБригада\",,\"Объект.ржСборщики.Бригада\",Элементы.ржСборщики, ДопПараметры);\n//\t\n//\tДопПараметры = Новый Структура(\"ТолькоПросмотр\", Истина);   \n//\tДобавитьРеквизитФормы(Форма, \"ржДатаВОтбор\", Новый ОписаниеТипов(\"Дата\"),,\"Дата начала отбора (рж)\");\n//\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"ржДатаВОтбор\",,\"ржДатаВОтбор\",Элементы.ГруппаФактическоеВремя, ДопПараметры, Элементы.ДатаОтобрано);\n//\t\n//КонецПроцедуры  \n\n//Процедура Документ_усОжидаемаяПриемка_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n//\t\n//\tЭлементы = Форма.Элементы;\n//\t\n//\tДопПараметры = Новый Структура();\n//\tДобавитьГруппуНаФорму(Элементы,ВидГруппыФормы.Страница,\"рж_РеквизитыСобственногоУчета\", \"Реквизиты собственного учета\",,Элементы.Страницы,,);\n//\t\n//\tДопПараметры = Новый Структура(\"Группировка\", ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);\n//\tДобавитьГруппуНаФорму(Элементы,ВидГруппыФормы.ОбычнаяГруппа,\"Группарж_Сборщики\", \"Сборщики\",,Элементы.рж_РеквизитыСобственногоУчета,ДопПараметры);\n//\t\n//\t\n//\tДопПараметры = Новый Структура(\"ТолькоПросмотр, ПоложениеКоманднойПанели, ИзменятьСоставСтрок, ИзменятьПорядокСтрок, ПоложениеЗаголовка\"\n//\t, Истина, ПоложениеКоманднойПанелиЭлементаФормы.Нет, Ложь, Ложь, ПоложениеЗаголовкаЭлементаФормы.Верх);\n//\t\n//\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеТабличногоДокумента,\"ржСборщики\", \"Сборщики\" , \"Объект.ржСборщики\",Элементы.Группарж_Сборщики, ДопПараметры);\n//\t\n//\tДопПараметры = Новый Структура();\n//\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"ржСборщикиГруппаСборки\",,\"Объект.ржСборщики.ГруппаСборки\",Элементы.ржСборщики, ДопПараметры);\n//\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"ржСборщикиГруппаБригада\",,\"Объект.ржСборщики.Бригада\",Элементы.ржСборщики, ДопПараметры);\n//\t\n//КонецПроцедуры \n\n//Процедура Документ_усЗадачаПеремещениеТовара_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n//\t\n//\tЭлементы = Форма.Элементы;\n//\t\n//\tДопПараметры = Новый Структура();\n//\tДобавитьГруппуНаФорму(Элементы,ВидГруппыФормы.Страница,\"рж_РеквизитыСобственногоУчета\",\"Реквизиты собственного учета\",,Элементы.ГруппаСтраницы,,);\n//\t\n//\tДопПараметры = Новый Структура(\"ТолькоПросмотр\", Истина);\n//\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"рж_ГруппаСборки\",,\"Объект.Номенклатура.рж_ГруппаСборки\",Элементы.рж_РеквизитыСобственногоУчета, ДопПараметры);\n//\t\n//\tДопПараметры = Новый Структура(\"РежимВыбораИзСписка, КнопкаСоздания\", Истина, Ложь);\n//\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"рж_Бригадир\", \"Бригадир\", \"Объект.Исполнитель\",Элементы.рж_РеквизитыСобственногоУчета, ДопПараметры);\n//\tЭлементы.рж_Бригадир.УстановитьДействие(\"НачалоВыбора\", \"рж_БригадирНачалоВыбораВместо\");\n//\t\n//КонецПроцедуры  \n\n//Процедура Документ_усЗадачаПеремещениеКонтейнера_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n//\t\n//\tЭлементы = Форма.Элементы;\n//\t\n//\tДопПараметры = Новый Структура();\n//\tДобавитьГруппуНаФорму(Элементы,ВидГруппыФормы.Страница,\"рж_РеквизитыСобственногоУчета\",\"Реквизиты собственного учета\",,Элементы.ГруппаСтраницы,,);\n//\t\n//\tДопПараметры = Новый Структура(\"ТолькоПросмотр\", Истина);\n//\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"рж_ГруппаСборки\",,\"Объект.рж_ГруппаСборки\",Элементы.рж_РеквизитыСобственногоУчета, ДопПараметры);\n//\t\n//\tДопПараметры = Новый Структура(\"РежимВыбораИзСписка, КнопкаСоздания\", Истина, Ложь);\n//\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"рж_Бригадир\", \"Бригадир\", \"Объект.Исполнитель\",Элементы.рж_РеквизитыСобственногоУчета, ДопПараметры);\n//\tЭлементы.рж_Бригадир.УстановитьДействие(\"НачалоВыбора\", \"рж_БригадирНачалоВыбораВместо\");\n//\t\n//КонецПроцедуры \n\n//Процедура Документ_усЗадачаПересчет_ФормаДокумента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)\n//\t\n//\tЭлементы = Форма.Элементы;\n//\t\n//\tДопПараметры = Новый Структура();\n//\tДобавитьГруппуНаФорму(Элементы,ВидГруппыФормы.Страница,\"рж_РеквизитыСобственногоУчета\",\"Реквизиты собственного учета\",,Элементы.Страницы,,);\n//\t\n//\tДопПараметры = Новый Структура(\"ТолькоПросмотр\", Истина);\n//\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"рж_ГруппаСборки\",,\"Объект.рж_ГруппаСборки\",Элементы.рж_РеквизитыСобственногоУчета, ДопПараметры);\n//\t\n//\tДопПараметры = Новый Структура(\"РежимВыбораИзСписка, КнопкаСоздания\", Истина, Ложь);\n//\tДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода,\"рж_Бригадир\", \"Бригадир\", \"Объект.Исполнитель\",Элементы.рж_РеквизитыСобственногоУчета, ДопПараметры);\n//\tЭлементы.рж_Бригадир.УстановитьДействие(\"НачалоВыбора\", \"рж_БригадирНачалоВыбораВместо\");\n//\t\n//КонецПроцедуры \n\n//Процедура ЗаполнитьСвободныхБригадиров(Элемент, ГруппаСборки) Экспорт\n\t//сзБригадиры = ржМотивацияСклада.ПолучитьСвободныхБригадиров(ГруппаСборки);\n\t//Элемент.СписокВыбора.Очистить();\n\t//Для каждого стр из сзБригадиры цикл\n\t//\tНовСтр = Элемент.СписокВыбора.Добавить();\n\t//\tЗаполнитьЗначенияСвойств(НовСтр, стр);\n\t//КонецЦикла;    \n//КонецПроцедуры\n\nКонецПроцедуры\n\n#Область Создание_элементов_формы\n\nПроцедура ДобавитьРеквизитНаФорму(Элементы, ВидПоля, Имя, Заголовок = \"\", ПутьКДанным = Неопределено, Родитель, ДополнительныеПараметры = Неопределено, ЭлементПосле = Неопределено)\n\t\n\tЕсли ТипЗнч(ВидПоля) = Тип(\"ВидДекорацииФормы\") Тогда \n\t\tПолеВвода = Элементы.Вставить(Имя, Тип(\"ДекорацияФормы\"), Родитель, ЭлементПосле);   \n\t\tПолеВвода.Вид                              = ВидПоля;\n\tИначеЕсли ТипЗнч(ВидПоля) = Тип(\"ВидПоляФормы\") Тогда   \n\t\tЕсли ВидПоля = ВидПоляФормы.ПолеТабличногоДокумента Тогда\n\t\t\tПолеВвода = Элементы.Вставить(Имя, Тип(\"ТаблицаФормы\"), Родитель, ЭлементПосле);\n\t\tИначе\n\t\t\tПолеВвода = Элементы.Вставить(Имя, Тип(\"ПолеФормы\"), Родитель, ЭлементПосле); \n\t\t\tПолеВвода.Вид                              = ВидПоля;\n\t\tКонецЕсли; \n\tИначе\n\t\tТекстИсключения = \"Неизвестный тип поля формы\";\n\t\tВызватьИсключение ТекстИсключения;\n\tКонецЕсли;       \n\t\n\tПолеВвода.Заголовок = Заголовок;\n\t//ПолеВвода.Вид                          = ВидПоля;\n\t\n\tЕсли ЗначениеЗаполнено(ПутьКДанным) Тогда \n\t\tПолеВвода.ПутьКДанным = ПутьКДанным;\n\tКонецЕсли;       \n\t\n\tЕсли ДополнительныеПараметры <> Неопределено тогда\n\t\tЗаполнитьЗначенияСвойств(ПолеВвода, ДополнительныеПараметры);\n\t\tЕсли ДополнительныеПараметры.Свойство(\"Обработчики\") тогда\n\t\t\tДля Каждого ТекСобытие из ДополнительныеПараметры.Обработчики цикл\n\t\t\t\tПолеВвода.УстановитьДействие(ТекСобытие.Ключ, ТекСобытие.Значение);\n\t\t\tКонецЦикла;                                                  \n\t\tКонецЕсли;                                      \n\tКонецЕсли;\n\t\nКонецПроцедуры\n\nПроцедура ДобавитьГруппуНаФорму(Элементы, ВидГруппы, Имя, Заголовок = \"\", ПутьКДанным = Неопределено, Родитель = Неопределено, ДополнительныеПараметры = Неопределено, ЭлементПосле = Неопределено)\n\tПолеГруппы = Элементы.Вставить(Имя, Тип(\"ГруппаФормы\"), Родитель, ЭлементПосле);\n\t\n\tПолеГруппы.Заголовок = Заголовок;\n\tПолеГруппы.Вид       = ВидГруппы;\n\t\n\tЕсли ДополнительныеПараметры<>Неопределено тогда\n\t\tЗаполнитьЗначенияСвойств(ПолеГруппы, ДополнительныеПараметры);\n\tКонецЕсли; \n      \nКонецПРоцедуры\n\nПроцедура ДобавитьРеквизитФормы(Форма, Имя, Тип, Путь = \"\", Заголовок = \"\", СохраняемыеДанные = Ложь) Экспорт\n\tДобавляемыеРеквизиты = Новый Массив;\n\tДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(Имя, Тип, Путь, Заголовок, СохраняемыеДанные));\n\t\n\tФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);\nКонецПроцедуры\n\nПроцедура ДобавитьКомандуНаФорму(Элементы, ВидКнопки, Имя, Заголовок = \"\", ИмяКоманды, Родитель, ДополнительныеПараметры = Неопределено, ЭлементПосле = Неопределено)\n\t\n\tКомандаФормы = Элементы.Вставить(Имя, Тип(\"КнопкаФормы\"), Родитель, ЭлементПосле);\n\t\n\tКомандаФормы.Вид        = ВидКнопки;\n\tКомандаФормы.ИмяКоманды = ИмяКоманды;\n\tКомандаФормы.Заголовок  = Заголовок;\n\t\n\tЕсли ДополнительныеПараметры <> Неопределено тогда\n\t\tЗаполнитьЗначенияСвойств(КомандаФормы, ДополнительныеПараметры);\n\tКонецЕсли;\n\t\nКонецПроцедуры\n\nПроцедура ДобавитьКомандуФормы(Форма, ИмяКоманды, Заголовок = \"\", Действие, ИзменяетСохраняемыеДанные = Истина, ДополнительныеПараметры = Неопределено)\n\t\n\tКомандаФормы = Форма.Команды.Добавить(ИмяКоманды);\n\tКомандаФормы.Заголовок = Заголовок;\n\tКомандаФормы.Действие  = Действие;\n\tКомандаФормы.ИзменяетСохраняемыеДанные = ИзменяетСохраняемыеДанные;\n\t\n\tЕсли ДополнительныеПараметры <> Неопределено Тогда\n\t\tЗаполнитьЗначенияСвойств(КомандаФормы, ДополнительныеПараметры);\n\tКонецЕсли;\n\t\nКонецПроцедуры\n\n#КонецОбласти",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\Бюро1440_ОбработкаСобытийRMQ\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\Бюро1440_ОбработкаСобытийRMQ\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/14b3c650279f917022f0066da37c26d5dec30a55/_bsl%5CResources%5C726598511%5CCommonModule%5C%D0%91%D1%8E%D1%80%D0%BE1440_%D0%9E%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B0%D0%A1%D0%BE%D0%B1%D1%8B%D1%82%D0%B8%D0%B9RMQ%5CCommonModule.obj.bsl",
            "size": 365196,
            "truncated": false,
            "content": "#Область ПрограммныйИнтерфейс\n\n#Область ИсходящиеДанные\n\n#Область Документы  \n\nПроцедура СоздатьСообщениеПоЗаказуНаОтгрузку(КонтекстСобытия) Экспорт\n\tЕсли ТипЗнч(КонтекстСобытия.Источник) = Тип(\"РегистрСведенийНаборЗаписей.усСтатусыЗаказовНаОтгрузку\") Тогда \n\t\tмсвДокументы = Новый Массив;  \n\t\tмсвПроверяемыхСтатусов = Новый Массив;\n\t\tмсвПроверяемыхСтатусов.Добавить(Перечисления.усСтатусыЗаказовНаОтгрузку.Отгружен);\n\t\tДля каждого текЗапись Из КонтекстСобытия.Источник Цикл    \n\t\t\tЕсли текЗапись.Статус = Перечисления.усСтатусыЗаказовНаОтгрузку.Отгружен Тогда \n\t\t\t\tЕсли НЕ ДокументВыгружался(текЗапись.ЗаказНаОтгрузку, мсвПроверяемыхСтатусов) Тогда \n\t\t\t\t\tмсвДокументы.Добавить(текЗапись.ЗаказНаОтгрузку);\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\t\t\n\t\tЕсли НЕ мсвДокументы.Количество() Тогда \n\t\t\tКонтекстСобытия.Отказ = Истина;\t\n\t\tКонецЕсли;\n\t\t\n\t\tДля каждого текДокумент Из мсвДокументы Цикл  \n\t\t\tЕсли ЗначениеЗаполнено(текДокумент.НомерКИС) Тогда \n\t\t\t\tСтруктураЗаказНаОтгрузку = ПолучитьДанныеЗаказаНаОтгрузку(текДокумент); \n\t\t\t\tКонтекстСобытия.ДанныеСообщения = СтруктураЗаказНаОтгрузку;\n\t\t\t\tЗафиксироватьВыгрузкуДокумента(текДокумент, Перечисления.усСтатусыЗаказовНаОтгрузку.Отгружен);\n\t\t\tИначе\n\t\t\t\tКонтекстСобытия.Отказ = Истина;\t\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\tКонецЕсли;\nКонецПроцедуры\n\nПроцедура ОтправкаСтатусовЗаказовНаОтгрузку(КонтекстСобытия) Экспорт\n\tЕсли ТипЗнч(КонтекстСобытия.Источник) = Тип(\"РегистрСведенийНаборЗаписей.усСтатусыЗаказовНаОтгрузку\") Тогда \n\t\tмсвДокументы = Новый Массив;\n\t\t\n\t\tмсвПроверяемыхСтатусов = Новый Массив;  \n\t\t//++ Николаев ситек 21.08.24  ICT-37999\n\t\tмсвПроверяемыхСтатусов.Добавить(Перечисления.усСтатусыЗаказовНаОтгрузку.Отобран); \n\t\tмсвПроверяемыхСтатусов.Добавить(Перечисления.усСтатусыЗаказовНаОтгрузку.Упакован);\n\t\t//-- Николаев ситек 21.08.24\n\t\tмсвПроверяемыхСтатусов.Добавить(Перечисления.усСтатусыЗаказовНаОтгрузку.ГотовКОтгрузке);\n\t\tмсвПроверяемыхСтатусов.Добавить(Перечисления.усСтатусыЗаказовНаОтгрузку.Отгружен);\n\t\tДля каждого текЗапись Из КонтекстСобытия.Источник Цикл    \n\t\t\tЕсли текЗапись.Статус = Перечисления.усСтатусыЗаказовНаОтгрузку.ГотовКОтгрузке Тогда\t\n\t\t\t\tЕсли НЕ ДокументВыгружался(текЗапись.ЗаказНаОтгрузку, мсвПроверяемыхСтатусов) Тогда\n\t\t\t\t\tмсвДокументы.Добавить(текЗапись.ЗаказНаОтгрузку);\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\t\t\n\t\tЕсли НЕ мсвДокументы.Количество() Тогда \n\t\t\tКонтекстСобытия.Отказ = Истина;\t\n\t\tКонецЕсли;\n\t\t\n\t\tДля каждого текДокумент Из мсвДокументы Цикл \n\t\t\tЕсли ЗначениеЗаполнено(текДокумент.НомерКИС) Тогда \n\t\t\t\tСтруктураСообщения = Новый Структура;\n\t\t\t\tСтруктураСообщения.Вставить(\"id\", XMLСтрока(текДокумент.Ссылка));\n\t\t\t\tСтруктураСообщения.Вставить(\"status\", \"selected\");\n\t\t\t\tКонтекстСобытия.ДанныеСообщения = СтруктураСообщения; \n\t\t\t\tЗафиксироватьВыгрузкуДокумента(текДокумент.Ссылка, Перечисления.усСтатусыЗаказовНаОтгрузку.ГотовКОтгрузке);\n\t\t\tИначе\n\t\t\t\tКонтекстСобытия.Отказ = Истина;\t\t\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\tКонецЕсли;\nКонецПроцедуры\nПроцедура СоздатьСообщениеПоОжидаемойПриемке(КонтекстСобытия) Экспорт\n\tЕсли ТипЗнч(КонтекстСобытия.Источник) = Тип(\"РегистрСведенийНаборЗаписей.усСтатусыОжидаемыхПриемок\") Тогда \n\t\tмсвДокументы = Новый Массив;\n\t\t\n\t\tСтатусВыгрузки = Перечисления.усСтатусыОжидаемыхПриемок.ПустаяСсылка();  \n\t\tмсвПроверяемыхСтатусов = Новый Массив; \n\t\tмсвПроверяемыхСтатусов.Добавить(Перечисления.усСтатусыОжидаемыхПриемок.Принята);\n\t\tмсвПроверяемыхСтатусов.Добавить(Перечисления.усСтатусыОжидаемыхПриемок.Проконтролирована);   \n\t\tмсвПроверяемыхСтатусов.Добавить(Перечисления.усСтатусыОжидаемыхПриемок.Промаркирована);\n\t\tмсвПроверяемыхСтатусов.Добавить(Перечисления.усСтатусыОжидаемыхПриемок.Завершена); \n\t\t\n\t\tДля каждого текЗапись Из КонтекстСобытия.Источник Цикл    \n\t\t\tЕсли мсвПроверяемыхСтатусов.Найти(текЗапись.Статус) <> Неопределено Тогда  \n\t\t\t\tЕсли НЕ ДокументВыгружался(текЗапись.ОжидаемаяПриемка, мсвПроверяемыхСтатусов) Тогда\n\t\t\t\t\tмсвДокументы.Добавить(текЗапись.ОжидаемаяПриемка);\n\t\t\t\t\tСтатусВыгрузки = текЗапись.Статус; \n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла; \n\t\t\n\t\tЕсли НЕ мсвДокументы.Количество() Тогда \n\t\t\tКонтекстСобытия.Отказ = Истина;\t\n\t\tКонецЕсли;\n\t\t\t\n\t\tДля каждого текДокумент Из мсвДокументы Цикл \n\t\t\tЕсли ЗначениеЗаполнено(текДокумент.НомерКИС) Тогда \n\t\t\t\tСтруктураОжидаемойПриемки = ПолучитьДанныеОжидаемойПриемки(текДокумент); \n\t\t\t\tКонтекстСобытия.ДанныеСообщения = СтруктураОжидаемойПриемки; \n\t\t\t\tЗафиксироватьВыгрузкуДокумента(текДокумент, СтатусВыгрузки);\n\t\t\tИначе\n\t\t\t\tКонтекстСобытия.Отказ = Истина;\t\t\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\t\t\n\tКонецЕсли;\nКонецПроцедуры \n\nПроцедура СоздатьСообщениеПоИзменениюКачества(КонтекстСобытия) Экспорт\n\tЕсли ТипЗнч(КонтекстСобытия.Источник) = Тип(\"ДокументОбъект.усЗадачаПересчет\") Тогда   \n\t\tДокументСсылка = КонтекстСобытия.Источник.Ссылка; \n\t\tсткДанныеЗадачи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, \"Статус, ТипЗадачи\");\n\t\tЕсли сткДанныеЗадачи.Статус = Перечисления.усСтатусыЗадач.Выполнена И сткДанныеЗадачи.ТипЗадачи = Перечисления.усТипыЗадачПересчета.ИзменениеКачества Тогда\n\t\t\tмсвПроверяемыхСтатусов = Новый Массив;\n\t\t\tмсвПроверяемыхСтатусов.Добавить(Перечисления.усСтатусыЗадач.Выполнена);\n\t\t\tЕсли НЕ ДокументВыгружался(ДокументСсылка, мсвПроверяемыхСтатусов) Тогда\n\t\t\t\tСтруктураЗадачиНаПересчет = ПолучитьДанныеПоЗадачеПересчетНаИзменениеКачества(ДокументСсылка); \n\t\t\t\tКонтекстСобытия.ДанныеСообщения = СтруктураЗадачиНаПересчет; \n\t\t\t\tЗафиксироватьВыгрузкуДокумента(ДокументСсылка, Перечисления.усСтатусыЗадач.Выполнена);\n\t\t\tИначе\n\t\t\t\tКонтекстСобытия.Отказ = Истина;\t\t\t\t\n\t\t\tКонецЕсли; \n\t\tИначе\n\t\t\tКонтекстСобытия.Отказ = Истина;\t\n\t\tКонецЕсли;\t\t\n\tИначе\n\t\tКонтекстСобытия.Отказ = Истина;\t\n\tКонецЕсли;\nКонецПроцедуры \n\nПроцедура СоздатьСообщениеПоАктуСверкиИнвентаризации(КонтекстСобытия) Экспорт\n\tЕсли ТипЗнч(КонтекстСобытия.Источник) = Тип(\"ДокументОбъект.усАктСверкиИнвентаризации\") Тогда \n\t\tДокументСсылка = КонтекстСобытия.Источник.Ссылка; \n\t\tсткДанныеАкта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, \"Проведен, ТипАктаСверки\");\n\t\tЕсли сткДанныеАкта.Проведен И \n\t\t\t(сткДанныеАкта.ТипАктаСверки = Перечисления.усТипыАктаСверкиИнвентаризации.Оприходование \n\t\t\t\tИЛИ сткДанныеАкта.ТипАктаСверки = Перечисления.усТипыАктаСверкиИнвентаризации.Списание) Тогда  \n\t\t\tЕсли НЕ ДокументВыгружался(ДокументСсылка) Тогда\t\n\t\t\t\tЕсли сткДанныеАкта.ТипАктаСверки = Перечисления.усТипыАктаСверкиИнвентаризации.Оприходование Тогда  \n\t\t\t\t\tСтруктураАктаСверки = ПолучитьДанныеПоАктуСверкиИзлишки(ДокументСсылка); \n\t\t\t\t\tКонтекстСобытия.ДанныеСообщения = СтруктураАктаСверки;\n\t\t\t\t\tЗафиксироватьВыгрузкуДокумента(ДокументСсылка);\n\t\t\t\tКонецЕсли;\n\t\t\t\t\n\t\t\t\tЕсли сткДанныеАкта.ТипАктаСверки = Перечисления.усТипыАктаСверкиИнвентаризации.Списание Тогда  \n\t\t\t\t\tСтруктураАктаСверки = ПолучитьДанныеПоАктуСверкиНедостачи(ДокументСсылка); \n\t\t\t\t\tКонтекстСобытия.ДанныеСообщения = СтруктураАктаСверки;\n\t\t\t\t\tЗафиксироватьВыгрузкуДокумента(ДокументСсылка);\n\t\t\t\tКонецЕсли;\n\t\t\tИначе\n\t\t\t\tКонтекстСобытия.Отказ = Истина;\t\t\n\t\t\tКонецЕсли;\n\t\tИначе \n\t\t\tКонтекстСобытия.Отказ = Истина;\t\n\t\tКонецЕсли;\n\tИначе\n\t\tКонтекстСобытия.Отказ = Истина;\t\t\n\tКонецЕсли;\nКонецПроцедуры \n\nПроцедура ОтправкаСтатусовОжидаемыхПриемок(КонтекстСобытия) Экспорт\n\t\n\tЕсли ТипЗнч(КонтекстСобытия.Источник) = Тип(\"РегистрСведенийНаборЗаписей.усСтатусыОжидаемыхПриемок\") Тогда \n\t\tмсвДокументы = Новый Массив;\n\t\t\n\t\tмсвПроверяемыхСтатусов = Новый Массив;\n\t\tмсвПроверяемыхСтатусов.Добавить(Перечисления.усСтатусыОжидаемыхПриемок.КВыполнению);\n\t\tмсвПроверяемыхСтатусов.Добавить(Перечисления.усСтатусыОжидаемыхПриемок.ВРаботе);\n\n\t\tДля каждого текЗапись Из КонтекстСобытия.Источник Цикл\n\t\t\tЕсли текЗапись.Статус = Перечисления.усСтатусыОжидаемыхПриемок.КВыполнению\n\t\t\t\tИли  текЗапись.Статус = Перечисления.усСтатусыОжидаемыхПриемок.ВРаботе Тогда\n\t\t\t\tЕсли НЕ ДокументВыгружался(текЗапись.ОжидаемаяПриемка, мсвПроверяемыхСтатусов) Тогда\n\t\t\t\t\tмсвДокументы.Добавить(текЗапись.ОжидаемаяПриемка);\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\t\t\n\t\tЕсли НЕ мсвДокументы.Количество() Тогда\n\t\t\tКонтекстСобытия.Отказ = Истина;\n\t\tКонецЕсли;\n\t\t\n\t\tДля каждого текДокумент Из мсвДокументы Цикл\n\t\t\tЕсли ЗначениеЗаполнено(текДокумент.НомерКИС) Тогда\n\t\t\t\tСтруктураСообщения = Новый Структура;\n\t\t\t\tСтруктураСообщения.Вставить(\"id\", XMLСтрока(текДокумент.Ссылка));\n\t\t\t\tСтруктураСообщения.Вставить(\"status\", \"inProgress\");\n\t\t\t\tКонтекстСобытия.ДанныеСообщения = СтруктураСообщения;\n\t\t\t\tЗафиксироватьВыгрузкуДокумента(текДокумент.Ссылка, Перечисления.усСтатусыОжидаемыхПриемок.ВРаботе);\n\t\t\tИначе\n\t\t\t\tКонтекстСобытия.Отказ = Истина;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\tКонецЕсли;\n\t\nКонецПроцедуры\n\n\n//++ Николаев ситек 21.08.24  ICT-37999\nПроцедура СоздатьСообщениеПоЗаказуНаОтгрузкуВСтатусеОтобран(КонтекстСобытия) Экспорт\n\tЕсли ТипЗнч(КонтекстСобытия.Источник) = Тип(\"РегистрСведенийНаборЗаписей.усСтатусыЗаказовНаОтгрузку\") Тогда \n\t\tмсвДокументы = Новый Массив;\n\t\t\n\t\tмсвПроверяемыхСтатусов = Новый Массив;       \n\t\tмсвПроверяемыхСтатусов.Добавить(Перечисления.усСтатусыЗаказовНаОтгрузку.Отобран); \n\t\tмсвПроверяемыхСтатусов.Добавить(Перечисления.усСтатусыЗаказовНаОтгрузку.Упакован);\n\t\tмсвПроверяемыхСтатусов.Добавить(Перечисления.усСтатусыЗаказовНаОтгрузку.ГотовКОтгрузке);\n\t\tмсвПроверяемыхСтатусов.Добавить(Перечисления.усСтатусыЗаказовНаОтгрузку.Отгружен);\n\t\tДля каждого текЗапись Из КонтекстСобытия.Источник Цикл   \n\t\t\tИндексСтатуса = Перечисления.усСтатусыЗаказовНаОтгрузку.Индекс(текЗапись.Статус);\n\t\t\tЕсли ИндексСтатуса >= 7 И ИндексСтатуса <= 9 Тогда   \t\n\t\t\t\tЕсли НЕ ДокументВыгружался(текЗапись.ЗаказНаОтгрузку, мсвПроверяемыхСтатусов) Тогда\n\t\t\t\t\tмсвДокументы.Добавить(текЗапись.ЗаказНаОтгрузку);\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\t\t\n\t\tЕсли НЕ мсвДокументы.Количество() Тогда \n\t\t\tКонтекстСобытия.Отказ = Истина;\t\n\t\tКонецЕсли;\n\t\t\n\t\tДля каждого текДокумент Из мсвДокументы Цикл \n\t\t\tЕсли ЗначениеЗаполнено(текДокумент.НомерКИС) Тогда\n\t\t\t\tСтруктураЗаказНаОтгрузку = ПолучитьДанныеЗаказаНаОтгрузкуВСтатусеОтобран(текДокумент); \n\t\t\t\tКонтекстСобытия.ДанныеСообщения = СтруктураЗаказНаОтгрузку;\n\t\t\t\tЗафиксироватьВыгрузкуДокумента(текДокумент, Перечисления.усСтатусыЗаказовНаОтгрузку.ГотовКОтгрузке);\n\t\t\tИначе\n\t\t\t\tКонтекстСобытия.Отказ = Истина;\t\t\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\tКонецЕсли;\nКонецПроцедуры //-- Николаев ситек 21.08.24\n\n#КонецОбласти \n\n#КонецОбласти \n\n#Область ВходящиеДанные\n\n#Область Справочники\n\nПроцедура ОбработатьСообщениеПоЕдиницамИзмерения(Данные, СвойстваСообщений, ПодпискаНаОчередь, Отказ, ВернутьВОчередь, КонтекстОтветногоСообщения = Неопределено) Экспорт\n\t\n\tмсвОшибок = Новый Массив;\n\t\n\tПопытка\t\n\t\tОбъект = СправочникиИнициализироватьОбъект(\"усЕдиницыИзмерения\", Данные); \n\n\t\tОбъект.НаименованиеПолное      = Данные.fullName;\n\t\tОбъект.МеждународноеСокращение = Данные.reduction;\n\t\t//Объект.МернаяЕдиница           = Данные.UnitTypes;  \n\t\t\t\n\t\tСправочникОбъектЗаписать(Объект, Данные, КонтекстОтветногоСообщения, мсвОшибок);\n\tИсключение\n\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"error\", \"\");\n        СтруктураОшибок.description = ОписаниеОшибки();\n\t    мсвОшибок.Добавить(СтруктураОшибок);\n\t\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(мсвОшибок, Истина);\n\tКонецПопытки; \n\t\n\tЕсли КонтекстОтветногоСообщения.success = Ложь Тогда \n\t\tВызватьИсключение СформироватьТекстОшибки(мсвОшибок);\t\n\tКонецЕсли;\n\t\nКонецПроцедуры\n\nПроцедура ОбработатьСообщениеПоВидамНоменклатур(Данные, СвойстваСообщений, ПодпискаНаОчередь, Отказ, ВернутьВОчередь, КонтекстОтветногоСообщения = Неопределено) Экспорт\n\t\n\tмсвОшибок = Новый Массив;\n\tПопытка\n\t\tЕсли Данные.isGroup ИЛИ Данные.isService Тогда\n\t\t\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(мсвОшибок);\n\t\t\tВозврат;\n\t\tКонецЕсли;\n\t\t\n\t\tОбъект = СправочникиИнициализироватьОбъект(\"усВидыНоменклатуры\", Данные);\n\t\t\n\t\t//Объект.ШаблонЭтикетки = Справочники.усШаблоныЭтикеток.СтандартнаяНоменклатура;\n\t\t//\n\t\t//Объект.ШаблонОбъектаЦМТ = Справочники.усШаблоныЭтикеток.СтандартныйОбъектЦМТ;\n\t\t\t\n\t\tСправочникОбъектЗаписать(Объект, Данные, КонтекстОтветногоСообщения, мсвОшибок); \n\tИсключение\n\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"error\", \"\");\n\t\tСтруктураОшибок.description = ОписаниеОшибки();\n\t    мсвОшибок.Добавить(СтруктураОшибок);\n\t\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(мсвОшибок, Истина);\t\n\tКонецПопытки;\n\t\n\tЕсли КонтекстОтветногоСообщения.success = Ложь Тогда \n\t\tВызватьИсключение СформироватьТекстОшибки(мсвОшибок);\t\n\tКонецЕсли;\n\t\nКонецПроцедуры\n\nПроцедура ОбработатьСообщениеПоКонтрагентам(Данные, СвойстваСообщений, ПодпискаНаОчередь, Отказ, ВернутьВОчередь, КонтекстОтветногоСообщения = Неопределено) Экспорт\n\t\n\tСклад = Неопределено; \n\tЕстьОшибка = Ложь;\n\tмсвОшибок = Новый Массив;\n\tТекстОшибки = \"\";\n\t\n\tПопытка              \n\t\tСоздатьНовыйУИД = НЕ Данные.isGroup;\n\t\tОбъект = СправочникиИнициализироватьОбъект(\"усКонтрагенты\", Данные, СоздатьНовыйУИД);\n\t\t\n\t\tРодитель       = Неопределено;\t\t\n\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(Данные.groupID, Родитель, \"усКонтрагенты\") Тогда \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'При загрузке контрагента. Не найден родитель с идентификатором: %1'\"), Данные.groupID);\t\t\n\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundgroupID\", \"\");\n\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\t//ЕстьОшибка = Истина; //Идем дальше\t\n\t\tКонецЕсли;\n\t\t\n\t\tорганизация       = Неопределено;\n\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(Данные.organizationID, организация, \"Организации\") Тогда \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'При загрузке контрагента. Не найдена организация с идентификатором: %1'\"), Данные.organizationID);\t\t\n\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundorganizationID\", \"\");\n\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\t//ЕстьОшибка = Истина; //Идем дальше\t\n\t\tКонецЕсли;\n\t\t\t\t\n\t\tЕсли НЕ ЗначениеЗаполнено(Родитель) Тогда \n\t\t\t//Укладываем в предопределенные группы\n\t\t\tЕсли Данные.objectType = \"Склады\" Тогда\n\t\t\t\tРодитель = Справочники.усКонтрагенты.Склады;\n\t\t\tИначеЕсли Данные.objectType = \"Физические лица\" Тогда\n\t\t\t\tРодитель = Справочники.усКонтрагенты.ФизическиеЛица;\n\t\t\tИначеЕсли Данные.objectType = \"Контрагенты\" Тогда\n\t\t\t\tРодитель = Справочники.усКонтрагенты.Контрагенты;\n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\n\t\tОбъект.Родитель = Родитель;\n\t\t\t\n\t\tЕсли НЕ Объект.ЭтоГруппа Тогда \n\t\t\t\t\t\t\n\t\t\tОбъект.НаименованиеПолное = СокрП(Данные.FullName);\n\t\t\tОбъект.ИНН                = Данные.inn;\n\t\t\tОбъект.КПП                = Данные.kpp;\n\t\t\tОбъект.ОКПО               = Данные.OKPO;\n\t\t\tОбъект.Покупатель         = Данные.isBuyer;\n\t\t\tОбъект.Поставщик          = Данные.isSupplier;\n\t\t\tОбъект.Склад \t\t\t  = Данные.isWarehouse;\n\t\t\tОбъект.ОрганизацияСсылка  = организация;\n\t\t\tОбъект.Бюро1440_ТипСправочникаКИС = Данные.objectType;\n\t\t\t      \n\t\t\tЕсли Данные.legalEntity = \"Юр. лицо\" Тогда\n\t\t\t\tОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;\t\n\t\t\tИначеЕсли Данные.legalEntity = \"Физ. лицо\" Тогда\n\t\t\t\tОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо;\n\t\t\tИначеЕсли Данные.legalEntity = \"Физ. Лицо, не резидент\" Тогда\n\t\t\t\tОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицоНеРезидент;\n\t\t\tИначеЕсли Данные.legalEntity = \"Юр. Лицо, не резидент\" Тогда\n\t\t\t\tОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент;    \n\t\t\tИначе\n\t\t\t\tОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;\n\t\t\tКонецЕсли;  \n\t\t\t\n\t\t\tЕсли Объект.Склад Тогда \n\t\t\t\tОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;\t\n\t\t\tКонецЕсли; \n\t\t\tЕсли НЕ Объект.Покупатель И НЕ Объект.Поставщик И НЕ Объект.Склад ИЛИ Объект.Бюро1440_ТипСправочникаКИС = \"Физические лица\" Тогда \n\t\t\t\tОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо;\t\n\t\t\tКонецЕсли;\t\t\n\t\t\t\n\t\t\tЕсли Данные.Свойство(\"contactInformation\") Тогда \n\t\t\t\tЕсли Данные.contactInformation.Свойство(\"email\") И ЗначениеЗаполнено(Данные.contactInformation.email) Тогда \n\t\t\t\t\tВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.EmailКонтрагенты; \n\t\t\t\t\tУправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(Объект, Данные.contactInformation.email, ВидКонтактнойИнформации, ТекущаяДата(), Ложь);\n\t\t\t\tКонецЕсли;\n\t\t\t\t\n\t\t\t\tЕсли Данные.contactInformation.Свойство(\"phoneNumber\") И ЗначениеЗаполнено(Данные.contactInformation.phoneNumber) Тогда\n\t\t\t\t\tВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагенты; \n\t\t\t\t\tУправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(Объект, Данные.contactInformation.phoneNumber, ВидКонтактнойИнформации, ТекущаяДата(), Ложь);\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\t\n\t\t\n\t\tСправочникОбъектЗаписать(Объект, Данные, КонтекстОтветногоСообщения, мсвОшибок); \n\tИсключение\n\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"error\", \"\");\n\t\tСтруктураОшибок.description = ОписаниеОшибки();\n\t    мсвОшибок.Добавить(СтруктураОшибок);\n\t\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(мсвОшибок, Истина);\t\n\tКонецПопытки;\n\t\n\tЕсли КонтекстОтветногоСообщения.success = Ложь Тогда \n\t\tВызватьИсключение СформироватьТекстОшибки(мсвОшибок);\t\n\tКонецЕсли;\n\t\t\nКонецПроцедуры\n\nПроцедура ОбработатьСообщениеПоНоменклатуре(Данные, СвойстваСообщений, ПодпискаНаОчередь, Отказ, ВернутьВОчередь, КонтекстОтветногоСообщения = Неопределено) Экспорт\n\t\n\tРодитель        = Неопределено;\n\tЕдИзмерения     = Неопределено;\n\tВидНоменклатуры = Неопределено;\n\tНаборУпаковок \t= Неопределено;\n\t\n\tЕстьОшибка = Ложь;\n\tмсвОшибок = Новый Массив;\n\tТекстОшибки = \"\";\n\t\n\tПопытка  \n\t\tЕсли НЕ Данные.IsGroup И Данные.isService Тогда   \n\t\t\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(Новый Массив);\n\t\t\tВозврат;\n\t\tКонецЕсли;\n\n\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(Данные.groupID, Родитель, \"усНоменклатура\") Тогда  \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'При загрузке номенклатуры с артикулом: %1. НЕ найден родитель с идентификатором: %2'\"), Данные.articul, Данные.groupID);\t\t\n\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundgroupID\", \"\");\n\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\t//ЕстьОшибка = Истина;\t\n\t\tКонецЕсли;\n\t\t\t\n\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(Данные.packageSetID, НаборУпаковок, \"Бюро1440_НаборыУпаковок\") Тогда  \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'При загрузке номенклатуры с артикулом: %1. НЕ найден НаборУпаковок с идентификатором: %2'\"), Данные.articul, Данные.packageSetID);\t\t\n\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundpackageSetID\", \"\");\n\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\t//ЕстьОшибка = Истина;\t\n\t\tКонецЕсли; \n\t\t\n\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(Данные.classifierUnitsMesurementID, ЕдИзмерения, \"усЕдиницыИзмерения\") Тогда  \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'При загрузке номенклатуры с артикулом: %1. НЕ найдена единица измерения с идентификатором: %2'\"), Данные.articul, Данные.classifierUnitsMesurementID);\t\t\n\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundclassifierUnitsMesurementID\", \"\");\n\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\t//ЕстьОшибка = Истина;\t\n\t\tКонецЕсли; \n\t\t\n\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(Данные.typeNomenclatureID, ВидНоменклатуры, \"усВидыНоменклатуры\") Тогда  \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'При загрузке номенклатуры с артикулом: %1. НЕ найден вид номенклатуры с идентификатором: %2'\"), Данные.articul, Данные.typeNomenclatureID);\t\t\n\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundtypeNomenclatureID\", \"\");\n\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\t//ЕстьОшибка = Истина;\t\n\t\tКонецЕсли;\n\t\t\n\t\tЕсли ЕстьОшибка Тогда \n\t\t\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(мсвОшибок); \n\t\t\tВозврат;\t\n\t\tКонецЕсли; \n\t\t\n\t\tОбъект = СправочникиИнициализироватьОбъект(\"усНоменклатура\", Данные);\n\t\t\n\t\tЕсли ЗначениеЗаполнено(Данные.Code) Тогда\n\t\t\tОбъект.КодКИС = Данные.Code;\n\t\tКонецЕсли; \n\t\t\n\t\tЕсли Родитель <> Неопределено Тогда\n\t\t\tОбъект.Родитель = Родитель;\n\t\t\tЕсли ЗначениеЗаполнено(Объект.Родитель.МодельУчета) И Не ЗначениеЗаполнено(Объект.МодельУчета) Тогда\n\t\t\t\tОбъект.МодельУчета = Объект.Родитель.МодельУчета;\n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\n\t\t\n\t\tЕсли НЕ Объект.ЭтоГруппа Тогда\n\t\t\tЕсли ЗначениеЗаполнено(Данные.weight) И НЕ Данные.weight = 0 Тогда\n\t\t\t\tОбъект.Масса = Данные.weight;\n\t\t\tИначеЕсли НЕ ЗначениеЗаполнено(Объект.Масса) Тогда \n\t\t\t\tОбъект.Масса = 0.001; \n\t\t\tКонецЕсли;\n\t\t\tЕсли ЗначениеЗаполнено(Данные.volume) И НЕ Данные.volume = 0 Тогда\n\t\t\t\tОбъект.Объем = Данные.volume; \n\t\t\tИначеЕсли НЕ ЗначениеЗаполнено(Объект.Объем) Тогда \n\t\t\t\tОбъект.Объем = 0.00001;  \n\t\t\tКонецЕсли;\n\t\t\tЕсли НЕ ЗначениеЗаполнено(Объект.ОбъемНетто) Тогда \n\t\t\t\tОбъект.ОбъемНетто = 0.00001; \n\t\t\tКонецЕсли; \n\t\t\tЕсли НЕ ЗначениеЗаполнено(Объект.МассаНетто) Тогда \n\t\t\t\tОбъект.МассаНетто = 0.001;\n\t\t\tКонецЕсли;\n\t\t\tОбъект.Артикул            \t\t= Данные.articul;\n\t\t\tОбъект.Бюро1440_НаборУпаковок   = НаборУпаковок;\n\t\t\tОбъект.ПолноеНаименование \t\t= Данные.fullName;\n\t\t\tОбъект.ВидНоменклатуры \t  \t\t= ВидНоменклатуры;\t\t\t\n\t\t\tОбъект.ЕдиницаИзмерения   \t\t= ЕдИзмерения;\n\t\t\tОбъект.Комментарий        \t\t= Данные.description;\n\t\t\t//Если ЗначениеЗаполнено(Данные.expirationDate) Тогда\n\t\t\t//\tОбъект.СрокХранения = Данные.expirationDate;\n\t\t\t//\tОбъект.ПериодСрокаХранения = Перечисления.усПериодыВремени.Сутки;\n\t\t\t//КонецЕсли; \n\t\t\t//++ Ситек Ситников А.В. 06.12.2024\n\t\t\tЕсли ЗначениеЗаполнено(Данные.expirationDateUse) И Данные.expirationDateUse Тогда \n\t\t\t\tОбъект.Бюро1440_ВестиУчетПоСрокамГодности = Истина;  \n\t\t\t\tЕсли Объект.МодельУчета <> Справочники.усМоделиУчетаНоменклатуры.УчетПоСрокамГодности Тогда \n\t\t\t\t\tОбъект.МодельУчета = Справочники.усМоделиУчетаНоменклатуры.УчетПоСрокамГодности;\n\t\t\t\tКонецЕсли;\n\t\t\tИначеЕсли ЗначениеЗаполнено(Данные.expirationDateUse) И Не Данные.expirationDateUse Тогда   \n\t\t\t\tОбъект.Бюро1440_ВестиУчетПоСрокамГодности = Ложь;\n\t\t\t\tОбъект.МодельУчета = Объект.Родитель.МодельУчета;\n\t\t\tКонецЕсли;    \n\t\t\t\n\t\t\t//-- Ситек Ситников А.В. 06.12.2024\t\n\t\t\tЕсли НЕ ЗначениеЗаполнено(Объект.СтатусНоменклатурыПоУмолчанию) Тогда\n\t\t\t\tОбъект.СтатусНоменклатурыПоУмолчанию = Справочники.усСтатусыНоменклатуры.Кондиция;\n\t\t\tКонецЕсли;  \n\t\t\t// ++ Ситек Ситников А.В. 29.10.2024 Перевод номенклатуры на учёт в разрезе сроков годности.\n\t\t\tЕсли Данные.Свойство(\"УчетПоСрокамГодности\") И ЗначениеЗаполнено(Данные.УчетПоСрокамГодности) Тогда\n\t\t\t\tОбъект.Бюро1440_ВестиУчетПоСрокамГодности = Данные.УчетПоСрокамГодности;\n\t\t\t\tЕсли Объект.Бюро1440_ВестиУчетПоСрокамГодности Тогда\n\t\t\t\t\tРеквизитыУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.МодельУчета, \"ВестиПартионныйУчет, ВестиУчетПоСрокамГодности, УказыватьДатуПроизводства\");\t\n\t\t\t\t\tЕсли Не РеквизитыУчета.ВестиПартионныйУчет Или Не РеквизитыУчета.ВестиУчетПоСрокамГодности Или Не РеквизитыУчета.УказыватьДатуПроизводства Тогда\n\t\t\t\t\t\tЭталоннаяМодельУчета = Справочники.усМоделиУчетаНоменклатуры.УчетПоСрокамГодности;\n\t\t\t\t\t\tОбъект.МодельУчета = ЭталоннаяМодельУчета;\n\t\t\t\t\tКонецЕсли;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\t\t// -- Ситек Ситников А.В. 29.10.2024 Перевод номенклатуры на учёт в разрезе сроков годности.\n\t\t\t\n\t\tКонецЕсли;\n\t\t\n\t\tСправочникОбъектЗаписать(Объект, Данные, КонтекстОтветногоСообщения, мсвОшибок);\n\t\t\t\n\t\tЕсли НЕ Объект.ЭтоГруппа Тогда\t\t\t\n\t\t\t//Код записать как ШК\n\t\t\tЗапись = РегистрыСведений.усШтрихкоды.СоздатьМенеджерЗаписи();\n\t\t\tЗапись.Штрихкод \t\t\t= Данные.code;\n\t\t\t//Запись.Номенклатура \t\t= Объект.Ссылка;\n\t\t\tЗапись.Прочитать();\n\t\t\t\n\t\t\tЗапись.Штрихкод \t\t\t= Данные.code;\n\t\t\tЗапись.Номенклатура \t\t= Объект.Ссылка; \n\t\t\tЗапись.УпаковкаНоменклатуры = Справочники.усУпаковкиНоменклатуры.ПустаяСсылка();\n\t\t\tЗапись.СтатусНоменклатуры\t= Справочники.усСтатусыНоменклатуры.ПустаяСсылка();\n\t\t\tЗапись.ПартияНоменклатуры \t= Справочники.усПартииНоменклатуры.ПустаяСсылка();\n\t\t\tЗапись.Количество \t\t\t= 0;\n\t\t\tЗапись.Записать(Истина);\n\t\t\t\n\t\t\tДля Каждого Штрихкод Из Данные.barcode Цикл //???  \t\t\t\n\t\t\t\tЗапись = РегистрыСведений.усШтрихкоды.СоздатьМенеджерЗаписи();\n\t\t\t\tЗапись.Штрихкод \t\t\t= Штрихкод.barcode;\n\t\t\t\t//Запись.Номенклатура \t\t= Объект.Ссылка;\n\t\t\t\tЗапись.Прочитать();\n\t\t\t\t\n\t\t\t\tЗапись.Штрихкод \t\t\t= Штрихкод.barcode;\n\t\t\t\tЗапись.Номенклатура \t\t= Объект.Ссылка; \n\t\t\t\tУпаковка = Справочники.усУпаковкиНоменклатуры.ПустаяСсылка();\n\t\t\t\tПолучитьСсылкуНаЭлементСправочника(Данные.storangeUnitID, Упаковка, \"усНоменклатура\");\n\t\t\t\tЗапись.УпаковкаНоменклатуры = Упаковка;\n\t\t\t\tЗапись.СтатусНоменклатуры\t= Справочники.усСтатусыНоменклатуры.ПустаяСсылка();\n\t\t\t\tЗапись.ПартияНоменклатуры \t= Справочники.усПартииНоменклатуры.ПустаяСсылка();\n\t\t\t\tЗапись.Количество \t\t\t= 0;\n\t\t\t\tЗапись.Записать(Истина);\n\t\t\tКонецЦикла;\n\t\tКонецЕсли;\n\n\t\tЕсли ЗначениеЗаполнено(НаборУпаковок) Тогда \n\t\t\tБюро1440_ДоработкиСервер.СоздатьУпаковкиДляНоменклатурыПоНаборуУпаковок(Объект.Ссылка, НаборУпаковок); \t\n\t\tКонецЕсли;\n\t\t\n\tИсключение\n\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"error\", \"\");\n\t\tСтруктураОшибок.description = ОписаниеОшибки();\n\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(мсвОшибок, Истина);\n\tКонецПопытки;\n\t\n\tЕсли КонтекстОтветногоСообщения.success = Ложь Тогда \n\t\tВызватьИсключение СформироватьТекстОшибки(мсвОшибок);\t\n\tКонецЕсли;\n\t\nКонецПроцедуры\n\nПроцедура ОбработатьСообщениеПоОрганизациям(Данные, СвойстваСообщений, ПодпискаНаОчередь, Отказ, ВернутьВОчередь, КонтекстОтветногоСообщения = Неопределено) Экспорт\n\t\n\tмсвОшибок = Новый Массив;\n\tПопытка\n\t\tОбъект = СправочникиИнициализироватьОбъект(\"Организации\", Данные); \n\t\t\n\t\tОбъект.НаименованиеEn   = Данные.fullName;\n\t\tОбъект.ИНН  \t\t\t= Данные.INN;\n\t\tОбъект.КПП  \t\t\t= Данные.KPP;\n\t\tОбъект.ОКПО \t\t\t= Данные.OKPO;   \n\t\t\n\t\tСправочникОбъектЗаписать(Объект, Данные, КонтекстОтветногоСообщения, мсвОшибок);\n\tИсключение\n\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"error\", \"\");\n        СтруктураОшибок.description = ОписаниеОшибки();\n\t    мсвОшибок.Добавить(СтруктураОшибок);\n\t\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(мсвОшибок, Истина);\t\n\tКонецПопытки;\n\n\tЕсли КонтекстОтветногоСообщения.success = Ложь Тогда \n\t\tВызватьИсключение СформироватьТекстОшибки(мсвОшибок);\t\n\tКонецЕсли;\n\t\nКонецПроцедуры  \n\nПроцедура ОбработатьСообщениеПоУпаковкамНоменклатуры(Данные, СвойстваСообщений, ПодпискаНаОчередь, Отказ, ВернутьВОчередь, КонтекстОтветногоСообщения = Неопределено) Экспорт\n\t\n\tЕдИзмерения = Неопределено;\n\tВладелец    = Неопределено;\n\tмсвОшибок = Новый Массив;\n    ЕстьОшибка = Ложь; \n\tВладелецЭтоНабор = Ложь;\n\tТекстОшибки = \"\";  \n\t\n\tПопытка\t\n\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(Данные.classifierID, ЕдИзмерения, \"усЕдиницыИзмерения\") Тогда  \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'При загрузке упаковки с кодом: %1. НЕ найдена единица измерения с идентификатором: %2'\"), Данные.code, Данные.classifierID);\t\t\n\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundclassifierID\", \"\");\n\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\t//ЕстьОшибка = Истина;\t\n\t\tКонецЕсли; \n\t\t\n\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(Данные.ownerID, Владелец, \"усНоменклатура\") Тогда  \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'При загрузке упаковки с кодом: %1. НЕ найдена номенклатура с идентификатором: %2'\"), Данные.code, Данные.ownerID);\t\t\n\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundownerID\", \"\");\n\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\t//ЕстьОшибка = Истина;\t\n\t\tКонецЕсли;\n\t\t\n\t\tЕсли Данные.Свойство(\"packageSet\") Тогда  \n\t\t\tЕсли Данные.packageSet.Свойство(\"id\") И ЗначениеЗаполнено(Данные.packageSet.id) Тогда\n\t\t\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(Данные.packageSet.id, Владелец, \"Бюро1440_НаборыУпаковок\") Тогда \n\t\t\t\t\tНаборУпаковокОбъект = СправочникиИнициализироватьОбъект(\"Бюро1440_НаборыУпаковок\", Данные.packageSet);\t\n\t\t\t\t\tСправочникОбъектЗаписать(НаборУпаковокОбъект, Данные, КонтекстОтветногоСообщения, мсвОшибок); \n\t\t\t\t\tВладелец = НаборУпаковокОбъект.Ссылка;\n\t\t\t\tИначе\n\t\t\t\t\tЕсли Данные.packageSet.name <> Владелец.Наименование Тогда \n\t\t\t\t\t\tОбНабор = Владелец.ПолучитьОбъект();\n\t\t\t\t\t\tОбНабор.Наименование = Данные.packageSet.name;\n\t\t\t\t\t\tОбНабор.Записать();\n\t\t\t\t\tКонецЕсли;\n\t\t\t\tКонецЕсли;\n\t\t\t\tВладелецЭтоНабор = Истина;\n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\n\t\t\t\t\n\t\tЕсли ЕстьОшибка Тогда \n\t\t\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(мсвОшибок); \n\t\t\tВозврат;\t\n\t\tКонецЕсли; \n\t\t\n\t\tОбъект = СправочникиИнициализироватьОбъект(\"усУпаковкиНоменклатуры\", Данные); \n\t\t\n\t\tОбъект.ЕдиницаИзмерения = ЕдИзмерения;\n\t\tОбъект.Владелец         = Владелец;  \n\t\t\n\t\tЕсли Не ЗначениеЗаполнено(Объект.ТипГрузообработки) И ЗначениеЗаполнено(Объект.ЕдиницаИзмерения.ТипГрузообработки) Тогда\n\t\t\tОбъект.ТипГрузообработки = Объект.ЕдиницаИзмерения.ТипГрузообработки;\n\t\tКонецЕсли;\n\t\t\n\t\tЕсли ЗначениеЗаполнено(Данные.weight) Тогда\n\t\t\tОбъект.Масса = Данные.weight;\n\t\tКонецЕсли;\n\t\tЕсли ЗначениеЗаполнено(Данные.volume) Тогда\n\t\t\tОбъект.Объем = Данные.volume;\n\t\tКонецЕсли;\n\t\tЕсли ЗначениеЗаполнено(Данные.coefficient) Тогда\n\t\t\tОбъект.Коэффициент = Данные.coefficient;\n\t\tИначе\n\t\t\tОбъект.Коэффициент = 1;\n\t\tКонецЕсли;\n\t\tЕсли ЗначениеЗаполнено(Данные.depth) Тогда\n\t\t\tОбъект.Глубина = Данные.depth;\n\t\tКонецЕсли;\n\t\tЕсли ЗначениеЗаполнено(Данные.height) Тогда\n\t\t\tОбъект.Высота  = Данные.height;\n\t\tКонецЕсли;\n\t\tЕсли ЗначениеЗаполнено(Данные.width) Тогда\n\t\t\tОбъект.Ширина  = Данные.width;\n\t\tКонецЕсли;\n\t\tЕсли ЗначениеЗаполнено(Объект.Ширина) И ЗначениеЗаполнено(Объект.Глубина) И ЗначениеЗаполнено(Объект.Высота) И Не ЗначениеЗаполнено(Объект.ТипоразмерУпаковки) Тогда\n\t\t\tОбъект.ТипоразмерУпаковки = Справочники.усТипоразмерыУпаковок.ПодобратьТипоразмер(Объект.Ширина, Объект.Глубина, Объект.Высота);\n\t\t\tЕсли Не ЗначениеЗаполнено(Объект.ТипГрузообработки) И ЗначениеЗаполнено(Объект.ТипоразмерУпаковки.ТипГрузообработки) Тогда\n\t\t\t\tОбъект.ТипГрузообработки = Объект.ТипоразмерУпаковки.ТипГрузообработки;\n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\n\t\t\n\t\tЕсли Не ЗначениеЗаполнено(Объект.ТипГрузообработки)  Тогда\n\t\t\tОбъект.ТипГрузообработки = ?(Объект.Коэффициент > 1, Перечисления.усТипыГрузообработки.Средний, Перечисления.усТипыГрузообработки.Мелкий);\n\t\tКонецЕсли;\n\t\t\n\t\tЕсли Бюро1440_ДоработкиСервер.ОбъектМодифицирован(Объект) ИЛИ Объект.ЭтоНовый() Тогда\n\t\t\tСправочникОбъектЗаписать(Объект, Данные, КонтекстОтветногоСообщения, мсвОшибок);\n\t\t\tЕсли ВладелецЭтоНабор Тогда \n\t\t\t\tБюро1440_ДоработкиСервер.ОбновитьУпаковкиНоменклатурПоУпаковкеНабора(Объект.Ссылка);\n\t\t\tКонецЕсли;\n\t\tИначе\n\t\t\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(мсвОшибок);\t\n\t\tКонецЕсли;\t\n\t\t\n\tИсключение\n\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"error\", \"\");\n\t\tСтруктураОшибок.description = ОписаниеОшибки();\n\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(мсвОшибок, Истина);\t\n\tКонецПопытки; \n\t\n\tЕсли КонтекстОтветногоСообщения.success = Ложь Тогда \n\t\tВызватьИсключение СформироватьТекстОшибки(мсвОшибок);\t\n\tКонецЕсли;\n\nКонецПроцедуры\n\n#КонецОбласти \n\n#Область Документы\n \nПроцедура ОбработатьСообщениеПоОжидаемойПриемке(Данные, СвойстваСообщений, ПодпискаНаОчередь, Отказ, ВернутьВОчередь, КонтекстОтветногоСообщения = Неопределено) Экспорт\n\t\n\tОрганизация = Неопределено;\n\tКонтрагент = Неопределено;\n\tПоклажедатель = Неопределено;\n\tмсвОшибок = Новый Массив;\n    ЕстьОшибка = Ложь; \n\tТекстОшибки = \"\";\n\tЕстьБитыеСсылки = Ложь;\n\t\n\tПопытка\n\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(Данные.organizationID, Организация, \"Организации\") Тогда  \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'Не найдена организация с идентификатором: %1'\"), Данные.organizationID);\n\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundorganizationID\", \"\");\n\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\tЕстьБитыеСсылки = Истина;\n\t\t\t//ЕстьОшибка = Истина;\t\n\t\tКонецЕсли; \n\t\t\n\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(Данные.counterpartyID, Контрагент, \"усКонтрагенты\") Тогда  \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'Не найден контрагент с идентификатором: %1'\"), Данные.counterpartyID);\n\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundcounterpartyID\", \"\");\n\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\tЕстьБитыеСсылки = Истина;\n\t\t\t//ЕстьОшибка = Истина;\t\n\t\tКонецЕсли; \n\t\t\n\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(Данные.counterpartyIDP, Поклажедатель, \"усКонтрагенты\") Тогда  \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'Не найден поклажедатель с идентификатором: %1'\"), Данные.counterpartyIDP);\n\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundcounterpartyIDP\", \"\");\n\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\tЕстьБитыеСсылки = Истина;\n\t\t\t//ЕстьОшибка = Истина;\t\n\t\tКонецЕсли;  \n\t\t\n\t\t// строки ожидаемой приемки\n\t\tТовары = Новый ТаблицаЗначений;\n\t\tТовары.Колонки.Добавить(\"КодСтрокиКИС\");\n\t\tТовары.Колонки.Добавить(\"Номенклатура\");\n\t\tТовары.Колонки.Добавить(\"УпаковкаНоменклатуры\");\n\t\tТовары.Колонки.Добавить(\"СтатусНоменклатуры\");\n\t\tТовары.Колонки.Добавить(\"ПартияНоменклатуры\");\n\t\tТовары.Колонки.Добавить(\"Количество\");\n\t\tТовары.Колонки.Добавить(\"КоличествоУпаковок\");\n\t\tТовары.Колонки.Добавить(\"Ссылка\");\n\t\t\n\t\t// строки ЦМТ\n\t\tЦМТ = Новый ТаблицаЗначений;\n\t\tЦМТ.Колонки.Добавить(\"ШтрихкодКИЗ\");\n\t\tЦМТ.Колонки.Добавить(\"Номенклатура\");\n\t\t\n\t\tДля каждого СтрокаОП Из Данные.goods Цикл  \n\t\t\t\n\t\t\tНоменклатура = Неопределено;\n\t\t\tУпаковкаНоменклатуры = Неопределено;   \n\t\t\tЕсли НЕ СтрокаОП.isOnQualityControl Тогда \n\t\t\t\tСтатусНоменклатуры = Справочники.усСтатусыНоменклатуры.Кондиция; \n\t\t\tИначе    \n\t\t\t\tСтатусНоменклатуры = Бюро1440_ОбщегоНазначенияПовтИсп.ЗначениеНастройки(\"СтатусНоменклатурыКонтроль\");\n\t\t\tКонецЕсли;\n\t\t\tПартияНоменклатуры = Справочники.усПартииНоменклатуры.ПустаяСсылка();\n\t\t\t\n\t\t\tНоваяСтрока = Товары.Добавить();\n\t\t\tНоваяСтрока.Количество \t\t     = СтрокаОП.Quantity;\n\t\t\tНоваяСтрока.КоличествоУпаковок   = СтрокаОП.QuantityUnit;\n\t\t\tНоваяСтрока.КодСтрокиКИС\t     = Строка(СтрокаОП.codeLine);\n\t\t\tНоваяСтрока.СтатусНоменклатуры\t = СтатусНоменклатуры;\n\t\t\t\n\t\t\t\n\t\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(СтрокаОП.ownerID, Номенклатура, \"усНоменклатура\") Тогда  \n\t\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'Не найдена номенклатура с идентификатором: %1'\"), СтрокаОП.ownerID);\n\t\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundownerID\", \"\");\n\t\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\t\tЕстьБитыеСсылки = Истина;\n\t\t\t\t//ЕстьОшибка = Истина;\t\n\t\t\tКонецЕсли;\n\t\t\tНоваяСтрока.Номенклатура = Номенклатура; //Битые ссылки так же пишем.\n\t\t\t\n\t\t\t\n\t\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(СтрокаОП.packageUnitID, УпаковкаНоменклатуры, \"усУпаковкиНоменклатуры\") Тогда  \n\t\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'Не найдена УпаковкаНоменклатуры с идентификатором: %1'\"), СтрокаОП.packageUnitID);\n\t\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundpackageUnitID\", \"\");\n\t\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\t\tЕстьБитыеСсылки = Истина;\n\t\t\t\t//ЕстьОшибка = Истина;\t\n\t\t\tКонецЕсли;\n\t\t\tНоваяСтрока.УпаковкаНоменклатуры = УпаковкаНоменклатуры;\n\t\t\t\n\t\t\tНоваяСтрока.ПартияНоменклатуры = ПартияНоменклатуры;\n\t\t\t\n\t\tКонецЦикла;\n\t\t\n\t\tДля каждого СтрокаЦМТ Из Данные.serialNumbers Цикл  \n\t\t\t\n\t\t\tНоменклатура = Неопределено;\t\t\n\t\t\tНоваяСтрока = ЦМТ.Добавить();\n\t\t\tНоваяСтрока.ШтрихкодКИЗ\t\t     = СтрокаЦМТ.serialNumber;\n\t\t\t\n\t\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(СтрокаОП.ownerID, Номенклатура, \"усНоменклатура\") Тогда  \n\t\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'Не найдена номенклатура с идентификатором: %1'\"), СтрокаОП.ownerID);\n\t\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundownerID\", \"\");\n\t\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\t\tмсвОшибок.Добавить(СтруктураОшибок);  \n\t\t\t\tЕстьБитыеСсылки = Истина;\n\t\t\t\t//ЕстьОшибка = Истина;\n\t\t\tКонецЕсли;\n\t\t\tНоваяСтрока.Номенклатура = Номенклатура;\n\t\t\t\n\t\t\tНоваяСтрока.ПартияНоменклатуры = ПартияНоменклатуры;\n\t\t\t\n\t\tКонецЦикла;\n\t\t\n\t\tЕсли ЕстьОшибка Тогда \n\t\t\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(мсвОшибок);  \n\t\t\tВозврат;\t\n\t\tКонецЕсли; \n\t\t\n\t\tНовыйОбъект = Ложь;    \n\t\t\n\t\tОбъект = ДокументыИнициализироватьОбъект(\"усОжидаемаяПриемка\", Данные, НовыйОбъект); \n\t\t\n\t\tМассивИП = Новый Массив;\n\t\tЕсли НайтиСсылкиПоПолямПоиска(\"Справочник.усИсточникиПоступления\", Данные, \"Бюро1440_ИдентификаторОбмена = operationIdentifier\", МассивИП)  Тогда  \n\t\t\tОбъект.ИсточникПоступления = МассивИП[0].Ссылка; \n\t\tИначе \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'Не найден источник поступления с идентификатором : %1'\"), Данные.operationIdentifier);  \n\t\t\tВызватьИсключение ТекстОшибки;\n\t\tКонецЕсли;\n\n\t\tОбъект.Организация = Организация;\n\t\tОбъект.Контрагент = Контрагент;\n\t\tОбъект.ВажностьЗадач = Перечисления.усВажностьЗадач.Обычная; \n\t\tОбъект.Поклажедатель = Поклажедатель;\n\t\tОбъект.Бюро1440_ДокументОснованиеКИС = Данные.innerOrderNumber;\n\t\tОбъект.Бюро1440_ЗаказПоставщика      = Данные.counterpartyOrderNumber;\n\t\tОбъект.Бюро1440_ИспользуетсяПодтверждениеПрихода = Данные.confirmation;\n\t\tЕсли Не ЗначениеЗаполнено(Объект.Комментарий) Тогда //++ Николаев ситек 03.09.24  ICT-46986 \n\t\t\tОбъект.Комментарий = Данные.description; \n\t\tКонецЕсли;\n\n\t\tЕсли НЕ ЗначениеЗаполнено(Объект.СтадииПриемки) Тогда \n\t\t\tСтадииПриемки = Справочники.усСтадииПриемки.БазоваяНастройка;\n\t\t\tЕсли ЗначениеЗаполнено(Объект.ИсточникПоступления.СтадииПриемки) Тогда\n\t\t\t\tСтадииПриемки = Объект.ИсточникПоступления.СтадииПриемки;\n\t\t\tКонецЕсли;\n\t\t\tЕсли ЗначениеЗаполнено(Контрагент) И ЗначениеЗаполнено(Контрагент.СтадииПриемки) Тогда\n\t\t\t\tСтадииПриемки = Контрагент.СтадииПриемки;\n\t\t\tКонецЕсли;\n\t\t\tОбъект.СтадииПриемки = СтадииПриемки; \n\t\tКонецЕсли;  \n\t\tЕсли ЗначениеЗаполнено(Данные.preliminaryAcceptanceCode) Тогда \n\t\t\tМассивПП = Новый Массив;\n\t\t\tЕсли НайтиСсылкиПоПолямПоиска(\"Документ.усПредварительнаяПриемка\", Данные, \"Номер = preliminaryAcceptanceCode\", МассивПП)  Тогда  \n\t\t\t\tОбъект.Бюро1440_ПредварительнаяПриемка = МассивПП[0].Ссылка; \n\t\t\tИначе \n\t\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'Не найдена предварительная приемка с кодом: %1'\"), Данные.preliminaryAcceptanceCode);\n\t\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundpreliminaryAcceptanceCode\", \"\");\n\t\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\n\t\tОбъект.ДатаПоступления = ПрочитатьДатуJSON(Данные.expectedDate, ФорматДатыJSON.ISO);\n\t\t\n\t\tЕсли НовыйОбъект Тогда \n\t\t\t//записываем в статусе \"Не загружена\" необходимо для корректной обработки строк\n\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"Бюро1440_НеОтправлятьRMQ\");\n\t\t\t//Объект.ОбменДанными.Загрузка = Истина;\n\t\t\tОбъект.Записать(РежимЗаписиДокумента.Запись);\n\t\tКонецЕсли;\n\t\t\n\t\tОжидаемаяПриемкаСсылка = Объект.Ссылка; \n\t\t\n\t\tмсвНенайденныхСтрок = Новый Массив;\n\t\t\n\t\tЕсли Не НовыйОбъект Тогда  \n\t\t\t\n\t\t\tСтатусДокумента = Документы.усОжидаемаяПриемка.Статус(ОжидаемаяПриемкаСсылка); \t\t\n\t\t\tЕсли НЕ (СтатусДокумента = Перечисления.усСтатусыОжидаемыхПриемок.НеЗагружена\n\t\t\t\tИЛИ СтатусДокумента = Перечисления.усСтатусыОжидаемыхПриемок.Новая\n\t\t\t\tИЛИ СтатусДокумента = Перечисления.усСтатусыОжидаемыхПриемок.КВыполнению\n\t\t\t\tИЛИ СтатусДокумента = Перечисления.усСтатусыОжидаемыхПриемок.ВРаботе\n\t\t\t\tИЛИ СтатусДокумента = Перечисления.усСтатусыОжидаемыхПриемок.Отменена) Тогда \n\t\t\t\tТекстОшибки = \"Документ уже находится в работе, статус не равен Новый, К выполнению или В работе\";\n\t\t\t\tВызватьИсключение ТекстОшибки;  //думаю стоит считать эту ошибку критичной\n\t\t\t\t//СтруктураОшибок = Новый Структура(\"code, description\", \"BadStatus\", \"\");\n\t\t\t\t//СтруктураОшибок.description = ТекстОшибки;\n\t\t\t\t//мсвОшибок.Добавить(СтруктураОшибок);\n\t\t\t\t//КонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(мсвОшибок, Истина);  \n\t\t\t\tВозврат;\n\t\t\tКонецЕсли;\t\n\t\t\t\n\t\t\tЗапрос = Новый Запрос;\n\t\t\tЗапрос.Текст =\n\t\t\t\"ВЫБРАТЬ\n\t\t\t|\tусСтрокаОжидаемойПриемки.Ссылка КАК Ссылка,\n\t\t\t|\tусСтрокаОжидаемойПриемки.КодСтрокиКИС,\n\t\t\t|\tусСтрокаОжидаемойПриемки.Номенклатура\n\t\t\t|ИЗ\n\t\t\t|\tДокумент.усСтрокаОжидаемойПриемки КАК усСтрокаОжидаемойПриемки\n\t\t\t|ГДЕ\n\t\t\t|\tусСтрокаОжидаемойПриемки.Владелец = &ОжидаемаяПриемка\";\n\t\t\tЗапрос.УстановитьПараметр(\"ОжидаемаяПриемка\", ОжидаемаяПриемкаСсылка);\n\t\t\tтзСтрокиОП = Запрос.Выполнить().Выгрузить();\n\t\t\t\n\t\t\tДля каждого текСтрока Из Товары Цикл\n\t\t\t\tЕсли ЗначениеЗаполнено(текСтрока.КодСтрокиКИС) Тогда\n\t\t\t\t\tНайденнаяСтрока = тзСтрокиОП.Найти(Строка(текСтрока.КодСтрокиКИС), \"КодСтрокиКИС\");\n\t\t\t\tИначе\n\t\t\t\t\tНайденнаяСтрока = тзСтрокиОП.Найти(текСтрока.Номенклатура, \"Номенклатура\");\n\t\t\t\tКонецЕсли;\n\t\t\t\tЕсли НайденнаяСтрока <> Неопределено Тогда\n\t\t\t\t\tтекСтрока.Ссылка = НайденнаяСтрока.Ссылка;\n\t\t\t\t\tтзСтрокиОП.Удалить(НайденнаяСтрока);\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЦикла;\n\t\t\t\n\t\t\t// отменить ненайденные строки\n\t\t\tДля каждого текСтрока Из тзСтрокиОП Цикл\n\t\t\t\tСтрокаДокумента = текСтрока.Ссылка.ПолучитьОбъект();\n\t\t\t\tСтрокаДокумента.КоличествоУпаковок = 0;\n\t\t\t\tСтрокаДокумента.Количество         = 0;\n\t\t\t\tСтрокаДокумента.Цена               = 0;\n\t\t\t\tСтрокаДокумента.ДополнительныеСвойства.Вставить(\"Бюро1440_НеОтправлятьRMQ\");\n\t\t\t\tЕсли СтрокаДокумента.ПометкаУдаления Тогда\n\t\t\t\t\tРежимЗаписи = РежимЗаписиДокумента.Запись;\n\t\t\t\tИначе\n\t\t\t\t\tРежимЗаписи = РежимЗаписиДокумента.Проведение; \n\t\t\t\t\tмсвНенайденныхСтрок.Добавить(текСтрока.Ссылка);\n\t\t\t\tКонецЕсли;\n\t\t\t\tСтрокаДокумента.Записать(РежимЗаписи);\n\t\t\tКонецЦикла;\n\t\tКонецЕсли;  \n\t\t\n\t\tДля Каждого Стр из мсвНенайденныхСтрок Цикл  \n\t\t\t//Чтобы отработали встроенные подписки, необходимо сначала строку провести, потом можно пометить на удаление\n\t\t\tобСтрокаУдалить = Стр.ПолучитьОбъект(); \n\t\t\tобСтрокаУдалить.ДополнительныеСвойства.Вставить(\"Бюро1440_НеОтправлятьRMQ\");\n\t\t\tобСтрокаУдалить.ПометкаУдаления = Истина; \n\t\t\tобСтрокаУдалить.Записать(РежимЗаписиДокумента.ОтменаПроведения);\n\t\tКонецЦикла;\n\t\t\n\t\t// создать/обновить строки\n\t\tДля каждого текСтрока Из Товары Цикл\n\t\t\tЕсли ЗначениеЗаполнено(текСтрока.Ссылка) Тогда\n\t\t\t\tСтрокаОП = текСтрока.Ссылка.ПолучитьОбъект();\n\t\t\tИначе\n\t\t\t\tСтрокаОП = Документы.усСтрокаОжидаемойПриемки.СоздатьДокумент();\n\t\t\tКонецЕсли;\n\t\t\tСтрокаОП.Владелец             = ОжидаемаяПриемкаСсылка;\n\t\t\tСтрокаОП.Дата \t\t\t\t  = ОжидаемаяПриемкаСсылка.Дата;\n\t\t\tСтрокаОП.Номенклатура         = текСтрока.Номенклатура;\n\t\t\tСтрокаОП.СтатусНоменклатуры   = текСтрока.СтатусНоменклатуры;\n\t\t\tСтрокаОП.ПартияНоменклатуры   = текСтрока.ПартияНоменклатуры;\n\t\t\tСтрокаОП.УпаковкаНоменклатуры = текСтрока.УпаковкаНоменклатуры;\n\t\t\tСтрокаОП.Количество           = текСтрока.Количество;\n\t\t\tСтрокаОП.КоличествоУпаковок   = текСтрока.КоличествоУпаковок;\n\t\t\tСтрокаОП.КодСтрокиКИС         = текСтрока.КодСтрокиКИС;\n\t\t\tСтрокаОП.ПометкаУдаления \t  = ОжидаемаяПриемкаСсылка.ПометкаУдаления;\n\t\t\t\n\t\t\tСтрокаОП.ДополнительныеСвойства.Вставить(\"Бюро1440_НеОтправлятьRMQ\");\n\t\t\tЕсли НЕ СтрокаОП.ПометкаУдаления Тогда\n\t\t\t\tСтрокаОП.Записать(РежимЗаписиДокумента.Проведение);\n\t\t\tИначеЕсли СтрокаОП.Проведен Тогда\n\t\t\t\tСтрокаОП.Записать(РежимЗаписиДокумента.ОтменаПроведения);\n\t\t\tИначе\n\t\t\t\tСтрокаОП.Записать(РежимЗаписиДокумента.Запись);\n\t\t\tКонецЕсли;\n\t\tКонецЦикла; \n\t\t\n\t\tОбъект.КодыЦМТ.Очистить();\n\t\t\n\t\tДля Каждого Стр Из ЦМТ Цикл \n\t\t\tНовСтр = Объект.КодыЦМТ.Добавить();\n\t\t\tЗаполнитьЗначенияСвойств(НовСтр, Стр); \n\t\tКонецЦикла;\n\t\t\n\t\tДокументОбъектЗаписать(Объект, Данные, КонтекстОтветногоСообщения, мсвОшибок, ЕстьБитыеСсылки);\n\tИсключение\n\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"error\", \"\");\n\t\tСтруктураОшибок.description = ОписаниеОшибки();\n\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(мсвОшибок, Истина);\t\n\tКонецПопытки; \n\t\n\tЕсли КонтекстОтветногоСообщения.success = Ложь Тогда \n\t\tВызватьИсключение СформироватьТекстОшибки(мсвОшибок);\t\n\tКонецЕсли;\n\t\nКонецПроцедуры\n  \nПроцедура ОбработатьСообщениеПоЗаказамНаОтгрузку(Данные, СвойстваСообщений, ПодпискаНаОчередь, Отказ, ВернутьВОчередь, КонтекстОтветногоСообщения = Неопределено) Экспорт\n\t\n\tОрганизация = Неопределено;\n\tКонтрагент = Неопределено;\n\tПоклажедатель = Неопределено;\n\tмсвОшибок = Новый Массив;\n    ЕстьОшибка = Ложь; \n\tТекстОшибки = \"\";\n\tЕстьБитыеСсылки = Ложь;\n\t\n\tПопытка\n\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(Данные.organizationID, Организация, \"Организации\") Тогда  \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'Не найдена организация с идентификатором: %1'\"), Данные.OrganizationID);\n\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundorganizationID\", \"\");\n\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\tмсвОшибок.Добавить(СтруктураОшибок); \n\t\t\tЕстьБитыеСсылки = Истина;\n\t\t\t//ЕстьОшибка = Истина;\t\n\t\tКонецЕсли; \n\t\t\n\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(Данные.counterpartyID, Контрагент, \"усКонтрагенты\") Тогда  \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'Не найден контрагент с идентификатором: %1'\"), Данные.counterpartyID);\n\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundcounterpartyID\", \"\");\n\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\tмсвОшибок.Добавить(СтруктураОшибок); \n\t\t\tЕстьБитыеСсылки = Истина;\n\t\t\t//ЕстьОшибка = Истина;\t\n\t\tКонецЕсли; \n\t\t\n\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(Данные.counterpartyIDP, Поклажедатель, \"усКонтрагенты\") Тогда  \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'Не найден контрагент с идентификатором: %1'\"), Данные.counterpartyIDP);\n\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundcounterpartyIDP\", \"\");\n\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\tЕстьБитыеСсылки = Истина;\n\t\t\t//ЕстьОшибка = Истина;\t\n\t\tКонецЕсли;  \n\t\t\n\t\t// строки ЗНО\n\t\tТовары = Новый ТаблицаЗначений;\n\t\tТовары.Колонки.Добавить(\"КодСтрокиКИС\");\n\t\tТовары.Колонки.Добавить(\"Номенклатура\");\n\t\tТовары.Колонки.Добавить(\"УпаковкаНоменклатуры\");\n\t\tТовары.Колонки.Добавить(\"СтатусНоменклатуры\");\n\t\tТовары.Колонки.Добавить(\"ПартияНоменклатуры\");\n\t\tТовары.Колонки.Добавить(\"Количество\");\n\t\tТовары.Колонки.Добавить(\"КоличествоУпаковок\");\n\t\tТовары.Колонки.Добавить(\"Ссылка\");\n\t\t\n\t\tДля каждого СтрокаЗНО Из Данные.goods Цикл  \n\t\t\t\n\t\t\tНоменклатура = Неопределено;\n\t\t\tУпаковкаНоменклатуры = Неопределено;   \n\t\t\tСтатусНоменклатуры = Справочники.усСтатусыНоменклатуры.Кондиция; \n\t\t\tПартияНоменклатуры = Справочники.усПартииНоменклатуры.ПустаяСсылка();\n\t\t\t\n\t\t\tНоваяСтрока = Товары.Добавить();\n\t\t\tНоваяСтрока.Количество \t\t     = СтрокаЗНО.Quantity;\n\t\t\tНоваяСтрока.КоличествоУпаковок   = СтрокаЗНО.QuantityUnit;\n\t\t\tНоваяСтрока.КодСтрокиКИС\t     = Строка(СтрокаЗНО.codeLine);\n\t\t\tНоваяСтрока.СтатусНоменклатуры\t = СтатусНоменклатуры;\n\t\t\t\n\t\t\t\n\t\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(СтрокаЗНО.ownerID, Номенклатура, \"усНоменклатура\") Тогда  \n\t\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'Не найдена номенклатура с идентификатором: %1'\"), СтрокаЗНО.ownerID);\n\t\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundownerID\", \"\");\n\t\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\t\tЕстьБитыеСсылки = Истина;\n\t\t\t\t//ЕстьОшибка = Истина;\n\t\t\tКонецЕсли;\n\t\t\tНоваяСтрока.Номенклатура = Номенклатура;\n\t\t\t\n\t\t\tЕсли НЕ ПолучитьСсылкуНаЭлементСправочника(СтрокаЗНО.packageUnitID, УпаковкаНоменклатуры, \"усУпаковкиНоменклатуры\") Тогда  \n\t\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'Не найдена УпаковкаНоменклатуры с идентификатором: %1'\"), СтрокаЗНО.packageUnitID);\n\t\t\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"NotFoundpackageUnitID\", \"\");\n\t\t\t\tСтруктураОшибок.description = ТекстОшибки;\n\t\t\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\t\t\tЕстьБитыеСсылки = Истина;\n\t\t\t\t//ЕстьОшибка = Истина;\n\t\t\tКонецЕсли;\n\t\t\tНоваяСтрока.УпаковкаНоменклатуры = УпаковкаНоменклатуры;\n\t\t\t\n\t\t\tНоваяСтрока.ПартияНоменклатуры = ПартияНоменклатуры;\n\t\t\t\n\t\tКонецЦикла;\n\t\t\n\t\tЕсли ЕстьОшибка Тогда \n\t\t\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(мсвОшибок);  \n\t\t\tВозврат;\t\n\t\tКонецЕсли; \n\t\t\n\t\tНовыйОбъект = Ложь;\n\t\t\n\t\tОбъект = ДокументыИнициализироватьОбъект(\"усЗаказНаОтгрузку\", Данные, НовыйОбъект);\n\t\t\n\t\tМассивНО = Новый Массив;\n\t\tЕсли НайтиСсылкиПоПолямПоиска(\"Справочник.усНаправлениеОтгрузки\", Данные, \"Бюро1440_ИдентификаторОбмена = operationIdentifier\", МассивНО)  Тогда  \n\t\t\tОбъект.НаправлениеОтгрузки = МассивНО[0].Ссылка; \n\t\tИначе \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'Не найдено направление отгрузки с идентификатором : %1'\"), Данные.operationIdentifier);  \n\t\t\tВызватьИсключение ТекстОшибки;\n\t\tКонецЕсли;      \n\t\t\n\t\tОбъект.Организация = Организация;\n\t\tОбъект.Контрагент = Контрагент;\n\t\tОбъект.Поклажедатель = Поклажедатель; \n\t\tОбъект.ВажностьЗадач = Перечисления.усВажностьЗадач.Обычная; \n\t\tОбъект.Бюро1440_ДокументОснованиеКИС = Данные.innerOrderNumber; \n\t\tОбъект.Бюро1440_РазрешенОтборСверхПлана = Данные.exceeding;//++ Николаев ситек 26.08.24  ICT-37999\n\n\t\t\n\t\tЕсли НЕ ЗначениеЗаполнено(Объект.СтадииОтгрузки) Тогда \n\t\t\tСтадииОтгрузки = Справочники.усСтадииОтгрузки.БазоваяНастройка;\n\t\t\tЕсли ЗначениеЗаполнено(Объект.НаправлениеОтгрузки.СтадииОтгрузки) Тогда\n\t\t\t\tСтадииОтгрузки = Объект.НаправлениеОтгрузки.СтадииОтгрузки;\n\t\t\tКонецЕсли;\n\t\t\tЕсли ЗначениеЗаполнено(Контрагент) И ЗначениеЗаполнено(Контрагент.СтадииОтгрузки) Тогда\n\t\t\t\tСтадииОтгрузки = Контрагент.СтадииОтгрузки;\n\t\t\tКонецЕсли;\n\t\t\tОбъект.СтадииОтгрузки = СтадииОтгрузки;\n\t\tКонецЕсли;            \t\n\t\tОбъект.ДатаОтгрузки = ПрочитатьДатуJSON(Данные.expectedDate, ФорматДатыJSON.ISO);\n\t\tЕсли Не ЗначениеЗаполнено(Объект.Комментарий) Тогда //++ Николаев ситек 03.09.24  ICT-46986\n\t\t\tОбъект.Комментарий = Данные.description;\n\t\tКонецЕсли;\n\t\t\n\t\tЕсли НовыйОбъект Тогда \n\t\t\t//записываем в статусе \"Не загружена\" необходимо для корректной обработки строк\n\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"Бюро1440_НеОтправлятьRMQ\");\n\t\t\t//Объект.ОбменДанными.Загрузка = Истина;\n\t\t\tОбъект.Записать(РежимЗаписиДокумента.Запись);\n\t\tКонецЕсли;\n\t\t\n\t\tЗаказНаОтгрузкуСсылка = Объект.Ссылка;\n\t\tмсвНенайденныхСтрок = Новый Массив;   \n\t\t//++ Николаев ситек 21.08.24  ICT-37999 \n\t\tОтгрузкаСырьяПереработчику = Объект.НаправлениеОтгрузки.Бюро1440_ИдентификаторОбмена = \"ОтгрузкаСырьяПереработчику\";  \n\t\tСтатусДокумента = Документы.усЗаказНаОтгрузку.Статус(ЗаказНаОтгрузкуСсылка);\n\t\tтбзИзмененныеСтроки = Новый ТаблицаЗначений;\n\t\tтбзИзмененныеСтроки.Колонки.Добавить(\"Номенклатура\");\n\t\tтбзИзмененныеСтроки.Колонки.Добавить(\"КоличествоДО\");\n\t\tтбзИзмененныеСтроки.Колонки.Добавить(\"КоличествоПосле\");\n\t\t//-- Николаев ситек 21.08.24 \n\t\t\n\t\t//++ Крутских Ситек 30.01.25 ++\n\t\tМассивМодифицированныхСтрок = Новый Массив;\n\t\t//-- Крутских Ситек 30.01.25 ++\n\t\t\n\t\tЕсли Не НовыйОбъект Тогда\n\t\t\t\n\t\t\t//++ Николаев ситек 15.08.24  ICT-37999\n\t\t\t//СтатусДокумента = Документы.усЗаказНаОтгрузку.Статус(ЗаказНаОтгрузкуСсылка);\n\t\t\tЕсли НЕ ОтгрузкаСырьяПереработчику Тогда\n\t\t\t//-- Николаев ситек 15.08.24)\n\t\t\t\tЕсли НЕ (СтатусДокумента = Перечисления.усСтатусыЗаказовНаОтгрузку.НеЗагружен\n\t\t\t\t\tИЛИ СтатусДокумента = Перечисления.усСтатусыЗаказовНаОтгрузку.Новый\n\t\t\t\t\tИЛИ СтатусДокумента = Перечисления.усСтатусыЗаказовНаОтгрузку.КПланированию \n\t\t\t\t\tИЛИ СтатусДокумента = Перечисления.усСтатусыЗаказовНаОтгрузку.Спланирован\n\t\t\t\t\tИЛИ СтатусДокумента = Перечисления.усСтатусыЗаказовНаОтгрузку.Отменен) Тогда\n\t\t\t\t\tТекстОшибки = \"Документ уже находится в работе, статус не равен Новый, К планированию, Спланирован\"; \n\t\t\t\t\tВызватьИсключение ТекстОшибки;   //Думаю стоит считать эту ошибку критичной\n\t\t\t\tКонецЕсли;\n\t\t\t//++ Николаев ситек 15.08.24  ICT-37999 \n\t\t\tИначе \n\t\t\t\tЕсли СтатусДокумента = Перечисления.усСтатусыЗаказовНаОтгрузку.Отгружен Тогда\n\t\t\t\t\tТекстОшибки = \"Документ уже отгружен, корректировка невозможна\";\t\t\n\t\t\t\t\tВызватьИсключение ТекстОшибки; \n\t\t\t\tКонецЕсли; \n\t\t\tКонецЕсли;\n\t\t\t//-- Николаев ситек 15.08.24)\t\n\t\t\t\n\t\t\tЗапрос = Новый Запрос;\n\t\t\tЗапрос.Текст =\n\t\t\t\"ВЫБРАТЬ\n\t\t\t|\tусСтрокаЗаказаНаОтгрузку.Ссылка,\n\t\t\t|\tусСтрокаЗаказаНаОтгрузку.КодСтрокиКИС,\n\t\t\t|\tусСтрокаЗаказаНаОтгрузку.Номенклатура\n\t\t\t|ИЗ\n\t\t\t|\tДокумент.усСтрокаЗаказаНаОтгрузку КАК усСтрокаЗаказаНаОтгрузку\n\t\t\t|ГДЕ\n\t\t\t|\tусСтрокаЗаказаНаОтгрузку.Владелец = &Владелец\";\n\t\t\tЗапрос.УстановитьПараметр(\"Владелец\", ЗаказНаОтгрузкуСсылка);\n\t\t\tтзСтроки = Запрос.Выполнить().Выгрузить();\n\t\t\t\n\t\t\tДля каждого текСтрока Из Товары Цикл  \n\t\t\t\t//++Крутских Ситек 07.02.25++ комментируем\n\t\t\t\t//Если ЗначениеЗаполнено(текСтрока.КодСтрокиКИС) Тогда\n\t\t\t\t//\tНайденнаяСтрока = тзСтроки.Найти(текСтрока.КодСтрокиКИС, \"КодСтрокиКИС\");\n\t\t\t\t//Иначе\n\t\t\t\t//\tНайденнаяСтрока = тзСтроки.Найти(текСтрока.Номенклатура, \"Номенклатура\");\n\t\t\t\t//КонецЕсли;   \n\t\t\t\tНайденнаяСтрока = тзСтроки.Найти(текСтрока.Номенклатура, \"Номенклатура\");\n\t\t\t\t//--Крутских Ситек 07.02.25--\n\t\t\t\tЕсли НайденнаяСтрока <> Неопределено Тогда\n\t\t\t\t\tтекСтрока.Ссылка = НайденнаяСтрока.Ссылка;\n\t\t\t\t\tтзСтроки.Удалить(НайденнаяСтрока);\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЦикла;\n\t\t\t\n\t\t\t// отменить ненайденные строки\n\t\t\tДля каждого текСтрока Из тзСтроки Цикл\n\t\t\t\tСтрокаДокумента = текСтрока.Ссылка.ПолучитьОбъект();\n\t\t\t\tКоличествоДО = СтрокаДокумента.Количество;\n\t\t\t\tСтрокаДокумента.КоличествоУпаковок = 0;\n\t\t\t\tСтрокаДокумента.Количество         = 0;\n\t\t\t\tСтрокаДокумента.Цена               = 0;\n\t\t\t\tСтрокаДокумента.ДополнительныеСвойства.Вставить(\"Бюро1440_НеОтправлятьRMQ\");\n\t\t\t\tЕсли СтрокаДокумента.ПометкаУдаления Тогда\n\t\t\t\t\tРежимЗаписи = РежимЗаписиДокумента.Запись;\n\t\t\t\tИначе\n\t\t\t\t\tРежимЗаписи = РежимЗаписиДокумента.Проведение;\n\t\t\t\t\tмсвНенайденныхСтрок.Добавить(текСтрока.Ссылка); \n\t\t\t\t\t//++ Николаев ситек 21.08.24  ICT-37999\n\t\t\t\t\t//НовСтр = тбзИзмененныеСтроки.Добавить();\n\t\t\t\t\t//НовСтр.Номенклатура = СтрокаДокумента.Номенклатура;\n\t\t\t\t\t//НовСтр.КоличествоДО = КоличествоДО;\n\t\t\t\t\t//НовСтр.КоличествоПосле = 0;\n\t\t\t\t\t//-- Николаев ситек 21.08.24\n\t\t\t\t\t\n\t\t\t\t\t//++ Крутских Ситек 12.02.25 ++\n\t\t\t\t\t//МассивМодифицированныхСтрок.Добавить(текСтрока.Ссылка);\t\n\t\t\t\t\t//-- Крутских Ситек 12.02.25 коммент           \n\t\t\t\t\t\n\t\t\t\tКонецЕсли;\n\t\t\t\tСтрокаДокумента.Записать(РежимЗаписи);\n\t\t\tКонецЦикла;\n\t\tКонецЕсли; \n\t\t\n\t\tДля Каждого Стр из мсвНенайденныхСтрок Цикл  \n\t\t\t//Чтобы отработали встроенные подписки, необходимо сначала строку провести, потом можно пометить на удаление\n\t\t\tобСтрокаУдалить = Стр.ПолучитьОбъект();\n\t\t\tобСтрокаУдалить.ДополнительныеСвойства.Вставить(\"Бюро1440_НеОтправлятьRMQ\");\n\t\t\tобСтрокаУдалить.ПометкаУдаления = Истина; \n\t\t\tобСтрокаУдалить.Записать(РежимЗаписиДокумента.ОтменаПроведения);\n\t\tКонецЦикла;\n\t\t\n\t\tДля каждого текСтрока Из Товары Цикл\n\t\t\tЕсли ЗначениеЗаполнено(текСтрока.Ссылка) Тогда\n\t\t\t\tСтрокаЗаказа = текСтрока.Ссылка.ПолучитьОбъект();\n\t\t\tИначе\n\t\t\t\tСтрокаЗаказа = Документы.усСтрокаЗаказаНаОтгрузку.СоздатьДокумент();\n\t\t\tКонецЕсли; \n\t\t\tКоличествоДО = СтрокаЗаказа.Количество; //++ Николаев ситек 21.08.24  ICT-37999\t\t\n\t\t\tЗаполнитьЗначенияСвойств(СтрокаЗаказа,текСтрока);\n\t\t\t\n\t\t\tСтрокаЗаказа.Владелец             = ЗаказНаОтгрузкуСсылка;\n\t\t\tСтрокаЗаказа.Дата \t\t\t\t  = ЗаказНаОтгрузкуСсылка.Дата;\n\t\t\tСтрокаЗаказа.ПометкаУдаления      = Ложь;\n\t\t\tСтрокаЗаказа.ДополнительныеСвойства.Вставить(\"Бюро1440_НеОтправлятьRMQ\");\n\t\t\t//++ Николаев ситек 21.08.24  ICT-37999     \n\t\t\t\n\t\t\t//++Крутских Ситек 18.02.25++\n\t\t\t//Если Бюро1440_ДоработкиСервер.ОбъектМодифицирован(СтрокаЗаказа) \n\t\t\t//\tИЛИ КоличествоДО <> СтрокаЗаказа.Количество Тогда \n\t\t\tЕсли КоличествоДО <> СтрокаЗаказа.Количество Тогда\n\t\t\t\t//--Крутских Ситек 18.02.25-\n\t\t\t\tМассивМодифицированныхСтрок.Добавить(СтрокаЗаказа.Ссылка);\n\t\t\t\tНовСтр = тбзИзмененныеСтроки.Добавить();\n\t\t\t\tНовСтр.Номенклатура = СтрокаЗаказа.Номенклатура;\n\t\t\t\tНовСтр.КоличествоДО = КоличествоДО;\n\t\t\t\tНовСтр.КоличествоПосле = СтрокаЗаказа.Количество;\n\t\t\tКонецЕсли;\n\t\t\t//-- Николаев ситек 21.08.24\n\t\t\tСтрокаЗаказа.Записать(РежимЗаписиДокумента.Проведение); \n\t\tКонецЦикла;  \n\t\t\n\t\t//++ Крутских Ситек 30.01.25 ++\n\t\tТаблицаКонтроль = ПолучитьТаблицуИзменений(ЗаказНаОтгрузкуСсылка, МассивМодифицированныхСтрок);\n\t\t//ТаблицаКонтроль = ПолучитьТаблицуИзменений(ЗаказНаОтгрузкуСсылка);\n\t\t//-- Крутских Ситек 20.02.25  \n\t\t\n\t\t//++Крутских Ситек 20.02.25++\n\t\tДля каждого текСтрока ИЗ тбзИзмененныеСтроки Цикл \n\t\t\tПараметрыОтбора = Новый Структура(\"Номенклатура\");\n\t\t\tЗаполнитьЗначенияСвойств(ПараметрыОтбора, текСтрока);\t\n\t\t\tНайденныеСтроки = ТаблицаКонтроль.НайтиСтроки(ПараметрыОтбора);  \n\t\t\tЕсли НайденныеСтроки.Количество() > 0 Тогда\n\t\t\t\tтекСтрока.КоличествоДО = НайденныеСтроки[0].КоличествоДО;   \n\t\t\tКонецЕсли;\t\t\t\n\t\tКонецЦикла;    \n\t\t\n\t\tДля каждого текСтрока ИЗ ТаблицаКонтроль Цикл \n\t\t\tПараметрыОтбора = Новый Структура(\"Номенклатура\");\n\t\t\tЗаполнитьЗначенияСвойств(ПараметрыОтбора, текСтрока);\t\n\t\t\tНайденныеСтроки = тбзИзмененныеСтроки.НайтиСтроки(ПараметрыОтбора);  \n\t\t\tЕсли НайденныеСтроки.Количество() = 0 Тогда \n\t\t\t\tСтрокаИзменений = тбзИзмененныеСтроки.Добавить();\n\t\t\t\tЗаполнитьЗначенияСвойств(СтрокаИзменений, текСтрока);  \n\t\t\tКонецЕсли;\t\t\t\n\t\tКонецЦикла; \n\t\t//--Крутских Ситек 20.02.25-\n\n\t\t\n\t\t//++ Николаев ситек 21.08.24  ICT-37999 \n\t\tИндексСтатуса = Перечисления.усСтатусыЗаказовНаОтгрузку.Индекс(СтатусДокумента); \n\t\tОтправитьПисьмо = Ложь;\n\t\tЕсли ИндексСтатуса >= 7 И ИндексСтатуса <= 9 Тогда //отобран/упакован/готов к отгрузке \n\t\t\t//++ Крутских Ситек 30.01.25 ++\n\t\t\tКоличествоИзмененыхСтрок = тбзИзмененныеСтроки.Количество();\n\t\t\t//КоличествоИзмененыхСтрок = ТаблицаИзменений.Количество();\n\t\t\t//-- Крутских Ситек 30.01.25 --\n\t\t\tЕсли КоличествоИзмененыхСтрок > 0 И ОтгрузкаСырьяПереработчику Тогда \n\t\t\t\tОтправитьПисьмо = Истина;\t\n\t\t\tКонецЕсли; \n\t\tКонецЕсли;\n\t\t//-- Николаев ситек 21.08.24 \n\t\t\t\t\t\n\t\tДокументОбъектЗаписать(Объект, Данные, КонтекстОтветногоСообщения, мсвОшибок, ЕстьБитыеСсылки);\n\t\t\n\t\t\t//++ Николаев ситек 21.08.24  ICT-37999\n\t\tЕсли ОтправитьПисьмо Тогда\n\t\t\tПолучатели = Новый Массив; \n\t\t\t//++ Крутских Ситек 27.01.25--\n\t\t\t//Получатели.Добавить(Новый Структура(\"Адрес, Представление\", \"warehouse1440@1440.space\", \"Почта склада\"));\n\t\t\t\n\t\t\tУстановИтьПривилЕгированныйрежим(Истина);\n\t\t\t\n\t\t\tАдресДляУведомления = Константы.Бюро_1440_EmailДляУведомления.Получить();\n\t         \n\t\t\t\n\t\t\tЕсли ЗначениеЗаполнено(АдресДляУведомления) Тогда \n\t\t\t\tмсвПочта = СтрРазделить(АдресДляУведомления, \";\"); \n\t\t\t\tДля каждого мейл из мсвПочта цикл\n\t\t\t\t\tПолучатели.Добавить(Новый Структура(\"Адрес, Представление\", мейл, мейл));\n\t\t\t\tКонецЦикла;\t\n\t\t\t\t\n\t\t\t\t//-- Крутских Ситек 16.01.25--\n\t\t\t\tсткПараметрыПисьма = Бюро1440_ДоработкиСервер.ВернутьПараметрыПисьма();\n\t\t\t\t//++ Крутских Ситек 30.01.25 ++\n\t\t\t\t//сткПараметрыПисьма.Тема  = СтрШаблон(\"Изменение заказа на отгрузку № %1 в статусе %2\", Объект.НомерКИС, СтатусДокумента);   \n\t\t\t\t//сткПараметрыПисьма.Тема  = СтрШаблон(\"Изменение заказа на отгрузку № %1 в статусе %2\", Объект.Номер, СтатусДокумента);\n\t\t\t\tТемаПисьма = СтрШаблон(\"Изменение заказа на отгрузку № %1 в статусе %2\", Объект.Номер, СтатусДокумента);\n\t\t\t\tстрНомерКИС = \"Расходный ордер: \" + Строка(Объект.Ссылка.НомерКИС) + \", распоряжение: \" + Строка(Объект.Ссылка.Бюро1440_ДокументОснованиеКИС) ;\n\t\t\t\tТемаПисьма = ТемаПисьма + Символы.ПС + стрНомерКИС; \n\t\t\t\tсткПараметрыПисьма.Тема  = ТемаПисьма;\n\t\t\t\t//-- Крутских Ситек 30.01.25 --\n\t\t\t\tНавигационнаяСсылка = ПолучитьНавигационнуюСсылку(Объект.Ссылка);  \n\t\t\t\t//++ Крутских Ситек 16.01.25--\n\t\t\t\t//Текст = СтрШаблон(\"Состав документа № %1 скорректирован в статусе %2. (%3)\" + Символы.ПС, Объект.НомерКИС, СтатусДокумента, НавигационнаяСсылка);  \n\t\t\t\t\n\t\t\t\t//++Крутских Ситек 26.02.25\n\t\t\t\tТекстПисьма = СтрШаблон(\"Добрый день. %1По документу  %2 выполнена корректировка.%1%3\" , Символы.ПС, Строка(Объект.Ссылка),\n\t\t\t\t\"Расходный ордер: \" + Строка(Объект.Ссылка.НомерКИС) + \", распоряжение: \" + Строка(Объект.Ссылка.Бюро1440_ДокументОснованиеКИС)); \n\t\t\t\t//ТекстПисьма = СтрШаблон(\"Добрый день. %1По документу  %2 %1выполнена корректировка. \" , Символы.ПС, Строка(Объект.Ссылка) + \", \" + стрНомерКИС);\n\t\t\t\t//--Крутских Ситек 26.02.25\n\t\n\t\t\t\t//Для Каждого стр Из тбзИзмененныеСтроки Цикл\n\t\t\t\t//\tТекст = Текст + СтрШаблон(\"Номенклатура: %1,  Количество до: %2, Количество после: %3\" + Символы.ПС, стр.Номенклатура, стр.КоличествоДО, стр.КоличествоПосле);\t \n\t\t\t\t//КонецЦикла;          \n\t\t\t\t\n\t\t\t\t//++Крутских Ситек 07.02.25++\n\t\t\t\t//ТабДокумент = ЗаполнитьТабличныйДокументУведомление(ТаблицаИзменений, Объект.Ссылка); \n\t\t\t\tТабДокумент = ЗаполнитьТабличныйДокументУведомление(тбзИзмененныеСтроки, Объект.Ссылка);\t\t\t\t\n\t\t\t\t//--Крутских Ситек 12.02.25--\n\t\t\t\n\t\t\t\tПотокФайла = Новый ПотокВПамяти();\n\t\t\t\tТабДокумент.Записать(ПотокФайла, ТипФайлаТабличногоДокумента.XLSX);\n\t\t\t\t\n\t\t\t\tДвоичныеДанныеФайла = ПотокФайла.ЗакрытьИПолучитьДвоичныеДанные();\n\t\t\t\tВременноеХранилищеФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла, Новый УникальныйИдентификатор);\n\t\t\t\t\n\t\t\t\tВложения = Новый Массив;\n\t\t\t\tОписаниеВложения = Новый Структура(\"Представление, АдресВоВременномХранилище\", сткПараметрыПисьма.Тема + \".xlsx\", ВременноеХранилищеФайла);\n\t\t\t\tВложения.Добавить(ОписаниеВложения);\n                //-- Крутских Ситек 16.01.25--\n\t\t\t\tсткПараметрыПисьма.Текст = ТекстПисьма;\n\t\t\t\tсткПараметрыПисьма.Предмет = Объект.Ссылка;\n\t\t\t\tсткПараметрыПисьма.Получатели  = Получатели;\n\t\t\t\t//++ Крутских Ситек 16.01.25--    \n\t\t\t\tПисьмо = РаботаСПочтовымиСообщениями.ПодготовитьПисьмо(Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты, \n\t\t\t\t\tНовый Структура(\"Кому, Тело, Тема, ТипТекста, Вложения\", Получатели, ТекстПисьма, сткПараметрыПисьма.Тема, \"\", Вложения));\n\n\t\t\t\tПопытка\t\t\t\t\t\n\t\t\t\t\tРаботаСПочтовымиСообщениями.ОтправитьПисьмо(Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты, Письмо);\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\tИсключение\t\t\t\t\t\n\t\t\t\t\tЗаписьЖурналаРегистрации(\"Отправка письма \" + АдресДляУведомления, УровеньЖурналаРегистрации.Ошибка,,,ОписаниеОшибки());\t\t\t\t\t\n\t\t\t\tКонецПопытки; \n\t\t\t\n\t\t\tКонецЕсли; \n\t\n\t\t\tУстановИтьПривилЕгированныйрежим(Ложь);\n\n\t\t\t//Бюро1440_ДоработкиСервер.СоздатьИсходящееЭлектронноеПисьмо(сткПараметрыПисьма);  \n\t\t\t\n\t\t\t//-- Крутских Ситек 16.01.25--\n\t\tКонецЕсли;\n\t\t//-- Николаев ситек 21.08.24\n\tИсключение\n\t\tСтруктураОшибок = Новый Структура(\"code, description\", \"error\", \"\");\n\t\tСтруктураОшибок.description = ОписаниеОшибки();\n\t\tмсвОшибок.Добавить(СтруктураОшибок);\n\t\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(мсвОшибок, Истина);\t\n\tКонецПопытки;\n\t\n\tЕсли КонтекстОтветногоСообщения.success = Ложь Тогда \n\t\tВызватьИсключение СформироватьТекстОшибки(мсвОшибок);\t\n\tКонецЕсли;\n\nКонецПроцедуры\n \n#КонецОбласти\n\n#Область ОтветныеСообщения \n\nПроцедура СоздатьОтветноеСообщение(КонтекстСобытия) Экспорт \n\t\n\tЕсли ТипЗнч(КонтекстСобытия.Источник) = Тип(\"Структура\") Тогда  \n\t\tЕсли КонтекстСобытия.Источник.Свойство(\"success\") Тогда //Сообщение обработано  \n\t\t\tСтруктураОтвета = КонтекстСобытия.Источник;\t\t\n\t\t\tКонтекстСобытия.ДанныеСообщения = СтруктураОтвета;\n\t\tИначе //Сообщение не обработано и упало по ошибке записанной в статусы входящих \n\t\t\tСтруктураОтвета = Бюро1440_СозданиеИсходящихСообщений.ПолучитьТелоОтветногоСообщенияПоУмолчанию(); \n\t\t\tМассивОшибок = Новый Массив;\n\t\t\tСтруктураОтвета.success = Ложь;\n\t\t\tСтруктураОшибки = Новый Структура(\"code, description\", \"ProcessingError\", \"Сообщение не обработано, ошибка записана в статусы входящих сообщений WMS\");\n\t\t\tМассивОшибок.Добавить(СтруктураОшибки);\n\t\t\tСтруктураОтвета.errors = МассивОшибок;\n\t\t\t\n\t\t\tКонтекстСобытия.ДанныеСообщения = СтруктураОтвета;\n\t\tКонецЕсли;\n\tКонецЕсли;\n\nКонецПроцедуры\n\nПроцедура ОбработатьОтветноеСообщение(Данные, СвойстваСообщений, ПодпискаНаОчередь, Отказ, ВернутьВОчередь) Экспорт\n\t\n\tИдентификаторСообщения = СвойстваСообщений.Заголовки.messageId;\n\tДатаВремяСообщения \t   = xmlЗначение(тип(\"дата\"), СвойстваСообщений.Заголовки.timestamp);  \n\tТекстЗаголовка = \"Сообщение \" + ИдентификаторСообщения + \" от: \" +  ДатаВремяСообщения;\n\tЕсли НЕ Данные.success Тогда \n\t\tУровеньОшибки = УровеньЖурналаРегистрации.Ошибка;\n\tИначе\n\t\tУровеньОшибки = УровеньЖурналаРегистрации.Информация;\n\tКонецЕсли;\n\t\n\tТекстСообщений = \"\";\n\tЕсли Данные.errors.Количество() Тогда \n\t\tДля Каждого Стр Из Данные.errors Цикл \n\t\t\tТекстСообщений = ТекстСообщений + \"Код: \" + Стр.code + \" Сообщение: \" + Стр.description + Символы.ПС; \t\n\t\tКонецЦикла; \n\tИначе\n\t\tТекстСообщений = \"Успешно\";\t\n\tКонецЕсли; \n\t\n\tЗаписьЖурналаРегистрации(\"Обмен данными: Ответ\", УровеньОшибки,,, ТекстЗаголовка + Символы.ПС + ТекстСообщений);  \n\t\t\nКонецПроцедуры \n\n#КонецОбласти\n\n#КонецОбласти\n\n#КонецОбласти  \n\n#Область ЗагрузкаДанных\n\n// Метод производит поиск по Guid или создает новый объект справочника \n//\tи заполняет его \"Общими\" данными (Наименование, ПометкаУдаления [ЭтоГруппа]).\n// При создании нового объекта, если есть свойство isGroup(<Булево) \n//\tто учитывается его значение - создается Группа или элемент. Иначе создается элемент\n//\n// Параметры:\n//  ИмяСправочника\t - Строка - Имя справочника (Пример \"Склады\")\n//  Данные   \t\t - Структура - с полями Id, Name, isMarked [, isGroup]\n//  СоздатьНовыйУИД\t - Булево - Если данные в справочник загружаются из нескольких справочников, \n//  в ВМС надо создать свой УИД и записать данные по исходному УИД в РС Идентификаторов т.к. уникальность УИД гарантируется только в рамках таблицы\n//  При этом необходимо чтобы в \"Данные\" обязательно было свойство objectType \n// \n// Возвращаемое значение:\n//  СправочникОбъект - Созданный по Guid или полученный из БД объект с заполненными свойствами\n//\nФункция СправочникиИнициализироватьОбъект(ИмяСправочника, Данные, СоздатьНовыйУИД = Ложь) Экспорт \n\t\n\tСправочникТип = СтрШаблон(\"СправочникСсылка.%1\", ИмяСправочника);\n\tСправочникТип = Тип(СправочникТип);\n\n\tЕстьСвойствоGroup = Данные.Свойство(\"isGroup\");\n\t\n\tЕстьСвойствоCode = Данные.Свойство(\"code\");\n\tЕстьСвойствоТип  = Данные.Свойство(\"objectType\"); //тип справочника КИС\n\t\n\tСсылка = Справочники[ИмяСправочника].ПолучитьСсылку(Новый УникальныйИдентификатор(Данные.Id));\n\tЭтоНовый = Не ОбщегоНазначения.СсылкаСуществует(Ссылка); \n\t \n\tЕсли ЭтоНовый Тогда \n\t\tЕсли СоздатьНовыйУИД И ЕстьСвойствоТип Тогда \t\t\n\t\t\tЕсли ЕстьЗаписьСИдентификаторомВСинхронизируемыхОбъектахБюро1440_ИдентификаторыОбмена(Данные.id, Ссылка, Данные, \"Объект.Бюро1440_ТипСправочникаКИС = objectType\") Тогда \n\t\t\t\tЭтоНовый = Ложь;\t\t\n\t\t\tИначе  \n\t\t\t\tНовыйУИД = Новый УникальныйИдентификатор();\n\t\t\t\tСсылка = Справочники[ИмяСправочника].ПолучитьСсылку(НовыйУИД);  \n\t\t\t\tЗаписатьВИдентификаторОбмена(Ссылка, Данные.id);\n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\n\tКонецЕсли;\t\n\t\n\tЕсли ЭтоНовый Тогда    \n\t\t\n\t\t// Если передается признак группы \n\t\t//\tи его значение Истина то создаем группу   \n\t\tЕсли ЕстьСвойствоGroup\n\t\t\tИ Данные.isGroup Тогда \n\t\t\t\n\t\t\tОбъект = Справочники[ИмяСправочника].СоздатьГруппу();   \t\t\n\t\tИначе\t\n\t\t\tОбъект = Справочники[ИмяСправочника].СоздатьЭлемент();   \n\t\tКонецЕсли;\n\t\t\n\t\tЕсли ЕстьСвойствоCode\n\t\t\tИ ЗначениеЗаполнено(Данные.code) И НЕ \n\t\t\t(СправочникТип = Тип(\"СправочникСсылка.усНоменклатура\") ИЛИ СправочникТип = Тип(\"СправочникСсылка.усКонтрагенты\")) Тогда \n\t\t\tОбъект.Код = СокрЛП(Данные.code);  \t\t\n\t\tИначе\n\t\t\tОбъект.УстановитьНовыйКод();\n\t\tКонецЕсли;\n\t\t\n\t\tОбъект.УстановитьСсылкуНового(Ссылка);  \n\tИначе\n\t\tОбъект = Ссылка.ПолучитьОбъект();\n\tКонецЕсли;\t\n\n\tОбъект.Наименование = Данные.name;\n\tЕсли Данные.Свойство(\"isMarked\") Тогда \n\t\tОбъект.ПометкаУдаления = Данные.isMarked; \n\tКонецЕсли;\n\t\n\tВозврат Объект;\n\t\nКонецФункции\t\n\n// Метод производит поиск по Guid или создает новый объект документа \n//\tи заполняет его \"Общими\" данными (Номер, Дата, Проведен, ПометкаУдаления [ЭтоГруппа]).\n//\n// Параметры:\n//  ИмяДокумента\t - Строка - Имя документа (Пример \"усОжидаемаяПриемка\") \n//  Данные   \t\t - Структура - с полями Id, Name, isMarked [, isGroup]\n//  ЭтоНовый         - Булево \n// \n// Возвращаемое значение:\n//  ДокументОбъект - Созданный по Guid или полученный из БД объект с заполненными свойствами\n//\nФункция ДокументыИнициализироватьОбъект(ИмяДокумента, Данные, ЭтоНовый) Экспорт \n\t\t\n\tДокументТип = СтрШаблон(\"ДокументСсылка.%1\", ИмяДокумента);\n\tДокументТип = Тип(ДокументТип);\n\t\n\tСсылка = Документы[ИмяДокумента].ПолучитьСсылку(Новый УникальныйИдентификатор(Данные.id));\n\tЭтоНовый = Не ОбщегоНазначения.СсылкаСуществует(Ссылка); \n\t\t\t\n\tЕсли ЭтоНовый Тогда  \n\t\tОбъект = Документы[ИмяДокумента].СоздатьДокумент();   \t\t\n\t\tОбъект.УстановитьСсылкуНового(Ссылка);\n\t\tОбъект.УстановитьНовыйНомер();\n\t\tОбъект.Дата = ТекущаяДата();   \n\t\tЕсли ДокументТип = Тип(\"ДокументСсылка.усОжидаемаяПриемка\") Тогда \n\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"Статус\",        Перечисления.усСтатусыОжидаемыхПриемок.НеЗагружена);\n\t\tИначеЕсли ДокументТип = Тип(\"ДокументСсылка.усЗаказНаОтгрузку\") Тогда \n\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"Статус\",        Перечисления.усСтатусыЗаказовНаОтгрузку.НеЗагружен);\t\n\t\tКонецЕсли;\n\tИначе       \n\t\tОбъект = Ссылка.ПолучитьОбъект(); \n\t\tЕсли ДокументТип = Тип(\"ДокументСсылка.усОжидаемаяПриемка\") Тогда \n\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"Статус\",         Документы.усОжидаемаяПриемка.Статус(Ссылка));\n\t\tИначеЕсли ДокументТип = Тип(\"ДокументСсылка.усЗаказНаОтгрузку\") Тогда \n\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"Статус\",        Документы.усЗаказНаОтгрузку.Статус(Ссылка));\t\n\t\tКонецЕсли;\n\tКонецЕсли;\t\n\t \n\tОбъект.ДатаКИС = ПрочитатьДатуJSON(Данные.date, ФорматДатыJSON.ISO);\n\tОбъект.НомерКИС = Данные.number;\n\t\n\tОбъект.ПометкаУдаления = Данные.isMarked; \n\t\n\tВозврат Объект;\n\t\nКонецФункции\t\n\n// Метод производит запись произвольного объекта справочника\n// При этом если объект не помечен на удаление выполняется стандартная проверка заполнения  \nПроцедура СправочникОбъектЗаписать(Объект, СообщениеОбмена, КонтекстОтветногоСообщения, МассивОшибок) Экспорт \n\t\n\tОбъектМетаданные = Объект.Метаданные();\n\tСтруктураОшибок = Новый Структура(\"code, description\", \"ProcessingError\", \"\"); \n\tКритичнаяОшибка = Ложь;\n\tТекстСообщения = \"\";\n\n\t\t\n\t// При создании нового объекта мы можем указать уникальный идентификатор в качестве новой ссылки\n\t// Но в модуле объекта перед записью или в подписках она может быть подменена (без проверки)  \n\t// Для нас это критично.\n\t// По этому проверяем на то что ссылка установленная до записи совпадала с таковой после записи\n\tСсылка = ПолучитьСсылкуСУчетомСсылкиНового(Объект);\n\t\n\t//Для справочников проверку заполнения не выполняем\n\t//Если Не Объект.ПометкаУдаления\n\t//\tИ Не Объект.ПроверитьЗаполнение() Тогда   \n\t//\t\n\t//\tТекстСообщения = НСтр(\"ru = 'Ошибка заполнения справочника %1 %2'\");\n\t//\tТекстСообщения = СтрШаблон(ТекстСообщения, ОбъектМетаданные, Объект);\n\t//\t\n\t//\tСтруктураОшибок.description = ТекстСообщения;\n\t//\tмсвОшибок.Добавить(СтруктураОшибок);\n\t//КонецЕсли;\n\t\n\tОбъект.ОбменДанными.Загрузка = Истина;\n\tОбъект.ДополнительныеСвойства.Вставить(\"Бюро1440_НеОтправлятьRMQ\"); \n\tПопытка\n\t\tОбъект.Записать();\n\tИсключение  \n\t\t\n\t\tТекстСообщения = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());  \n\t\t\n\t\tСтруктураОшибок.description = ТекстСообщения;\t\n\t\t\n\t\tМассивОшибок.Добавить(СтруктураОшибок);\n\n\t\tКритичнаяОшибка = Истина;\n\tКонецПопытки;\n\t\n\tЕсли Ссылка <> Объект.Ссылка Тогда //??????  \n\t\tТекстСообщения = НСтр(\"ru = 'В процессе записи объекта установленная ссылка (по ID) \" +\n\t\t\t\"была изменена логикой \"\"ПередЗаписью\"\" модуля объекта либо подписками'\");   \n\t\tСтруктураОшибок.description = ТекстСообщения;\t\n\t\t\n\t\tМассивОшибок.Добавить(СтруктураОшибок);\n\t\tКритичнаяОшибка = Истина;\n\tКонецЕсли;\t\n\t\n\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(МассивОшибок, КритичнаяОшибка);\n\t\t\nКонецПроцедуры  \n\n// Метод производит записть произвольного объекта документа\n// При этом если объект проводится то выполняется стандартная проверка заполнения \n// Метод так-же генерирует ошибку в общий механизм ошибок с привязкой к метаданным и данным (по возможности)  \n// В методе используется доп. свойство \"КР_ЗаписатьБезПроведения\" \n//\tЛогика использования: если мы знаем о существовании ошибки, которая нам не даст провести документ,\n//\t но нам его надо обязательно записать, то в допсвойства объекта надо добавить свойство \"КР_ЗаписатьБезПроведения\"\n//   без значения\n//\n// Параметры:\n//  Объект\t\t\t\t\t\t - ДокументОбъект - Объект документа произвольного типа\n//  СообщениеОбмена\t\t\t\t - Структура - СообщениеОбмена механизма Rabbit\n//  СвойствоОбъектБылЗагружен\t - Строка - имя дополнительного свойства которое будет помещено в допсвойства объекта\n//\t\t\t\t\t\t\t\t   Должно совпадать с тем, что проверяем перед выгрузкой чтоб не допустить зацикливания \t\n// \n// Возвращаемое значение:\n//  Булево - Успех записи объекта\n//\nФункция ДокументОбъектЗаписать(Объект, СообщениеОбмена, КонтекстОтветногоСообщения, МассивОшибок, ЕстьБитыеСсылки) Экспорт \n\n\tОбъектМетаданные = Объект.Метаданные();\n\tСтруктураОшибок = Новый Структура(\"code, description\", \"ProcessingError\", \"\");\n\tОбъект.ОбменДанными.Загрузка = Ложь; \n\tЕстьСвойствоstatus = СообщениеОбмена.Свойство(\"status\");\n\tЕстьСвойствоoperation = СообщениеОбмена.Свойство(\"operation\");\n\tРежимЗаписи = РежимЗаписиДокумента.Проведение; \n\tКритичнаяОшибка = Ложь;\n\tТекстСообщения = \"\";\n\t\n\tОбъект.ДополнительныеСвойства.Вставить(\"Бюро1440_НеОтправлятьRMQ\");\n\n\t// При создании нового объекта мы можем указать уникальный идентификатор в качестве новой ссылки\n\t// Но в модуле объекта перед записью или в подписках она может быть подменена (без проверки)  \n\t// Для нас это критично.\n\t// По этому проверяем на то что ссылка установленная до записи совпадала с таковой после записи\n\tСсылка = ПолучитьСсылкуСУчетомСсылкиНового(Объект);\n\t  \n\tЕстьОшибки = Ложь;\n\t\n\tЕсли Объект.Проведен\n\t\tИ Не Объект.ПроверитьЗаполнение() Тогда    \n\t\t\n\t\tТекстСообщения = НСтр(\"ru = 'Ошибка проверки заполнения документа %1'\");   \n\t\tТекстСообщения = СтрШаблон(ТекстСообщения, Объект); \n\t\t\n\t\tЕстьОшибки = Истина;\n\t\t\t\t\n\tКонецЕсли;   \n\t\n\tЕсли ТипЗнч(Объект) = Тип(\"ДокументОбъект.усОжидаемаяПриемка\") Тогда\n\t\tЕсли Объект.ДополнительныеСвойства.Статус = Перечисления.усСтатусыОжидаемыхПриемок.НеЗагружена \n\t\t\tИЛИ Объект.ДополнительныеСвойства.Статус = Перечисления.усСтатусыОжидаемыхПриемок.Новая\n\t\t\tИЛИ Объект.ДополнительныеСвойства.Статус = Перечисления.усСтатусыОжидаемыхПриемок.Отменена Тогда\n\t\t\tЕсли НЕ ЕстьБитыеСсылки Тогда \n\t\t\t\tЕсли НЕ ЕстьОшибки Тогда\n\t\t\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"Статус\", Перечисления.усСтатусыОжидаемыхПриемок.КВыполнению);\n\t\t\t\t\tРежимЗаписи = РежимЗаписиДокумента.Проведение;\n\t\t\t\t\tЕсли ЕстьСвойствоoperation И СообщениеОбмена.operation <> 1 Тогда \n\t\t\t\t\t\tЕсли ЕстьСвойствоstatus Тогда  \n\t\t\t\t\t\t\tЕсли СообщениеОбмена.status = 0 Тогда\n\t\t\t\t\t\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"Статус\", Перечисления.усСтатусыОжидаемыхПриемок.Новая);\t\n\t\t\t\t\t\t\t//ИначеЕсли СообщениеОбмена.status = 1 Тогда  //К выполнению\t\n\t\t\t\t\t\t\tКонецЕсли;\t\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\tКонецЕсли;\n\t\t\t\tИначе\n\t\t\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"Статус\", Перечисления.усСтатусыОжидаемыхПриемок.Новая); \n\t\t\t\t\tРежимЗаписи = РежимЗаписиДокумента.Запись; \n\t\t\t\tКонецЕсли;\n\t\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"СтатусИзменен\", Истина);\n\t\t\tИначе\n\t\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"Статус\", Перечисления.усСтатусыОжидаемыхПриемок.НеЗагружена); \n\t\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"СтатусИзменен\", Истина);  \n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\n\tИначеЕсли ТипЗнч(Объект) = Тип(\"ДокументОбъект.усЗаказНаОтгрузку\") Тогда \n\t\t//++Крутских Ситек 27.01.25++\n\t\tСтатусНовый = Ложь;\n\t\t//--Крутских Ситек 27.01.25++\n\t\t\n\t\tЕсли Объект.ДополнительныеСвойства.Статус = Перечисления.усСтатусыЗаказовНаОтгрузку.НеЗагружен \n\t\t\tИЛИ Объект.ДополнительныеСвойства.Статус = Перечисления.усСтатусыЗаказовНаОтгрузку.Отменен Тогда \n\t\t\tЕсли Не ЕстьБитыеСсылки Тогда \n\t\t\t\tЕсли НЕ ЕстьОшибки Тогда\n\t\t\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"Статус\", Перечисления.усСтатусыЗаказовНаОтгрузку.Новый);\n\t\t\t\t\tОбъект.ОбменДанными.Загрузка = Ложь;\n\t\t\t\t\tРежимЗаписи = РежимЗаписиДокумента.Проведение;\n\t\t\t\tИначе\n\t\t\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"Статус\", Перечисления.усСтатусыЗаказовНаОтгрузку.Новый); \n\t\t\t\t\tРежимЗаписи = РежимЗаписиДокумента.Запись;\n\t\t\t\tКонецЕсли;\n\t\t\t\t//++Крутских Ситек 27.01.25++\n\t\t\t\tСтатусНовый = Истина;\n\t\t\t\t//--Крутских Ситек 27.01.25++\n\t\t\tИначе \n\t\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"Статус\", Перечисления.усСтатусыЗаказовНаОтгрузку.НеЗагружен);\n\t\t\t\tРежимЗаписи = РежимЗаписиДокумента.Запись;\t\t\t\n\t\t\tКонецЕсли;\n\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"СтатусИзменен\", Истина); \n\t\tКонецЕсли;                                                           \n\t\t//++Крутских Ситек 16.01.25++\n\t\tЕсли НЕ Объект.ЭтоНовый() И Не СтатусНовый Тогда\n\t\t\tОбъект.Бюро1440_ПризнакКорректировкиОбменом = Истина;\n\t\tКонецЕсли;\n\tИначеЕсли ТипЗнч(Объект) = Тип(\"ДокументОбъект.усСтрокаЗаказаНаОтгрузку\") Тогда\n\t\tОбъект.ДополнительныеСвойства.Вставить(\"НеОтправлятьУведомление\", Истина);\n\t\t//++Крутских Ситек 16.01.25++\n\tКонецЕсли;\n\t\n\tЕсли Объект.ПометкаУдаления Тогда \n\t\tЕсли ТипЗнч(Объект) = Тип(\"ДокументОбъект.усОжидаемаяПриемка\") Тогда \n\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"Статус\",        Перечисления.усСтатусыОжидаемыхПриемок.Отменена);\n\t\tИначеЕсли ТипЗнч(Объект) = Тип(\"ДокументОбъект.усЗаказНаОтгрузку\") Тогда \n\t\t\tОбъект.ДополнительныеСвойства.Вставить(\"Статус\",        Перечисления.усСтатусыЗаказовНаОтгрузку.Отменен);\t\n\t\tКонецЕсли;\n\t\tОбъект.ДополнительныеСвойства.Вставить(\"СтатусИзменен\", Истина);\n\t\tЕсли Объект.Проведен Тогда\n\t\t\tРежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения;\n\t\tИначе\n\t\t\tРежимЗаписи = РежимЗаписиДокумента.Запись;\n\t\tКонецЕсли;\t\n\tКонецЕсли;    \n\t\t\n\tПопытка\n\t\tОбъект.Записать(РежимЗаписи); \t\t\n\tИсключение\t\t\n\t\t\n\t\t// Если это новый документ или не был проведен ранее то просто записыываем его\n\t\tЕсли Объект.ЭтоНовый() \n\t\t\tИли Не Объект.Ссылка.Проведен Тогда \n\t\t\t\n\t\t\tОбъект.ОбменДанными.Загрузка = Истина;\n\t\t\tОбъект.Проведен = Ложь;\n\t\t\tОбъект.Записать(РежимЗаписиДокумента.Запись);  \n\t\t\t\n\t\t\tТекстСообщения = НСтр(\"ru = 'Ошибка проведения документа %1\n\t\t\t|По причине: %2\n\t\t\t|ДОКУМЕНТ ЗАПИСАН В (РЕЖИМЕ ЗАПИСИ БЕЗ ПРОВЕДЕНИЯ)'\");\n\n\t\t\t\n\t\tИначе        \n\t\t\t\n\t\t\tТекстСообщения = НСтр(\"ru = 'Ошибка проведения документа %1\n\t\t\t|По причине: %2\n\t\t\t|ДОКУМЕНТ НЕ БЫЛ ИЗМЕНЕН'\");\n\t\t\t\t\t\t\n\t\tКонецЕсли;  \n\n\t\t\n\t\tТекстСообщения = СтрШаблон(ТекстСообщения, Объект, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));  \n\t\t\n\t\tСтруктураОшибок.description = ТекстСообщения;\t\n\t\t\n\t\tМассивОшибок.Добавить(СтруктураОшибок);\n\t\t\n\t\tКритичнаяОшибка = Истина;\n\t\t\n\tКонецПопытки; \n\t\n\tЕсли Ссылка <> Объект.Ссылка Тогда//?????? \n\t\tТекстСообщения = НСтр(\"ru = 'В процессе записи объекта установленная ссылка (по ID) \" +\n\t\t\"была изменена логикой \"\"ПередЗаписью\"\" модуля объекта либо подписками'\");   \n\t\tСтруктураОшибок.description = ТекстСообщения;\t\n\t\t\n\t\tМассивОшибок.Добавить(СтруктураОшибок);\n\t\tКритичнаяОшибка = Истина;\n\tКонецЕсли;\t\n\t\t\t\n\tКонтекстОтветногоСообщения = ПолучитьСтруктуруОтветногоСообщения(МассивОшибок, КритичнаяОшибка);\n\t\nКонецФункции\n\n#КонецОбласти  \n\n#Область ВыгрузкаДанных\n\nФункция ПолучитьДанныеОжидаемойПриемки(Объект)  \n\t\t\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст =\n\t\"ВЫБРАТЬ\n\t|    усОжидаемаяПриемка.Ссылка КАК Ссылка,\n\t|    усОжидаемаяПриемка.ПометкаУдаления КАК ПометкаУдаления,\n\t|    УНИКАЛЬНЫЙИДЕНТИФИКАТОР(усОжидаемаяПриемка.Ссылка) КАК УИД,\n\t|    усОжидаемаяПриемка.Дата КАК Дата,\n\t|    усОжидаемаяПриемка.Номер КАК Номер,\n\t|    усОжидаемаяПриемка.ИсточникПоступления КАК ИсточникПоступления,\n\t|    усОжидаемаяПриемка.Контрагент КАК Контрагент,\n\t|\t усОжидаемаяПриемка.Поклажедатель КАК Поклажедатель, \n\t|\t усОжидаемаяПриемка.Организация КАК Организация,\n\t|    УНИКАЛЬНЫЙИДЕНТИФИКАТОР(усОжидаемаяПриемка.Контрагент) КАК УИДКонтрагент,\n\t|    УНИКАЛЬНЫЙИДЕНТИФИКАТОР(усОжидаемаяПриемка.Поклажедатель) КАК УИДПоклажедатель,\n\t|    УНИКАЛЬНЫЙИДЕНТИФИКАТОР(усОжидаемаяПриемка.Организация) КАК УИДОрганизация,\n\t|    усОжидаемаяПриемка.Комментарий КАК Комментарий,\n\t|    усСтатусыОжидаемыхПриемок.ДатаПринята КАК ОкончаниеПриемки\n\t|ПОМЕСТИТЬ втПриемки\n\t|ИЗ\n\t|    Документ.усОжидаемаяПриемка КАК усОжидаемаяПриемка\n\t|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.усСтатусыОжидаемыхПриемок КАК усСтатусыОжидаемыхПриемок\n\t|        ПО (усОжидаемаяПриемка.Ссылка = усСтатусыОжидаемыхПриемок.ОжидаемаяПриемка)\n\t|ГДЕ\n\t|    (усСтатусыОжидаемыхПриемок.Статус = ЗНАЧЕНИЕ(Перечисление.усСтатусыОжидаемыхПриемок.Принята)\n\t|            ИЛИ усСтатусыОжидаемыхПриемок.Статус = ЗНАЧЕНИЕ(Перечисление.усСтатусыОжидаемыхПриемок.Проконтролирована)\n\t|            ИЛИ усСтатусыОжидаемыхПриемок.Статус = ЗНАЧЕНИЕ(Перечисление.усСтатусыОжидаемыхПриемок.Промаркирована)\n\t|            ИЛИ усСтатусыОжидаемыхПриемок.Статус = ЗНАЧЕНИЕ(Перечисление.усСтатусыОжидаемыхПриемок.Завершена))\n\t|    И усОжидаемаяПриемка.Ссылка = &ОбъектОтбора\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втПриемки.Ссылка КАК Ссылка,\n\t|    ЕСТЬNULL(Бюро1440_ИдентификаторыОбменаОбмена.Идентификатор, втПриемки.УИД) КАК УИДДокумента, \n\t|    втПриемки.ПометкаУдаления КАК IsMarked,\n\t|    втПриемки.ОкончаниеПриемки КАК Date,\n\t|    втПриемки.Номер КАК Number,\n\t|    ВЫБОР\n\t|        КОГДА втПриемки.ИсточникПоступления = ЗНАЧЕНИЕ(Справочник.усИсточникиПоступления.ПриемкаСоСклада)\n\t|            ТОГДА \"\"ПриемкаСоСклада\"\"\n\t|        КОГДА втПриемки.ИсточникПоступления = ЗНАЧЕНИЕ(Справочник.усИсточникиПоступления.ПриемкаОтПоставщика)\n\t|            ТОГДА \"\"ПриемкаОтПоставщика\"\"\n\t|        КОГДА втПриемки.ИсточникПоступления = ЗНАЧЕНИЕ(Справочник.усИсточникиПоступления.ВозвратОтКлиента)\n\t|            ТОГДА \"\"ВозвратОтКлиента\"\"\n\t|        ИНАЧЕ ПРЕДСТАВЛЕНИЕ(втПриемки.ИсточникПоступления)\n\t|    КОНЕЦ КАК OrderSource,\n\t|    втПриемки.Комментарий КАК Description,\n\t|    ЕСТЬNULL(Бюро1440_ИдентификаторыОбменаОбменаКонтрагент.Идентификатор, втПриемки.УИДКонтрагент) КАК УИДКонтрагента,\n\t|    ЕСТЬNULL(Бюро1440_ИдентификаторыОбменаОбменаПоклажедатель.Идентификатор, втПриемки.УИДПоклажедатель) КАК УИДПоклажедатель,\n\t|    ЕСТЬNULL(Бюро1440_ИдентификаторыОбменаОбменаОрганизация.Идентификатор, втПриемки.УИДОрганизация) КАК УИДОрганизация,\n\t|    втПриемки.ОкончаниеПриемки КАК DateParish\n\t|ИЗ\n\t|    втПриемки КАК втПриемки \n\t|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаОбмена\n\t|        ПО втПриемки.Ссылка = Бюро1440_ИдентификаторыОбменаОбмена.Объект\n\t|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаОбменаКонтрагент\n\t|        ПО втПриемки.Контрагент = Бюро1440_ИдентификаторыОбменаОбменаКонтрагент.Объект\n\t|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаОбменаПоклажедатель\n\t|        ПО втПриемки.Поклажедатель = Бюро1440_ИдентификаторыОбменаОбменаПоклажедатель.Объект\n\t|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаОбменаОрганизация\n\t|        ПО втПриемки.Организация = Бюро1440_ИдентификаторыОбменаОбменаОрганизация.Объект\n\t|\n\t|УПОРЯДОЧИТЬ ПО\n\t|    Ссылка\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втПриемки.Ссылка КАК ОжидаемаяПриемка\n\t|ПОМЕСТИТЬ втОжидаемыеПриемки\n\t|ИЗ\n\t|    втПриемки КАК втПриемки\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|    втПриемки.Ссылка\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|    ОжидаемаяПриемка \t\n\t|;  \n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусСтрокаПриемки.Ссылка КАК Ссылка\n\t|ПОМЕСТИТЬ втСтрокиПриемки\n\t|ИЗ\n\t|\tДокумент.усСтрокаПриемки КАК усСтрокаПриемки\n\t|ГДЕ\n\t|\tусСтрокаПриемки.ОжидаемаяПриемка В\n\t|\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\tвтОжидаемыеПриемки.ОжидаемаяПриемка\n\t|\t\t\tИЗ\n\t|\t\t\t\tвтОжидаемыеПриемки)\n\t|\tИ усСтрокаПриемки.Проведен\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|\tСсылка\n\t|;\n\t|\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    усКонтрольПриемки.ОжидаемаяПриемка КАК ОжидаемаяПриемка,\n\t|    усКонтрольПриемки.НомерКонтейнера КАК НомерКонтейнера,\n\t|    усКонтрольПриемки.Номенклатура КАК Номенклатура,\n\t|    усКонтрольПриемки.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|    усКонтрольПриемки.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|    СУММА(-усКонтрольПриемки.КоличествоПринято) КАК Количество\n\t|ИЗ\n\t|    втОжидаемыеПриемки КАК втОжидаемыеПриемки\n\t|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.усКонтрольПриемки КАК усКонтрольПриемки\n\t|        ПО втОжидаемыеПриемки.ОжидаемаяПриемка = усКонтрольПриемки.ОжидаемаяПриемка\n\t|ГДЕ\n\t|    усКонтрольПриемки.КоличествоПринято < 0\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|    усКонтрольПриемки.ОжидаемаяПриемка,\n\t|    усКонтрольПриемки.Номенклатура,\n\t|    усКонтрольПриемки.СтатусНоменклатуры,\n\t|    усКонтрольПриемки.ПартияНоменклатуры,\n\t|    усКонтрольПриемки.НомерКонтейнера\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    усКонтрольПриемки.ОжидаемаяПриемка КАК ОжидаемаяПриемка,\n\t|    ВЫРАЗИТЬ(усКонтрольПриемки.Регистратор КАК Документ.усСтрокаПриемки).Владелец КАК Приемка,\n\t|    усКонтрольПриемки.НомерКонтейнера КАК НомерКонтейнера,\n\t|    усКонтрольПриемки.Номенклатура КАК Номенклатура,\n\t|    усКонтрольПриемки.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|    усКонтрольПриемки.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|    СУММА(усКонтрольПриемки.КоличествоПринято) КАК Количество\n\t|ИЗ\n\t|    втОжидаемыеПриемки КАК втОжидаемыеПриемки\n\t|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.усКонтрольПриемки КАК усКонтрольПриемки\n\t|        ПО втОжидаемыеПриемки.ОжидаемаяПриемка = усКонтрольПриемки.ОжидаемаяПриемка\n\t|ГДЕ\n\t|    усКонтрольПриемки.КоличествоПринято > 0\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|    усКонтрольПриемки.ОжидаемаяПриемка,\n\t|    ВЫРАЗИТЬ(усКонтрольПриемки.Регистратор КАК Документ.усСтрокаПриемки).Владелец,\n\t|    усКонтрольПриемки.Номенклатура,\n\t|    усКонтрольПриемки.СтатусНоменклатуры,\n\t|    усКонтрольПриемки.ПартияНоменклатуры,\n\t|    усКонтрольПриемки.НомерКонтейнера\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    усСтрокаОжидаемойПриемки.Владелец КАК ОжидаемаяПриемка,\n\t|    усСтрокаОжидаемойПриемки.ПланПриемки КАК ПланПриемки,\n\t|    усСтрокаОжидаемойПриемки.КодСтрокиКИС КАК КодСтрокиКИС,\n\t|    усСтрокаОжидаемойПриемки.СтавкаНДС КАК СтавкаНДС,\n\t|    усСтрокаОжидаемойПриемки.Номенклатура КАК Номенклатура,\n\t|    усСтрокаОжидаемойПриемки.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|    ЕСТЬNULL(усСтрокаОжидаемойПриемки.УпаковкаНоменклатуры.Коэффициент, 1) КАК Коэффициент,\n\t|    усСтрокаОжидаемойПриемки.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|    усСтрокаОжидаемойПриемки.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|    СУММА(усСтрокаОжидаемойПриемки.Количество) КАК Количество,\n\t|    СУММА(усСтрокаОжидаемойПриемки.КоличествоУпаковок) КАК КоличествоУпаковок,\n\t|    усСтрокаОжидаемойПриемки.Комплект КАК Комплект,\n\t|    усСтрокаОжидаемойПриемки.Спецификация КАК Спецификация\n\t|ИЗ\n\t|    втОжидаемыеПриемки КАК втОжидаемыеПриемки\n\t|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.усСтрокаОжидаемойПриемки КАК усСтрокаОжидаемойПриемки\n\t|        ПО втОжидаемыеПриемки.ОжидаемаяПриемка = усСтрокаОжидаемойПриемки.Владелец\n\t|ГДЕ\n\t|    усСтрокаОжидаемойПриемки.Проведен\n\t|    И усСтрокаОжидаемойПриемки.Количество <> 0\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|    усСтрокаОжидаемойПриемки.Владелец,\n\t|    усСтрокаОжидаемойПриемки.ПланПриемки,\n\t|    усСтрокаОжидаемойПриемки.КодСтрокиКИС,\n\t|    усСтрокаОжидаемойПриемки.СтавкаНДС,\n\t|    усСтрокаОжидаемойПриемки.Номенклатура,\n\t|    усСтрокаОжидаемойПриемки.УпаковкаНоменклатуры,\n\t|    усСтрокаОжидаемойПриемки.СтатусНоменклатуры,\n\t|    усСтрокаОжидаемойПриемки.ПартияНоменклатуры,\n\t|    ЕСТЬNULL(усСтрокаОжидаемойПриемки.УпаковкаНоменклатуры.Коэффициент, 1),\n\t|    усСтрокаОжидаемойПриемки.Комплект,\n\t|    усСтрокаОжидаемойПриемки.Спецификация\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    усОжидаемаяПриемка.Ссылка КАК ОжидаемаяПриемка,\n\t|    усИдентификаторыОбмена.Идентификатор КАК ID,\n\t|    усСтатусыОжидаемыхПриемок.Статус.Порядок КАК ИндексСтатуса\n\t|ИЗ\n\t|    Документ.усОжидаемаяПриемка КАК усОжидаемаяПриемка\n\t|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.усСтатусыОжидаемыхПриемок КАК усСтатусыОжидаемыхПриемок\n\t|        ПО усОжидаемаяПриемка.Ссылка = усСтатусыОжидаемыхПриемок.ОжидаемаяПриемка\n\t|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.усИдентификаторыОбмена КАК усИдентификаторыОбмена\n\t|        ПО усОжидаемаяПриемка.Ссылка = усИдентификаторыОбмена.Объект\n\t|ГДЕ\n\t|    усСтатусыОжидаемыхПриемок.Статус В (ЗНАЧЕНИЕ(Перечисление.усСтатусыОжидаемыхПриемок.Принята), ЗНАЧЕНИЕ(Перечисление.усСтатусыОжидаемыхПриемок.Проконтролирована), ЗНАЧЕНИЕ(Перечисление.усСтатусыОжидаемыхПриемок.Промаркирована), ЗНАЧЕНИЕ(Перечисление.усСтатусыОжидаемыхПриемок.Завершена), ЗНАЧЕНИЕ(Перечисление.усСтатусыОжидаемыхПриемок.Отменена))\n\t|    И усОжидаемаяПриемка.Ссылка = &ОбъектОтбора\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусПоложениеОбъектовЦМТ.Объект КАК Объект,\n\t|\tВЫРАЗИТЬ(усПоложениеОбъектовЦМТ.Регистратор КАК Документ.усСтрокаПриемки).ОжидаемаяПриемка КАК ОжидаемаяПриемка,\n\t|\tусПоложениеОбъектовЦМТ.Объект.ШтрихкодКИЗ КАК ШтрихкодКИЗ,\n\t|\t1 КАК Количество,\n\t|\tВЫРАЗИТЬ(усПоложениеОбъектовЦМТ.Регистратор КАК Документ.усСтрокаПриемки).Номенклатура КАК Номенклатура,\n\t|\tВЫРАЗИТЬ(усПоложениеОбъектовЦМТ.Регистратор КАК Документ.усСтрокаПриемки).Ссылка КАК Регистратор,\n\t|\tВЫРАЗИТЬ(усПоложениеОбъектовЦМТ.Регистратор КАК Документ.усСтрокаПриемки).СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tВЫРАЗИТЬ(усПоложениеОбъектовЦМТ.Регистратор КАК Документ.усСтрокаПриемки).ПартияНоменклатуры КАК ПартияНоменклатуры\n\t|ИЗ\n\t|\tРегистрНакопления.усПоложениеОбъектовЦМТ КАК усПоложениеОбъектовЦМТ\n\t|ГДЕ\n\t|\tусПоложениеОбъектовЦМТ.Регистратор ССЫЛКА Документ.усСтрокаПриемки\n\t|\tИ усПоложениеОбъектовЦМТ.Регистратор В\n\t|\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\tвтСтрокиПриемки.Ссылка\n\t|\t\t\tИЗ\n\t|\t\t\t\tвтСтрокиПриемки)\";\t\n\tЗапрос.УстановитьПараметр(\"ОбъектОтбора\", Объект);\t\t\t\t\n\t\n\tРезультат = Запрос.ВыполнитьПакет();\n\tВыборка   = Результат[1].Выбрать();\n\tтзВозврат = Результат[4].Выгрузить();\n\tтзФакт    = Результат[5].Выгрузить();\n\tтзПлан    = Результат[6].Выгрузить();\n\tтзСтатус  = Результат[7].Выбрать();\n\tтзКодыЦМТ = Результат[8].Выгрузить();\n\t\n\tТаблицаРезультат = тзПлан.СкопироватьКолонки();\n\tТаблицаРезультат.Колонки.Добавить(\"Приемка\", Новый ОписаниеТипов(\"ДокументСсылка.усПриемка\"));\n\tТаблицаРезультат.Колонки.Добавить(\"ШтрихкодКИЗ\", Новый ОписаниеТипов(\"Строка\"));\n\t\n\tтзФактСКодамиЦМТ = тзФакт.СкопироватьКолонки();\n\tтзФактСКодамиЦМТ.Колонки.Добавить(\"ШтрихкодКИЗ\", Новый ОписаниеТипов(\"Строка\")); \n\n\t//Разобъем тзФакт на коды ЦМТ \n\tмсвСтруктурПоиска = Новый Массив;\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ОжидаемаяПриемка, Номенклатура, СтатусНоменклатуры, ПартияНоменклатуры\"));\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ОжидаемаяПриемка, Номенклатура, СтатусНоменклатуры\"));\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ОжидаемаяПриемка, Номенклатура\"));\n\t\n\tДля каждого текСтрокаФакт Из тзФакт Цикл\n\t\tЕсли ЗначениеЗаполнено(текСтрокаФакт.ПартияНоменклатуры) И текСтрокаФакт.ПартияНоменклатуры.ВестиУчетПоКодамЦМТ Тогда \n\t\t\tДля Каждого текСтруктураПоиска Из мсвСтруктурПоиска Цикл \n\t\t\t\tЗаполнитьЗначенияСвойств(текСтруктураПоиска, текСтрокаФакт);\n\t\t\t\t\n\t\t\t\tмсвСтрок = тзКодыЦМТ.НайтиСтроки(текСтруктураПоиска);\n\t\t\t\tЕсли мсвСтрок.Количество() Тогда\n\t\t\t\t\tДля Каждого текСтрокаЦМТ Из мсвСтрок Цикл \n\t\t\t\t\t\tтекКоличество = Мин(текСтрокаЦМТ.Количество, текСтрокаФакт.Количество);\n\t\t\t\t\t\tЕсли текКоличество Тогда \n\t\t\t\t\t\t\tНоваяСтрока = тзФактСКодамиЦМТ.Добавить();\n\t\t\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\t\t\tНоваяСтрока.Количество           = 1;\n\t\t\t\t\t\t\tНоваяСтрока.ШтрихкодКИЗ\t\t\t = текСтрокаЦМТ.ШтрихкодКИЗ;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tтекСтрокаЦМТ.Количество = текСтрокаЦМТ.Количество - текКоличество;\n\t\t\t\t\t\t\tтекСтрокаФакт.Количество = текСтрокаФакт.Количество - текКоличество;\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\t\t\n\t\t\t\t\t\tЕсли текСтрокаФакт.Количество <= 0 Тогда\n\t\t\t\t\t\t\tПрервать;\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\tКонецЦикла;\n\t\t\t\t\t\n\t\t\t\t\tЕсли текСтрокаФакт.Количество > 0 Тогда \n\t\t\t\t\t\tНоваяСтрока = тзФактСКодамиЦМТ.Добавить();\n\t\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\t\tНоваяСтрока.Количество           = текСтрокаФакт.Количество;\n\t\t\t\t\t\t\n\t\t\t\t\t\tтекСтрокаФакт.Количество = 0;\n\t\t\t\t\tКонецЕсли;\t\n\t\t\t\t\t\n\t\t\t\t\tПрервать;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЦикла;\t\t\n\t\t\t\n\t\t\tЕсли текСтрокаФакт.Количество > 0 Тогда \n\t\t\t\tНоваяСтрока = тзФактСКодамиЦМТ.Добавить();\n\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\n\t\t\t\tтекСтрокаФакт.Количество = 0;\n\t\t\tКонецЕсли;\t\n\t\tИначе \n\t\t\tНовСтр = тзФактСКодамиЦМТ.Добавить();\n\t\t\tЗаполнитьЗначенияСвойств(НовСтр, текСтрокаФакт);\n\t\tКонецЕсли;   \t\n\tКонецЦикла; \n\t\t\n\tтзФакт = тзФактСКодамиЦМТ.Скопировать();\n\t\n\t// распределить возврат на факт\n\tмсвСтруктурПоиска = Новый Массив;\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ОжидаемаяПриемка, Номенклатура, СтатусНоменклатуры, ПартияНоменклатуры, НомерКонтейнера\"));\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ОжидаемаяПриемка, Номенклатура, СтатусНоменклатуры, ПартияНоменклатуры\"));\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ОжидаемаяПриемка, Номенклатура, СтатусНоменклатуры\"));\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ОжидаемаяПриемка, Номенклатура\"));\n\t\n\tДля Каждого текСтрокаВозврат Из тзВозврат Цикл\n\t\tДля Каждого текСтруктураПоиска Из мсвСтруктурПоиска Цикл \n\t\t\tЗаполнитьЗначенияСвойств(текСтруктураПоиска, текСтрокаВозврат);\n\t\t\tмсвСтрок = тзФакт.НайтиСтроки(текСтруктураПоиска);\n\t\t\tЕсли мсвСтрок.Количество() Тогда\n\t\t\t\tДля Каждого текСтрокаФакт Из мсвСтрок Цикл \n\t\t\t\t\tтекКоличество = Мин(текСтрокаФакт.Количество, текСтрокаВозврат.Количество);\n\t\t\t\t\tЕсли текКоличество Тогда \n\t\t\t\t\t\tтекСтрокаФакт.Количество    = текСтрокаФакт.Количество - текКоличество;\n\t\t\t\t\t\tтекСтрокаВозврат.Количество = текСтрокаВозврат.Количество - текКоличество;\n\t\t\t\t\tКонецЕсли;\n\t\t\t\t\t\n\t\t\t\t\tЕсли текСтрокаВозврат.Количество <= 0 Тогда\n\t\t\t\t\t\tПрервать;\n\t\t\t\t\tКонецЕсли;\n\t\t\t\tКонецЦикла;\n\t\t\tКонецЕсли;\n\t\t\t\n\t\t\tЕсли текСтрокаВозврат.Количество <= 0 Тогда\n\t\t\t\tПрервать;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\tКонецЦикла;\n\t\n\t// распределить факт на план\n\tмсвСтруктурПоиска = Новый Массив;\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ОжидаемаяПриемка, Номенклатура, СтатусНоменклатуры, ПартияНоменклатуры\"));\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ОжидаемаяПриемка, Номенклатура, СтатусНоменклатуры\"));\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ОжидаемаяПриемка, Номенклатура\"));\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ОжидаемаяПриемка\"));\n\t\n\tДля каждого текСтрокаФакт Из тзФакт Цикл \n\t\tДля Каждого текСтруктураПоиска Из мсвСтруктурПоиска Цикл \n\t\t\tЗаполнитьЗначенияСвойств(текСтруктураПоиска, текСтрокаФакт);\n\t\t\t\n\t\t\tмсвСтрок = тзПлан.НайтиСтроки(текСтруктураПоиска);\n\t\t\tЕсли мсвСтрок.Количество() Тогда\n\t\t\t\tДля Каждого текСтрокаПлан Из мсвСтрок Цикл \n\t\t\t\t\tтекКоличество = Мин(текСтрокаПлан.Количество, текСтрокаФакт.Количество);\n\t\t\t\t\tЕсли текКоличество Тогда \n\t\t\t\t\t\tНоваяСтрока = ТаблицаРезультат.Добавить();\n\t\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\t\tНоваяСтрока.ПланПриемки          = текСтрокаПлан.ПланПриемки;   \n\t\t\t\t\t\tНоваяСтрока.КодСтрокиКИС         = текСтрокаПлан.КодСтрокиКИС;  \n\t\t\t\t\t\tНоваяСтрока.СтавкаНДС        \t = текСтрокаПлан.СтавкаНДС;  \n\t\t\t\t\t\tНоваяСтрока.УпаковкаНоменклатуры = текСтрокаПлан.УпаковкаНоменклатуры;\n\t\t\t\t\t\tНоваяСтрока.КоличествоУпаковок   = Окр(текКоличество/текСтрокаПлан.Коэффициент, 2);\n\t\t\t\t\t\tНоваяСтрока.Количество           = текКоличество;\n\t\t\t\t\t\t\n\t\t\t\t\t\tтекСтрокаПлан.Количество = текСтрокаПлан.Количество - текКоличество;\n\t\t\t\t\t\tтекСтрокаФакт.Количество = текСтрокаФакт.Количество - текКоличество;\n\t\t\t\t\tКонецЕсли;\n\t\t\t\t\t\n\t\t\t\t\tЕсли текСтрокаФакт.Количество <= 0 Тогда\n\t\t\t\t\t\tПрервать;\n\t\t\t\t\tКонецЕсли;\n\t\t\t\tКонецЦикла;\n\t\t\t\t\n\t\t\t\tЕсли текСтрокаФакт.Количество > 0 Тогда \n\t\t\t\t\tНоваяСтрока = ТаблицаРезультат.Добавить();\n\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\tНоваяСтрока.ПланПриемки          = мсвСтрок[0].ПланПриемки;\n\t\t\t\t\tНоваяСтрока.ПланПриемки          = мсвСтрок[0].ПланПриемки;  \n\t\t\t\t\tНоваяСтрока.КодСтрокиКИС         = мсвСтрок[0].КодСтрокиКИС;\n\t\t\t\t\tНоваяСтрока.УпаковкаНоменклатуры = мсвСтрок[0].УпаковкаНоменклатуры;\n\t\t\t\t\tНоваяСтрока.КоличествоУпаковок   = Окр(текСтрокаФакт.Количество/мсвСтрок[0].Коэффициент, 2);\n\t\t\t\t\tНоваяСтрока.Количество           = текСтрокаФакт.Количество;\n\t\t\t\t\t\n\t\t\t\t\tтекСтрокаФакт.Количество = 0;\n\t\t\t\tКонецЕсли;\t\n\t\t\t\t\n\t\t\t\tПрервать;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\t\t\n\t\t\n\t\tЕсли текСтрокаФакт.Количество > 0 Тогда \n\t\t\tНоваяСтрока = ТаблицаРезультат.Добавить();\n\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\t\n\t\t\tтекСтрокаФакт.Количество = 0;\n\t\tКонецЕсли;\t\n\tКонецЦикла;\n\t\n\t//\n\t//Если НЕ Узел.ВыгружатьПартию Тогда \n\tЕсли Истина Тогда\n\t\tТаблицаРезультат.Свернуть(\"ОжидаемаяПриемка, КодСтрокиКИС, СтавкаНДС, Номенклатура, УпаковкаНоменклатуры, СтатусНоменклатуры, ШтрихкодКИЗ\", \"КоличествоУпаковок, Количество\");\n\t\tТаблицаРезультат.Колонки.Добавить(\"ПартияНоменклатуры\", Новый ОписаниеТипов(\"СправочникСсылка.усПартииНоменклатуры\"));\n\tКонецЕсли;\n\t\n\t//Если Узел.РаскладыватьПоУпаковкам Тогда \n\tЕсли Ложь Тогда\n\t\tТаблицаРезультат.Свернуть(\"ОжидаемаяПриемка, КодСтрокиКИС, Номенклатура, СтатусНоменклатуры, ПартияНоменклатуры, ШтрихкодКИЗ\", \"Количество\");\n\t\tТаблицаРезультат = усУправлениеСкладомВызовСервера.РазложитьНаУпаковкиНоменклатуры(ТаблицаРезультат);\n\tИначе\n\t\tТаблицаРезультат.Свернуть(\"ОжидаемаяПриемка, КодСтрокиКИС, Номенклатура, УпаковкаНоменклатуры, СтатусНоменклатуры, ПартияНоменклатуры, ШтрихкодКИЗ\", \"КоличествоУпаковок, Количество\");\n\tКонецЕсли;\n\t\n\tЗапросТЧ = Новый Запрос;\n\tЗапросТЧ.Текст = \n\t\"ВЫБРАТЬ\n\t|\tтбРезультат.ОжидаемаяПриемка КАК ОжидаемаяПриемка,\n\t//|\tтбРезультат.Приемка КАК Приемка,\n\t//|\tтбРезультат.ПланПриемки КАК ПланПриемки,\n\t|\tтбРезультат.КодСтрокиКИС КАК КодСтрокиКИС,\n\t|\tтбРезультат.Номенклатура КАК Номенклатура,\n\t|\tтбРезультат.ШтрихкодКИЗ КАК ШтрихкодКИЗ,\n\t|\tтбРезультат.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tтбРезультат.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tтбРезультат.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tтбРезультат.КоличествоУпаковок КАК КоличествоУпаковок,\n\t|\tтбРезультат.Количество КАК Количество\n\t|ПОМЕСТИТЬ втТабЧасть\n\t|ИЗ\n\t|\t&тбРезультат КАК тбРезультат\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t//|\tвтТабЧасть.Приемка КАК Ссылка,\n\t|\tвтТабЧасть.ОжидаемаяПриемка КАК СсылкаОжидаемаяПриемка,\n\t|\tЕСТЬNULL(втТабЧасть.КодСтрокиКИС, \"\"\"\") КАК codeLine,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаНоменклатура.Идентификатор, \"\"\"\") КАК OwnerID,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаУпаковкаНоменклатуры.Идентификатор, \"\"\"\") КАК StorangeUnitID,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаПартияНоменклатуры.Идентификатор, \"\"\"\") КАК NomenclatureSeriesID,\n\t|\tвтТабЧасть.Количество КАК Quantity,\n\t|\tвтТабЧасть.КоличествоУпаковок КАК QuantityUnit,\n\t|\tвтТабЧасть.ШтрихкодКИЗ КАК serialNumber,\n\t|\tвтТабЧасть.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tвтТабЧасть.Номенклатура КАК Номенклатура,\n\t|\tвтТабЧасть.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tвтТабЧасть.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tвтТабЧасть.ОжидаемаяПриемка КАК ОжидаемаяПриемка\n\t|ИЗ\n\t|\tвтТабЧасть КАК втТабЧасть\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаНоменклатура\n\t|\t\tПО втТабЧасть.Номенклатура = axИдентификаторыОбменаНоменклатура.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаУпаковкаНоменклатуры\n\t|\t\tПО втТабЧасть.УпаковкаНоменклатуры = axИдентификаторыОбменаУпаковкаНоменклатуры.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаОП\n\t|\t\tПО втТабЧасть.ОжидаемаяПриемка = axИдентификаторыОбменаОП.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаПартияНоменклатуры\n\t|\t\tПО втТабЧасть.ПартияНоменклатуры = axИдентификаторыОбменаПартияНоменклатуры.Объект\n\t|\n\t|УПОРЯДОЧИТЬ ПО\n\t|\tСсылкаОжидаемаяПриемка\";\n\n\tЗапросТЧ.УстановитьПараметр(\"тбРезультат\", ТаблицаРезультат);\n\t\n\tРезультат = ЗапросТЧ.ВыполнитьПакет();\n\tВыборкаТЧ = Результат[1].Выбрать();\n\t\n\tсткПоиска = Новый Структура(\"СсылкаОжидаемаяПриемка\");\n\t\n\tсткШапка = ВернутьСтруктуруШапкиОжидаемойПриемки(); \n\tПока Выборка.Следующий() Цикл\n\t\tЗаполнитьЗначенияСвойств(сткШапка, Выборка);\n\t\tсткШапка.ID = Строка(Выборка.УИДДокумента);\n\t\tсткШапка.counterpartyID  = Строка(Выборка.УИДКонтрагента);\n\t\tсткШапка.counterpartyIDP = Строка(Выборка.УИДПоклажедатель);\n\t\tсткШапка.organizationID  = Строка(Выборка.УИДОрганизация);\n\t\t\t\t                                                            \t\t\n\t\t// табличная часть\n\t\tВыборкаТЧ.Сбросить();\n\t\tсткПоиска.СсылкаОжидаемаяПриемка = Выборка.Ссылка;\n\t\tПока ВыборкаТЧ.НайтиСледующий(сткПоиска) Цикл \n\t\t\tсткТовары = ВернутьСтруктуруТаблицыТоваров();\n\t\t\tЗаполнитьЗначенияСвойств(сткТовары, ВыборкаТЧ);  \n\t\t\tсткТовары.OwnerID = ?(ЗначениеЗаполнено(сткТовары.OwnerID), сткТовары.OwnerID, XMLСтрока(ВыборкаТЧ.Номенклатура)); \n\t\t\t//Если ЗначениеЗаполнено(ВыборкаТЧ.УпаковкаНоменклатуры) Тогда \n\t\t\t//\tсткТовары.storageUnitID  = ?(ЗначениеЗаполнено(сткТовары.storageUnitID), сткТовары.storageUnitID, XMLСтрока(ВыборкаТЧ.УпаковкаНоменклатуры)); \n\t\t\t//КонецЕсли;    \n\t\t\tСтатусНоменклатурыКонтроль = Бюро1440_ОбщегоНазначенияПовтИсп.ЗначениеНастройки(\"СтатусНоменклатурыКонтроль\");\n\t\t\tЕсли ВыборкаТЧ.СтатусНоменклатуры = СтатусНоменклатурыКонтроль Тогда \n\t\t\t\tсткТовары.Вставить(\"isOnQualityControl\", Истина);  \n\t\t\tИначе\n\t\t\t\tсткТовары.Вставить(\"isOnQualityControl\", Ложь); \n\t\t\tКонецЕсли; \n\n\t\t\tсткШапка.Goods.Добавить(сткТовары);\n\t\tКонецЦикла;\n\t\t\t\n\tКонецЦикла;\n\t\n\tВозврат сткШапка;\n\t\nКонецФункции //ВыгрузкаОжидаемойПриемки()\t\n\nФункция ПолучитьДанныеЗаказаНаОтгрузку(Объект)  \n\t\n\tВыгружатьПартию = Ложь;\n\tВыгружатьОтборОтгрузкуПоКонтейнерно = Ложь;\n\tРаскладыватьПоУпаковкам = Ложь;\n\tВыгружатьСН = Ложь;\n\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст =\n\t\"ВЫБРАТЬ\n\t|\tусЗаказНаОтгрузку.Ссылка КАК Ссылка,\n\t|\tусЗаказНаОтгрузку.Дата,\n\t|\tусЗаказНаОтгрузку.Номер,\n\t|\tусЗаказНаОтгрузку.НаправлениеОтгрузки,\n\t|\tусЗаказНаОтгрузку.Комментарий,\n\t|\tусЗаказНаОтгрузку.Рейс.НомерКИС КАК РейсНомерКИС,\n\t|\tусЗаказНаОтгрузку.Рейс.Номер КАК РейсНомер,\n\t|\tусЗаказНаОтгрузку.Рейс.ТранспортноеСредство КАК Транспорт,\n\t|\tусЗаказНаОтгрузку.Организация КАК Организация,\n\t|\tусЗаказНаОтгрузку.Поклажедатель КАК Поклажедатель, \n\t|\tусЗаказНаОтгрузку.Контрагент КАК Контрагент,\n\t|\tусСтатусыЗаказовНаОтгрузку.ДатаОтобрано КАК ДатаОтобрано,\n\t|\tусСтатусыЗаказовНаОтгрузку.ДатаГотовоКОтгрузке КАК ДатаГотовоКОтгрузке,\n\t|\tусСтатусыЗаказовНаОтгрузку.ДатаОтгружено КАК ДатаОтгружено,\n\t|\tусЗаказНаОтгрузку.Маршрут КАК Маршрут\n\t|ПОМЕСТИТЬ втЗаказы\n\t|ИЗ\n\t|\t Документ.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t|\t\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.усСтатусыЗаказовНаОтгрузку КАК усСтатусыЗаказовНаОтгрузку\n\t|\t\t\tПО усЗаказНаОтгрузку.Ссылка = усСтатусыЗаказовНаОтгрузку.ЗаказНаОтгрузку\n\t|ГДЕ\n\t|\tусСтатусыЗаказовНаОтгрузку.Статус = ЗНАЧЕНИЕ(Перечисление.усСтатусыЗаказовНаОтгрузку.Отгружен)\n\t|\tИ усЗаказНаОтгрузку.Ссылка = &ОбъектОтбора\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tвтЗаказы.Ссылка КАК Ссылка,\n\t|\tЕСТЬNULL(axИдентификаторыОбмена.Идентификатор, \"\"\"\") КАК ID,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаКонтрагент.Идентификатор, \"\"\"\") КАК counterpartyID,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаПоклажедатель.Идентификатор, \"\"\"\") КАК counterpartyIDP,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаОрганизация.Идентификатор, \"\"\"\") КАК OrganizationID,\n\t|\tвтЗаказы.Организация КАК Организация,\n\t|\tвтЗаказы.Поклажедатель КАК Поклажедатель, \n\t|\tвтЗаказы.Контрагент КАК Контрагент,\n\t//|\tвтЗаказы.Дата КАК Date,\n\t|\tвтЗаказы.Номер КАК Number,\n\t|\tВЫБОР\n\t|\t\tКОГДА втЗаказы.НаправлениеОтгрузки В (ЗНАЧЕНИЕ(Справочник.усНаправлениеОтгрузки.ОтгрузкаКлиенту), ЗНАЧЕНИЕ(Справочник.усНаправлениеОтгрузки.Самовывоз))\n\t|\t\t\tТОГДА \"\"ОтгрузкаКлиенту\"\"\n\t|\t\tКОГДА втЗаказы.НаправлениеОтгрузки = ЗНАЧЕНИЕ(Справочник.усНаправлениеОтгрузки.ОтгрузкаНаСклад)\n\t|\t\t\tТОГДА \"\"ОтгрузкаНаСклад\"\"\n\t|\t\tКОГДА втЗаказы.НаправлениеОтгрузки = ЗНАЧЕНИЕ(Справочник.усНаправлениеОтгрузки.ВозвратПоставщику)\n\t|\t\t\tТОГДА \"\"ВозвратПоставщику\"\"\n\t|\t\tИНАЧЕ ПРЕДСТАВЛЕНИЕ(втЗаказы.НаправлениеОтгрузки)\n\t|\tКОНЕЦ КАК OrderSource,\n\t|\tвтЗаказы.ДатаОтобрано КАК DateOfCompletion,\n\t|\tвтЗаказы.ДатаГотовоКОтгрузке КАК DateReadyForShipment,\n\t|\tвтЗаказы.ДатаОтгружено КАК Date,\n\t|\tвтЗаказы.Комментарий КАК Description,\n\t|\tЕСТЬNULL(втЗаказы.РейсНомерКИС, ЕСТЬNULL(втЗаказы.РейсНомер, \"\"\"\")) КАК TransportationNumber,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаМаршрут.Идентификатор, \"\"\"\") КАК RouteID,\n\t|\tЕСТЬNULL(втЗаказы.Транспорт.Штрихкод, \"\"\"\") КАК TransportID,\n\t|\tЕСТЬNULL(втЗаказы.Организация.Код, \"\"\"\") КАК WarehouseID,\n\t|\tПРЕДСТАВЛЕНИЕ(втЗаказы.Маршрут) КАК RouteName\n\t|ИЗ\n\t|\tвтЗаказы КАК втЗаказы\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбмена\n\t|\t\tПО втЗаказы.Ссылка = axИдентификаторыОбмена.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаМаршрут\n\t|\t\tПО втЗаказы.Маршрут = axИдентификаторыОбменаМаршрут.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаКонтрагент\n\t|\t\tПО втЗаказы.Контрагент = axИдентификаторыОбменаКонтрагент.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаПоклажедатель\n\t|\t\tПО втЗаказы.Поклажедатель = axИдентификаторыОбменаПоклажедатель.Объект \n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаОрганизация\n\t|\t\tПО втЗаказы.Организация = axИдентификаторыОбменаОрганизация.Объект\n\t|\n\t|УПОРЯДОЧИТЬ ПО\n\t|\tСсылка\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусКонтрольОтгрузки.ЗаказНаОтгрузку,\n\t|\tусКонтрольОтгрузки.НомерКонтейнера,\n\t|\tусКонтрольОтгрузки.Номенклатура,\n\t|\tусКонтрольОтгрузки.СтатусНоменклатуры,\n\t|\tусКонтрольОтгрузки.ПартияНоменклатуры,\n\t|\tСУММА(усКонтрольОтгрузки.КоличествоОтгружено - усКонтрольОтгрузки.КоличествоВозврат) КАК Количество\n\t|ИЗ\n\t|\tвтЗаказы КАК втЗаказы\n\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.усКонтрольОтгрузки КАК усКонтрольОтгрузки\n\t|\t\tПО втЗаказы.Ссылка = усКонтрольОтгрузки.ЗаказНаОтгрузку\n\t|ГДЕ\n\t|\tусКонтрольОтгрузки.КоличествоОтгружено <> 0\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|\tусКонтрольОтгрузки.ЗаказНаОтгрузку,\n\t|\tусКонтрольОтгрузки.Номенклатура,\n\t|\tусКонтрольОтгрузки.СтатусНоменклатуры,\n\t|\tусКонтрольОтгрузки.ПартияНоменклатуры,\n\t|\tусКонтрольОтгрузки.НомерКонтейнера\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|\";\n\n\tЕсли РаскладыватьПоУпаковкам Тогда\n\t\tЗапрос.Текст = Запрос.Текст +\n\t\t\"ВЫБРАТЬ\n\t\t|\tусКонтрольОтгрузки.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,\n\t\t|\tВЫРАЗИТЬ(усКонтрольОтгрузки.Регистратор КАК Документ.усСтрокаЗаказаНаОтгрузку).ПланОтгрузки КАК ПланОтгрузки,\n\t\t|\tВЫРАЗИТЬ(усКонтрольОтгрузки.Регистратор КАК Документ.усСтрокаЗаказаНаОтгрузку).КодСтрокиКИС КАК КодСтрокиКИС,\n\t\t|\tусКонтрольОтгрузки.Номенклатура КАК Номенклатура,\n\t\t|\tЗНАЧЕНИЕ(Справочник.усУпаковкиНоменклатуры.ПустаяСсылка) КАК УпаковкаНоменклатуры,\n\t\t|\t1 КАК Коэффициент,\n\t\t|\tусКонтрольОтгрузки.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t\t|\tусКонтрольОтгрузки.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t\t|\tусКонтрольОтгрузки.НомерКонтейнера КАК НомерКонтейнера,\n\t\t|\tСУММА(усКонтрольОтгрузки.КоличествоЗапланировано) КАК КоличествоУпаковок,\n\t\t|\tСУММА(усКонтрольОтгрузки.КоличествоЗапланировано) КАК Количество\n\t\t|ИЗ\n\t\t|\tвтЗаказы КАК втЗаказы\n\t\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.усКонтрольОтгрузки КАК усКонтрольОтгрузки\n\t\t|\t\tПО втЗаказы.Ссылка = усКонтрольОтгрузки.ЗаказНаОтгрузку\n\t\t|ГДЕ\n\t\t|\tусКонтрольОтгрузки.КоличествоЗапланировано <> 0\n\t\t|\n\t\t|СГРУППИРОВАТЬ ПО\n\t\t|\tусКонтрольОтгрузки.ЗаказНаОтгрузку,\n\t\t|\tВЫРАЗИТЬ(усКонтрольОтгрузки.Регистратор КАК Документ.усСтрокаЗаказаНаОтгрузку).ПланОтгрузки,\n\t\t|\tВЫРАЗИТЬ(усКонтрольОтгрузки.Регистратор КАК Документ.усСтрокаЗаказаНаОтгрузку).КодСтрокиКИС,\n\t\t|\tусКонтрольОтгрузки.Номенклатура,\n\t\t|\tусКонтрольОтгрузки.СтатусНоменклатуры,\n\t\t|\tусКонтрольОтгрузки.ПартияНоменклатуры,\n\t\t|\tусКонтрольОтгрузки.НомерКонтейнера\";\n\tИначе\n\t\tЗапрос.Текст = Запрос.Текст +\n\t\t\"ВЫБРАТЬ\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Владелец КАК ЗаказНаОтгрузку,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.ПланОтгрузки КАК ПланОтгрузки,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.КодСтрокиКИС КАК КодСтрокиКИС,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Номенклатура КАК Номенклатура,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t\t|\tЕСТЬNULL(усСтрокаЗаказаНаОтгрузку.УпаковкаНоменклатуры.Коэффициент, 1) КАК Коэффициент,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.НомерКонтейнера КАК НомерКонтейнера,\n\t\t|\tСУММА(усСтрокаЗаказаНаОтгрузку.Количество) КАК Количество,\n\t\t|\tСУММА(усСтрокаЗаказаНаОтгрузку.КоличествоУпаковок) КАК КоличествоУпаковок\n\t\t|ИЗ\n\t\t|\tвтЗаказы КАК втЗаказы\n\t\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.усСтрокаЗаказаНаОтгрузку КАК усСтрокаЗаказаНаОтгрузку\n\t\t|\t\tПО втЗаказы.Ссылка = усСтрокаЗаказаНаОтгрузку.Владелец\n\t\t|ГДЕ\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Проведен\n\t\t|\tИ усСтрокаЗаказаНаОтгрузку.Количество <> 0\n\t\t|\n\t\t|СГРУППИРОВАТЬ ПО\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Владелец,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.ПланОтгрузки,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.КодСтрокиКИС,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Номенклатура,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.УпаковкаНоменклатуры,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.СтатусНоменклатуры,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.ПартияНоменклатуры,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.НомерКонтейнера,\n\t\t|\tЕСТЬNULL(усСтрокаЗаказаНаОтгрузку.УпаковкаНоменклатуры.Коэффициент, 1)\";\n\tКонецЕсли;\n\n\tЗапрос.Текст = Запрос.Текст +\n    \"\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втЗаказы.Ссылка КАК Ссылка,\n\t|    усЗадачаПеремещениеТовараКодыЦМТ.ШтрихкодКИЗ КАК ШтрихкодКИЗ\n\t|ПОМЕСТИТЬ втШтрихкодыКИЗ\n\t|ИЗ\n\t|    втЗаказы КАК втЗаказы\n\t|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.усЗадачаПеремещениеТовара.КодыЦМТ КАК усЗадачаПеремещениеТовараКодыЦМТ\n\t|        ПО (втЗаказы.Ссылка = усЗадачаПеремещениеТовараКодыЦМТ.Ссылка.ДокументОснование)\n\t|ГДЕ\n\t|    усЗадачаПеремещениеТовараКодыЦМТ.Ссылка.ТипЗадачи = ЗНАЧЕНИЕ(Перечисление.усТипыЗадач.Отгрузка)\n\t|\n\t|ОБЪЕДИНИТЬ ВСЕ\n\t|\n\t|ВЫБРАТЬ\n\t|    втЗаказы.Ссылка,\n\t|    усЗадачаПеремещениеКонтейнераКодыЦМТ.ШтрихкодКИЗ\n\t|ИЗ\n\t|    втЗаказы КАК втЗаказы\n\t|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.усЗадачаПеремещениеКонтейнера.КодыЦМТ КАК усЗадачаПеремещениеКонтейнераКодыЦМТ\n\t|        ПО втЗаказы.Ссылка = усЗадачаПеремещениеКонтейнераКодыЦМТ.Ссылка.ДокументОснование\n\t|ГДЕ\n\t|    усЗадачаПеремещениеКонтейнераКодыЦМТ.Ссылка.ТипЗадачи = ЗНАЧЕНИЕ(Перечисление.усТипыЗадач.Отгрузка)\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|    ШтрихкодКИЗ\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втКодыЦмт.Ссылка КАК Ссылка,\n\t|    усОбъектыЦМТ.Ссылка КАК ОбъектЦМТ,\n\t|    усОбъектыЦМТ.ШтрихкодКИЗ КАК ШтрихкодКИЗ\n\t|ПОМЕСТИТЬ втОбъектыЦМТ\n\t|ИЗ\n\t|    втШтрихкодыКИЗ КАК втКодыЦмт\n\t|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.усОбъектыЦМТ КАК усОбъектыЦМТ\n\t|        ПО (втКодыЦмт.ШтрихкодКИЗ = усОбъектыЦМТ.ШтрихкодКИЗ)\n\t|СГРУППИРОВАТЬ ПО \n\t|    втКодыЦмт.Ссылка,\n\t|    усОбъектыЦМТ.Ссылка,\n\t|    усОбъектыЦМТ.ШтрихкодКИЗ\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|    ОбъектЦМТ\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втОбъектыЦМТ.Ссылка КАК ЗаказНаОтгрузку,\n\t|    втОбъектыЦМТ.ШтрихкодКИЗ КАК ШтрихкодКИЗ,\n\t|    1 КАК Количество,\n\t|    усРеквизитыОбъектовЦМТСрезПоследних.Объект КАК Объект,    \n\t|    ЕСТЬNULL(усРеквизитыОбъектовЦМТСрезПоследних.Номенклатура, ЗНАЧЕНИЕ(Справочник.усНоменклатура.ПустаяСсылка)) КАК Номенклатура,\n\t|    ЕСТЬNULL(усРеквизитыОбъектовЦМТСрезПоследних.ПартияНоменклатуры, ЗНАЧЕНИЕ(Справочник.усПартииНоменклатуры.ПустаяСсылка)) КАК ПартияНоменклатуры,\n\t|    ЕСТЬNULL(усСтатусыОбъектовЦМТСрезПоследних.Статус, ЗНАЧЕНИЕ(Справочник.усСтатусыНоменклатуры.Кондиция)) КАК СтатусНоменклатуры\n\t|ИЗ\n\t|    втОбъектыЦМТ КАК втОбъектыЦМТ\n\t|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.усРеквизитыОбъектовЦМТ.СрезПоследних КАК усРеквизитыОбъектовЦМТСрезПоследних\n\t|        ПО (втОбъектыЦМТ.ОбъектЦМТ = усРеквизитыОбъектовЦМТСрезПоследних.Объект)\n\t|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.усСтатусыОбъектовЦМТ.СрезПоследних КАК усСтатусыОбъектовЦМТСрезПоследних\n\t|        ПО (втОбъектыЦМТ.ОбъектЦМТ = усСтатусыОбъектовЦМТСрезПоследних.Объект)\";\n\n\tЗапрос.УстановитьПараметр(\"ОбъектОтбора\", Объект);\n\n\tРезультат   = Запрос.ВыполнитьПакет();\n\tВыборка     = Результат[1].Выбрать();\n\tВыборкаФакт = Результат[2].Выгрузить();\n\tВыборкаПлан = Результат[3].Выгрузить();\n\tВыборкаЦМТ  = Результат[6].Выгрузить();\n\n\t// распределить факт на план\n\tмсвСтруктурПоиска = Новый Массив;\n\tЕсли ВыгружатьОтборОтгрузкуПоКонтейнерно Тогда\n\t\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ЗаказНаОтгрузку, Номенклатура, СтатусНоменклатуры, ПартияНоменклатуры, НомерКонтейнера\"));\n\tИначе\n\t\tВыборкаФакт.Свернуть(\"ЗаказНаОтгрузку, Номенклатура, СтатусНоменклатуры, ПартияНоменклатуры\", \"Количество\");\n\t\tВыборкаПлан.Свернуть(\"ЗаказНаОтгрузку, ПланОтгрузки, КодСтрокиКИС, Номенклатура, УпаковкаНоменклатуры, Коэффициент, СтатусНоменклатуры, ПартияНоменклатуры\", \"КоличествоУпаковок, Количество\");\n\tКонецЕсли;\n\t\n\tТаблицаРезультат = ВыборкаПлан.СкопироватьКолонки();\n\tТаблицаРезультат.Колонки.Добавить(\"ШтрихкодКИЗ\", Новый ОписаниеТипов(\"Строка\"));\n\t\n\tВыборкаФактСКодамиЦМТ = ВыборкаФакт.СкопироватьКолонки();\n\tВыборкаФактСКодамиЦМТ.Колонки.Добавить(\"ШтрихкодКИЗ\", Новый ОписаниеТипов(\"Строка\")); \n\n\t//Разобъем тзФакт на коды ЦМТ \n\tмсвСтруктурПоискаЦМТ = Новый Массив;\n\tмсвСтруктурПоискаЦМТ.Добавить(Новый Структура(\"ЗаказНаОтгрузку, Номенклатура, СтатусНоменклатуры, ПартияНоменклатуры\"));\n\tмсвСтруктурПоискаЦМТ.Добавить(Новый Структура(\"ЗаказНаОтгрузку, Номенклатура, СтатусНоменклатуры\"));\n\tмсвСтруктурПоискаЦМТ.Добавить(Новый Структура(\"ЗаказНаОтгрузку, Номенклатура\"));\n\t\n\tДля каждого текСтрокаФакт Из ВыборкаФакт Цикл\n\t\tЕсли ЗначениеЗаполнено(текСтрокаФакт.ПартияНоменклатуры) И текСтрокаФакт.ПартияНоменклатуры.ВестиУчетПоКодамЦМТ Тогда \n\t\t\tДля Каждого текСтруктураПоиска Из мсвСтруктурПоискаЦМТ Цикл \n\t\t\t\tЗаполнитьЗначенияСвойств(текСтруктураПоиска, текСтрокаФакт);\n\t\t\t\t\n\t\t\t\tмсвСтрок = ВыборкаЦМТ.НайтиСтроки(текСтруктураПоиска);\n\t\t\t\tЕсли мсвСтрок.Количество() Тогда\n\t\t\t\t\tДля Каждого текСтрокаЦМТ Из мсвСтрок Цикл \n\t\t\t\t\t\tтекКоличество = Мин(текСтрокаЦМТ.Количество, текСтрокаФакт.Количество);\n\t\t\t\t\t\tЕсли текКоличество Тогда \n\t\t\t\t\t\t\tНоваяСтрока = ВыборкаФактСКодамиЦМТ.Добавить();\n\t\t\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\t\t\tНоваяСтрока.Количество           = 1;\n\t\t\t\t\t\t\tНоваяСтрока.ШтрихкодКИЗ\t\t\t = текСтрокаЦМТ.ШтрихкодКИЗ;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tтекСтрокаЦМТ.Количество = текСтрокаЦМТ.Количество - текКоличество;\n\t\t\t\t\t\t\tтекСтрокаФакт.Количество = текСтрокаФакт.Количество - текКоличество;\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\t\t\n\t\t\t\t\t\tЕсли текСтрокаФакт.Количество <= 0 Тогда\n\t\t\t\t\t\t\tПрервать;\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\tКонецЦикла;\n\t\t\t\t\t\n\t\t\t\t\tЕсли текСтрокаФакт.Количество > 0 Тогда \n\t\t\t\t\t\tНоваяСтрока = ВыборкаФактСКодамиЦМТ.Добавить();\n\t\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\t\tНоваяСтрока.Количество           = текСтрокаФакт.Количество;\n\t\t\t\t\t\t\n\t\t\t\t\t\tтекСтрокаФакт.Количество = 0;\n\t\t\t\t\tКонецЕсли;\t\n\t\t\t\t\t\n\t\t\t\t\tПрервать;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЦикла;\t\t\n\t\t\t\n\t\t\tЕсли текСтрокаФакт.Количество > 0 Тогда \n\t\t\t\tНоваяСтрока = ВыборкаФактСКодамиЦМТ.Добавить();\n\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\n\t\t\t\tтекСтрокаФакт.Количество = 0;\n\t\t\tКонецЕсли;\t\n\t\tИначе \n\t\t\tНовСтр = ВыборкаФактСКодамиЦМТ.Добавить();\n\t\t\tЗаполнитьЗначенияСвойств(НовСтр, текСтрокаФакт);\n\t\tКонецЕсли;   \t\n\tКонецЦикла; \n\t\n\tВыборкаФакт = ВыборкаФактСКодамиЦМТ.Скопировать(); \n\t\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ЗаказНаОтгрузку, Номенклатура, СтатусНоменклатуры, ПартияНоменклатуры\"));\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ЗаказНаОтгрузку, Номенклатура, СтатусНоменклатуры\"));\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ЗаказНаОтгрузку, Номенклатура\"));\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ЗаказНаОтгрузку\"));\n\n\tДля каждого текСтрокаФакт Из ВыборкаФакт Цикл\n\t\tДля Каждого текСтруктураПоиска Из мсвСтруктурПоиска Цикл\n\t\t\tЗаполнитьЗначенияСвойств(текСтруктураПоиска, текСтрокаФакт);\n\n\t\t\tмсвСтрок = ВыборкаПлан.НайтиСтроки(текСтруктураПоиска);\n\t\t\tЕсли мсвСтрок.Количество() Тогда\n\t\t\t\tДля Каждого текСтрокаПлан Из мсвСтрок Цикл\n\t\t\t\t\tтекКоличество = Мин(текСтрокаПлан.Количество, текСтрокаФакт.Количество);\n\t\t\t\t\tЕсли текКоличество Тогда\n\t\t\t\t\t\tНоваяСтрока = ТаблицаРезультат.Добавить();\n\t\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\t\tНоваяСтрока.ПланОтгрузки         = текСтрокаПлан.ПланОтгрузки;\n\t\t\t\t\t\tНоваяСтрока.КодСтрокиКИС         = текСтрокаПлан.КодСтрокиКИС;\n\t\t\t\t\t\tНоваяСтрока.УпаковкаНоменклатуры = текСтрокаПлан.УпаковкаНоменклатуры;\n\t\t\t\t\t\tНоваяСтрока.КоличествоУпаковок   = текКоличество/текСтрокаПлан.Коэффициент;\n\t\t\t\t\t\tНоваяСтрока.Количество           = текКоличество;\n\n\t\t\t\t\t\tтекСтрокаПлан.Количество = текСтрокаПлан.Количество - текКоличество;\n\t\t\t\t\t\tтекСтрокаФакт.Количество = текСтрокаФакт.Количество - текКоличество;\n\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\tЕсли текСтрокаФакт.Количество <= 0 Тогда\n\t\t\t\t\t\tПрервать;\n\t\t\t\t\tКонецЕсли;\n\t\t\t\tКонецЦикла;\n\n\t\t\t\tЕсли текСтрокаФакт.Количество > 0 Тогда\n\t\t\t\t\tНоваяСтрока = ТаблицаРезультат.Добавить();\n\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\tНоваяСтрока.ПланОтгрузки         = мсвСтрок[0].ПланОтгрузки;\n\t\t\t\t\tНоваяСтрока.КодСтрокиКИС         = мсвСтрок[0].КодСтрокиКИС;\n\t\t\t\t\tНоваяСтрока.УпаковкаНоменклатуры = мсвСтрок[0].УпаковкаНоменклатуры;\n\t\t\t\t\tНоваяСтрока.КоличествоУпаковок   = текСтрокаФакт.Количество/мсвСтрок[0].Коэффициент;\n\t\t\t\t\tНоваяСтрока.Количество           = текСтрокаФакт.Количество;\n\n\t\t\t\t\tтекСтрокаФакт.Количество = 0;\n\t\t\t\tКонецЕсли;\n\t\t\t\tПрервать;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\n\t\tЕсли текСтрокаФакт.Количество > 0 Тогда\n\t\t\tНоваяСтрока = ТаблицаРезультат.Добавить();\n\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\n\t\t\tтекСтрокаФакт.Количество = 0;\n\t\tКонецЕсли;\n\tКонецЦикла;\n\n\tТаблицаРезультат.Свернуть(\"ЗаказНаОтгрузку, ПланОтгрузки, КодСтрокиКИС, Номенклатура, УпаковкаНоменклатуры, СтатусНоменклатуры, ШтрихкодКИЗ\" + ?(ВыгружатьОтборОтгрузкуПоКонтейнерно,\",НомерКонтейнера\",\"\") + ?(ВыгружатьПартию,\",ПартияНоменклатуры\",\"\"), \"Количество\" + ?(РаскладыватьПоУпаковкам, \"\", \",КоличествоУпаковок\"));\n\n\tЕсли НЕ ВыгружатьПартию Тогда\n\t\tТаблицаРезультат.Колонки.Добавить(\"ПартияНоменклатуры\", Новый ОписаниеТипов(\"СправочникСсылка.усПартииНоменклатуры\"));\n\tКонецЕсли;\n\n\tЕсли Не ВыгружатьОтборОтгрузкуПоКонтейнерно Тогда\n\t\tТаблицаРезультат.Колонки.Добавить(\"НомерКонтейнера\", Новый ОписаниеТипов(\"Строка\"));\n\tКонецЕсли;\n\n\tЕсли РаскладыватьПоУпаковкам Тогда\n\t\tТаблицаРезультат.Колонки.Удалить(\"УпаковкаНоменклатуры\");\n\t\tТаблицаРезультат = усУправлениеСкладом.РазложитьНаУпаковкиНоменклатуры(ТаблицаРезультат);\n\tКонецЕсли;\n\n\tЗапросТЧ = Новый Запрос;\n\tЗапросТЧ.Текст =\n\t\"ВЫБРАТЬ\n\t|\tтбРезультат.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,\n\t|\tтбРезультат.ПланОтгрузки КАК ПланОтгрузки,\n\t|\tтбРезультат.КодСтрокиКИС КАК КодСтрокиКИС,\n\t|\tтбРезультат.Номенклатура КАК Номенклатура,\n\t|\tтбРезультат.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tтбРезультат.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tтбРезультат.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tтбРезультат.НомерКонтейнера КАК НомерКонтейнера,\n\t|\tтбРезультат.ШтрихкодКИЗ КАК ШтрихкодКИЗ,\n\t|\tтбРезультат.КоличествоУпаковок КАК КоличествоУпаковок,\n\t|\tтбРезультат.Количество КАК Количество\n\t|ПОМЕСТИТЬ втТабЧасть\n\t|ИЗ\n\t|\t&тбРезультат КАК тбРезультат\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t|\tусСерийныеНомера.Номенклатура КАК Номенклатура,\n\t|\tусСерийныеНомера.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tусСерийныеНомера.СерийныйНомер КАК SerialNumber,\n\t|\tусСерийныеНомера.СерийныйНомерПо КАК SerialNumberEnd,\n\t|\tусСерийныеНомера.ШтрихкодПроизводителя КАК ManufacturerBarcode\n\t|ИЗ\n\t|\tРегистрСведений.усСерийныеНомера КАК усСерийныеНомера\n\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ втТабЧасть КАК втТабЧасть\n\t|\t\tПО усСерийныеНомера.ПартияНоменклатуры = втТабЧасть.ПартияНоменклатуры\n\t|ГДЕ\n\t|\tвтТабЧасть.ПартияНоменклатуры <> ЗНАЧЕНИЕ(Справочник.усПартииНоменклатуры.ПустаяСсылка)\n\t|\tИ &ВыгружатьСН\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tвтТабЧасть.ЗаказНаОтгрузку КАК Ссылка,\n\t|\tЕСТЬNULL(втТабЧасть.КодСтрокиКИС, \"\"\"\") КАК codeLine,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаНоменклатура.Идентификатор, \"\"\"\") КАК OwnerID,\n\t|   втТабЧасть.Номенклатура КАК Номенклатура, \n\t|\tЕСТЬNULL(axИдентификаторыОбменаУпаковкаНоменклатуры.Идентификатор, \"\"\"\") КАК StorangeUnitID,\n\t|   втТабЧасть.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаСтатусНомеклатуры.Идентификатор, \"\"\"\") КАК StatusItemID,\n\t|\tвтТабЧасть.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаПартияНоменклатуры.Идентификатор, \"\"\"\") КАК NomenclatureSeriesID,\n\t|\tвтТабЧасть.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tвтТабЧасть.НомерКонтейнера КАК ContainerNumber, \n\t|\tвтТабЧасть.ШтрихкодКИЗ КАК serialNumber,\n\t|\tвтТабЧасть.Количество КАК Quantity,\n\t|\tвтТабЧасть.КоличествоУпаковок КАК QuantityUnit,\n\t|\tВЫБОР\n\t|\t\tКОГДА ЕСТЬNULL(усСтатусыНоменклатуры.ТипСтатуса, ЗНАЧЕНИЕ(Перечисление.усГрадацииКачества.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.усГрадацииКачества.НеГоден)\n\t|\t\t\t\tИЛИ ЕСТЬNULL(усСтатусыНоменклатуры.ТипСтатуса, ЗНАЧЕНИЕ(Перечисление.усГрадацииКачества.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.усГрадацииКачества.ОграниченноГоден)\n\t|\t\t\tТОГДА ИСТИНА\n\t|\t\tИНАЧЕ ЛОЖЬ\n\t|\tКОНЕЦ КАК Defect\n\t|ИЗ\n\t|\tвтТабЧасть КАК втТабЧасть\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаНоменклатура\n\t|\t\tПО втТабЧасть.Номенклатура = axИдентификаторыОбменаНоменклатура.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаУпаковкаНоменклатуры\n\t|\t\tПО втТабЧасть.УпаковкаНоменклатуры = axИдентификаторыОбменаУпаковкаНоменклатуры.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаОП\n\t|\t\tПО втТабЧасть.ЗаказНаОтгрузку = axИдентификаторыОбменаОП.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаПП\n\t|\t\tПО втТабЧасть.ПланОтгрузки = axИдентификаторыОбменаПП.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ Справочник.усСтатусыНоменклатуры КАК усСтатусыНоменклатуры\n\t|\t\tПО втТабЧасть.СтатусНоменклатуры = усСтатусыНоменклатуры.Ссылка\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаСтатусНомеклатуры\n\t|\t\tПО втТабЧасть.СтатусНоменклатуры = axИдентификаторыОбменаСтатусНомеклатуры.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаПартияНоменклатуры\n\t|\t\tПО втТабЧасть.ПартияНоменклатуры = axИдентификаторыОбменаПартияНоменклатуры.Объект\n\t|\n\t|УПОРЯДОЧИТЬ ПО\n\t|\tСсылка\";\n\tЗапросТЧ.УстановитьПараметр(\"тбРезультат\", ТаблицаРезультат);\n\tЗапросТЧ.УстановитьПараметр(\"ВыгружатьСН\", ВыгружатьСН);\n\n\tРезультат = ЗапросТЧ.ВыполнитьПакет();\n\tВыборкаСН = Результат[1].Выбрать();\n\tВыборкаТЧ = Результат[2].Выбрать();\n\n\tсткПоиска   = Новый Структура(\"Ссылка\");\n\tсткПоискаСН = Новый Структура(\"ПартияНоменклатуры\");\n\tсткШапка \t= ВернутьСтруктуруШапкиЗаказаНаОтгрузку();\n\tПока Выборка.Следующий() Цикл \n\t\tЗаполнитьЗначенияСвойств(сткШапка, Выборка);\n\t\tсткШапка.ID = ?(ЗначениеЗаполнено(сткШапка.ID), сткШапка.ID, XMLСтрока(Выборка.Ссылка));\n\t\tсткШапка.Date = XMLСтрока(Выборка.Date); \n\t\tЕсли ЗначениеЗаполнено(Выборка.Контрагент) Тогда\n\t\t\tсткШапка.counterpartyID   = ?(ЗначениеЗаполнено(Выборка.counterpartyID), Выборка.counterpartyID, XMLСтрока(Выборка.Контрагент)); \n\t\tКонецЕсли;\n\t\tЕсли ЗначениеЗаполнено(Выборка.Поклажедатель) Тогда\n\t\t\tсткШапка.counterpartyIDP = ?(ЗначениеЗаполнено(Выборка.counterpartyIDP), Выборка.counterpartyIDP, XMLСтрока(Выборка.Поклажедатель));\n\t\tКонецЕсли;\n\t\tЕсли ЗначениеЗаполнено(Выборка.Организация) Тогда\n\t\t\tсткШапка.organizationID  = ?(ЗначениеЗаполнено(Выборка.organizationID), Выборка.organizationID, XMLСтрока(Выборка.Организация));\n\t\tКонецЕсли;\n\n\t\tЗаполнитьЗначенияСвойств(сткПоиска, Выборка);\n\t\t// табличная часть\n\t\tВыборкаТЧ.Сбросить();\n\t\tПока ВыборкаТЧ.НайтиСледующий(сткПоиска) Цикл \n\t\t\tсткТовары = ВернутьСтруктуруТаблицыТоваров();\n\t\t\tЗаполнитьЗначенияСвойств(сткТовары, ВыборкаТЧ);\t\n\t\t\tсткТовары.ownerID = ?(ЗначениеЗаполнено(сткТовары.ownerID), сткТовары.ownerID, XMLСтрока(ВыборкаТЧ.Номенклатура)); \n\t\t\t//Если ЗначениеЗаполнено(ВыборкаТЧ.УпаковкаНоменклатуры) Тогда \n\t\t\t//\tсткТовары.storageUnitID  = ?(ЗначениеЗаполнено(сткТовары.storageUnitID), сткТовары.storageUnitID, XMLСтрока(ВыборкаТЧ.УпаковкаНоменклатуры)); \n\t\t\t//КонецЕсли;\n\t\t\tсткШапка.Goods.Добавить(сткТовары);\n\t\tКонецЦикла; \n\t\t\n\t\tВозврат сткШапка;\n\tКонецЦикла;\n\t\nКонецФункции //ВыгрузкаОжидаемойПриемки()\t\n\nФункция ПолучитьДанныеПоАктуСверкиИзлишки(Объект)\n\t\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст =\n\t\"ВЫБРАТЬ\n\t|    усАктСверкиИнвентаризации.Ссылка КАК Ссылка\n\t|ПОМЕСТИТЬ втАкты\n\t|ИЗ\n\t|    Документ.усАктСверкиИнвентаризации КАК усАктСверкиИнвентаризации\n\t|ГДЕ\n\t|    усАктСверкиИнвентаризации.Ссылка = &Объект\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|    Ссылка\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втАкты.Ссылка КАК Ссылка,\n\t|    ЕСТЬNULL(Бюро1440_ИдентификаторыОбмена.Идентификатор, \"\"\"\") КАК ID,\n\t|    ЕСТЬNULL(Бюро1440_ИдентификаторыОбменаОрганизация.Идентификатор, \"\"\"\") КАК OrganizationID, \n\t|    ЕСТЬNULL(Бюро1440_ИдентификаторыОбменаПоклажедатель.Идентификатор, \"\"\"\") КАК CounterpartyIDP, \n\t|\t втАкты.Ссылка.Организация КАК Организация,\n\t|\t втАкты.Ссылка.Поклажедатель КАК Поклажедатель,\n\t|    втАкты.Ссылка.Номер КАК Number,\n\t|    втАкты.Ссылка.Дата КАК Date,\n\t|    втАкты.Ссылка.Комментарий КАК Description,\n\t| \t втАкты.Ссылка.ПометкаУдаления КАК IsMarked\n\t|ИЗ\n\t|    втАкты КАК втАкты\n\t|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбмена\n\t|        ПО втАкты.Ссылка = Бюро1440_ИдентификаторыОбмена.Объект\n\t|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаОрганизация\n\t|        ПО втАкты.Ссылка.Организация = Бюро1440_ИдентификаторыОбменаОрганизация.Объект \n\t|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаПоклажедатель\n\t|        ПО втАкты.Ссылка.Поклажедатель = Бюро1440_ИдентификаторыОбменаПоклажедатель.Объект\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втАкты.Ссылка КАК Ссылка,\n\t|    усАктСверкиИнвентаризацииИзлишки.Номенклатура КАК Номенклатура,\n\t|    усАктСверкиИнвентаризацииИзлишки.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|    усАктСверкиИнвентаризацииИзлишки.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|    СУММА(усАктСверкиИнвентаризацииИзлишки.Количество) КАК Количество,\n\t|    усАктСверкиИнвентаризацииИзлишки.КлючСвязи КАК КлючСвязи\n\t|ПОМЕСТИТЬ втСтроки\n\t|ИЗ\n\t|    втАкты КАК втАкты\n\t|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.усАктСверкиИнвентаризации.Излишки КАК усАктСверкиИнвентаризацииИзлишки\n\t|        ПО (втАкты.Ссылка = усАктСверкиИнвентаризацииИзлишки.Ссылка)\n\t|ГДЕ\n\t|    усАктСверкиИнвентаризацииИзлишки.Количество > 0\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|    втАкты.Ссылка,\n\t|    усАктСверкиИнвентаризацииИзлишки.Номенклатура,\n\t|    усАктСверкиИнвентаризацииИзлишки.ПартияНоменклатуры,\n\t|    усАктСверкиИнвентаризацииИзлишки.СтатусНоменклатуры,\n\t|    усАктСверкиИнвентаризацииИзлишки.КлючСвязи\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втСтроки.Ссылка КАК Ссылка,\n\t|    втСтроки.Номенклатура КАК Номенклатура,\n\t|    втСтроки.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|    втСтроки.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|    втСтроки.Количество КАК Количество,\n\t|    втСтроки.КлючСвязи КАК КлючСвязи\n\t|ИЗ\n\t|    втСтроки КАК втСтроки\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    усАктСверкиИнвентаризацииИзлишкиКодыЦМТ.ШтрихкодКИЗ КАК ШтрихкодКИЗ,\n\t|    усАктСверкиИнвентаризацииИзлишкиКодыЦМТ.ШтрихкодТранспортнойУпаковки КАК ШтрихкодТранспортнойУпаковки,\n\t|    втСтроки.Номенклатура КАК Номенклатура,\n\t|    втСтроки.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|    втСтроки.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|    усАктСверкиИнвентаризацииИзлишкиКодыЦМТ.КлючСвязи КАК КлючСвязи,\n\t|    усАктСверкиИнвентаризацииИзлишкиКодыЦМТ.Ссылка КАК Ссылка,\n\t|    1 КАК Количество\n\t|ИЗ\n\t|    втСтроки КАК втСтроки\n\t|        ЛЕВОЕ СОЕДИНЕНИЕ Документ.усАктСверкиИнвентаризации.ИзлишкиКодыЦМТ КАК усАктСверкиИнвентаризацииИзлишкиКодыЦМТ\n\t|        ПО (втСтроки.Ссылка = усАктСверкиИнвентаризацииИзлишкиКодыЦМТ.Ссылка)\n\t|            И (втСтроки.КлючСвязи = усАктСверкиИнвентаризацииИзлишкиКодыЦМТ.КлючСвязи)\";\n\n\tЗапрос.УстановитьПараметр(\"Объект\", Объект);\n\n\tРезультат = Запрос.ВыполнитьПакет();\n\n\t// инвентаризация\n\tВыборка     \t = Результат[1].Выбрать();\n\tТаблицаРезультат = Результат[3].Выгрузить();  \n\tТаблицаЦМТ\t\t = Результат[4].Выгрузить();\n\tТаблицаРезультат = РазложитьНаБазовыеУпаковкиНоменклатуры(ТаблицаРезультат); \n\tТаблицаРезультат.Колонки.Добавить(\"ШтрихкодКИЗ\", Новый ОписаниеТипов(\"Строка\"));\n\t\n\tТаблицаРезультатСКодамиЦМТ = ТаблицаРезультат.СкопироватьКолонки(); \n\n\t//Разобъем тзФакт на коды ЦМТ \n\tмсвСтруктурПоискаЦМТ = Новый Массив;\n\tмсвСтруктурПоискаЦМТ.Добавить(Новый Структура(\"КлючСвязи\"));\n\t\n\tДля каждого текСтрокаФакт Из ТаблицаРезультат Цикл\n\t\tЕсли ЗначениеЗаполнено(текСтрокаФакт.ПартияНоменклатуры) И текСтрокаФакт.ПартияНоменклатуры.ВестиУчетПоКодамЦМТ Тогда \n\t\t\tДля Каждого текСтруктураПоиска Из мсвСтруктурПоискаЦМТ Цикл \n\t\t\t\tЗаполнитьЗначенияСвойств(текСтруктураПоиска, текСтрокаФакт);\n\t\t\t\t\n\t\t\t\tмсвСтрок = ТаблицаЦМТ.НайтиСтроки(текСтруктураПоиска);\n\t\t\t\tЕсли мсвСтрок.Количество() Тогда\n\t\t\t\t\tДля Каждого текСтрокаЦМТ Из мсвСтрок Цикл \n\t\t\t\t\t\tтекКоличество = Мин(текСтрокаЦМТ.Количество, текСтрокаФакт.Количество);\n\t\t\t\t\t\tЕсли текКоличество Тогда \n\t\t\t\t\t\t\tНоваяСтрока = ТаблицаРезультатСКодамиЦМТ.Добавить();\n\t\t\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\t\t\tНоваяСтрока.Количество           = 1; \n\t\t\t\t\t\t\tНоваяСтрока.КоличествоУпаковок   = 1;\n\t\t\t\t\t\t\tНоваяСтрока.ШтрихкодКИЗ\t\t\t = текСтрокаЦМТ.ШтрихкодКИЗ;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tтекСтрокаЦМТ.Количество = текСтрокаЦМТ.Количество - текКоличество;\n\t\t\t\t\t\t\tтекСтрокаФакт.Количество = текСтрокаФакт.Количество - текКоличество;\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\t\t\n\t\t\t\t\t\tЕсли текСтрокаФакт.Количество <= 0 Тогда\n\t\t\t\t\t\t\tПрервать;\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\tКонецЦикла;\n\t\t\t\t\t\n\t\t\t\t\tЕсли текСтрокаФакт.Количество > 0 Тогда \n\t\t\t\t\t\tНоваяСтрока = ТаблицаРезультатСКодамиЦМТ.Добавить();\n\t\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\t\tНоваяСтрока.Количество           = текСтрокаФакт.Количество;\n\t\t\t\t\t\t\n\t\t\t\t\t\tтекСтрокаФакт.Количество = 0;\n\t\t\t\t\tКонецЕсли;\t\n\t\t\t\t\t\n\t\t\t\t\tПрервать;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЦикла;\t\t\n\t\t\t\n\t\t\tЕсли текСтрокаФакт.Количество > 0 Тогда \n\t\t\t\tНоваяСтрока = ТаблицаРезультатСКодамиЦМТ.Добавить();\n\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\n\t\t\t\tтекСтрокаФакт.Количество = 0;\n\t\t\tКонецЕсли;\t\n\t\tИначе \n\t\t\tНовСтр = ТаблицаРезультатСКодамиЦМТ.Добавить();\n\t\t\tЗаполнитьЗначенияСвойств(НовСтр, текСтрокаФакт);\n\t\tКонецЕсли;   \t\n\tКонецЦикла; \n\t\n\tТаблицаРезультат = ТаблицаРезультатСКодамиЦМТ.Скопировать(); \n\n\tЗапросТЧ = Новый Запрос;\n\tЗапросТЧ.Текст =\n\t\"ВЫБРАТЬ\n\t|\tтбРезультат.Ссылка,\n\t|\tтбРезультат.Номенклатура,\n\t|\tтбРезультат.ПартияНоменклатуры,\n\t|\tтбРезультат.СтатусНоменклатуры,\n\t|\tтбРезультат.ШтрихкодКИЗ,\n\t|\tтбРезультат.УпаковкаНоменклатуры,\n\t|\tтбРезультат.КоличествоУпаковок,\n\t|\tтбРезультат.Количество,\n\t|\tтбРезультат.КлючСвязи\n\t|ПОМЕСТИТЬ втТабЧасть\n\t|ИЗ\n\t|\t&тбРезультат КАК тбРезультат\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tвтТабЧасть.Ссылка КАК Ссылка,\n\t|\tЕСТЬNULL(Бюро1440_ИдентификаторыОбменаНоменклатура.Идентификатор, \"\"\"\") КАК OwnerID,\n\t|\tЕСТЬNULL(Бюро1440_ИдентификаторыОбменаУпаковкаНоменклатуры.Идентификатор, \"\"\"\") КАК StorangeUnitID,\n\t|\tЕСТЬNULL(Бюро1440_ИдентификаторыОбменаПартияНоменклатуры.Идентификатор, \"\"\"\") КАК NomenclatureSeriesID, \n\t|\tвтТабЧасть.Номенклатура КАК Номенклатура,\n\t|\tвтТабЧасть.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tвтТабЧасть.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tвтТабЧасть.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tвтТабЧасть.ШтрихкодКИЗ КАК serialNumber,\n\t|\tвтТабЧасть.Количество КАК Quantity,\n\t|\tвтТабЧасть.КоличествоУпаковок КАК QuantityUnit,\n\t|\tвтТабЧасть.КлючСвязи КАК codeLine\n\t|ИЗ\n\t|\tвтТабЧасть КАК втТабЧасть\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаНоменклатура\n\t|\t\tПО втТабЧасть.Номенклатура = Бюро1440_ИдентификаторыОбменаНоменклатура.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаУпаковкаНоменклатуры\n\t|\t\tПО втТабЧасть.УпаковкаНоменклатуры = Бюро1440_ИдентификаторыОбменаУпаковкаНоменклатуры.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаПартияНоменклатуры\n\t|\t\tПО втТабЧасть.ПартияНоменклатуры = Бюро1440_ИдентификаторыОбменаПартияНоменклатуры.Объект\n\t|\n\t|УПОРЯДОЧИТЬ ПО\n\t|\tСсылка\";\n\tЗапросТЧ.УстановитьПараметр(\"тбРезультат\", ТаблицаРезультат);\n\n\tВыборкаТЧ = ЗапросТЧ.Выполнить().Выбрать();\n\n\tсткПоиска = Новый Структура(\"Ссылка\"); \n\t\n\tсткШапка \t= ВернутьСтруктуруШапкиПересчетов();\t\n\tПока Выборка.Следующий() Цикл \n\t\tЗаполнитьЗначенияСвойств(сткШапка, Выборка);\n        сткШапка.ID = ?(ЗначениеЗаполнено(Выборка.ID), Выборка.ID, XMLСтрока(Выборка.Ссылка));\n\t\tсткШапка.Date = XMLСтрока(Выборка.Date); \n\t\tЕсли ЗначениеЗаполнено(Выборка.Поклажедатель) Тогда\n\t\t\tсткШапка.CounterpartyIDP = ?(ЗначениеЗаполнено(Выборка.CounterpartyIDP), Выборка.CounterpartyIDP, XMLСтрока(Выборка.Поклажедатель));\n\t\tКонецЕсли;\n\t\tЕсли ЗначениеЗаполнено(Выборка.Организация) Тогда\n\t\t\tсткШапка.OrganizationID  = ?(ЗначениеЗаполнено(Выборка.OrganizationID), Выборка.OrganizationID, XMLСтрока(Выборка.Организация));\n\t\tКонецЕсли;\n\n\t\t// табличная часть\n\t\tЗаполнитьЗначенияСвойств(сткПоиска, Выборка);\n\t\tВыборкаТЧ.Сбросить();\n\t\tПока ВыборкаТЧ.НайтиСледующий(сткПоиска) Цикл\n\t\t\tсткТовары = ВернутьСтруктуруТаблицыТоваров();\n\t\t\tЗаполнитьЗначенияСвойств(сткТовары, ВыборкаТЧ);\t\n            сткТовары.OwnerID = ?(ЗначениеЗаполнено(сткТовары.OwnerID), сткТовары.OwnerID, XMLСтрока(ВыборкаТЧ.Номенклатура)); \n\t\t\t//Если ЗначениеЗаполнено(ВыборкаТЧ.УпаковкаНоменклатуры) Тогда \n\t\t\t//\tсткТовары.storageUnitID  = ?(ЗначениеЗаполнено(сткТовары.storageUnitID), сткТовары.storageUnitID, XMLСтрока(ВыборкаТЧ.УпаковкаНоменклатуры)); \n\t\t\t//КонецЕсли;\n\n\t\t\tсткШапка.Goods.Добавить(сткТовары);\n\t\tКонецЦикла;\n\t\t\t\t\n\tКонецЦикла;\n\t\n\tВозврат сткШапка;\n\t\nКонецФункции\n\nФункция ПолучитьДанныеПоАктуСверкиНедостачи(Объект)\n\t\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст =\n\t\"ВЫБРАТЬ\n\t|    усАктСверкиИнвентаризации.Ссылка КАК Ссылка\n\t|ПОМЕСТИТЬ втАкты\n\t|ИЗ\n\t|    Документ.усАктСверкиИнвентаризации КАК усАктСверкиИнвентаризации\n\t|ГДЕ\n\t|    усАктСверкиИнвентаризации.Ссылка = &Объект\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|    Ссылка\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втАкты.Ссылка КАК Ссылка,\n\t|    ЕСТЬNULL(Бюро1440_ИдентификаторыОбмена.Идентификатор, \"\"\"\") КАК ID,\n\t|    ЕСТЬNULL(Бюро1440_ИдентификаторыОбменаОрганизация.Идентификатор, \"\"\"\") КАК OrganizationID, \n\t|    ЕСТЬNULL(Бюро1440_ИдентификаторыОбменаПоклажедатель.Идентификатор, \"\"\"\") КАК CounterpartyIDP, \n\t|\t втАкты.Ссылка.Организация КАК Организация,\n\t|\t втАкты.Ссылка.Поклажедатель КАК Поклажедатель,\n\t|    втАкты.Ссылка.Номер КАК Number,\n\t|    втАкты.Ссылка.Дата КАК Date,\n\t|    втАкты.Ссылка.Комментарий КАК Description,\n\t| \t втАкты.Ссылка.ПометкаУдаления КАК IsMarked\n\t|ИЗ\n\t|    втАкты КАК втАкты\n\t|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбмена\n\t|        ПО втАкты.Ссылка = Бюро1440_ИдентификаторыОбмена.Объект\n\t|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаОрганизация\n\t|        ПО втАкты.Ссылка.Организация = Бюро1440_ИдентификаторыОбменаОрганизация.Объект \n\t|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаПоклажедатель\n\t|        ПО втАкты.Ссылка.Поклажедатель = Бюро1440_ИдентификаторыОбменаПоклажедатель.Объект\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втАкты.Ссылка КАК Ссылка,\n\t|    усАктСверкиИнвентаризацииНедостачи.Номенклатура КАК Номенклатура,\n\t|    усАктСверкиИнвентаризацииНедостачи.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|    усАктСверкиИнвентаризацииНедостачи.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|    СУММА(усАктСверкиИнвентаризацииНедостачи.Количество) КАК Количество,\n\t|    усАктСверкиИнвентаризацииНедостачи.КлючСвязи КАК КлючСвязи\n\t|ПОМЕСТИТЬ втСтроки\n\t|ИЗ\n\t|    втАкты КАК втАкты\n\t|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.усАктСверкиИнвентаризации.Недостачи КАК усАктСверкиИнвентаризацииНедостачи\n\t|        ПО (втАкты.Ссылка = усАктСверкиИнвентаризацииНедостачи.Ссылка)\n\t|ГДЕ\n\t|    усАктСверкиИнвентаризацииНедостачи.Количество > 0\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|    втАкты.Ссылка,\n\t|    усАктСверкиИнвентаризацииНедостачи.Номенклатура,\n\t|    усАктСверкиИнвентаризацииНедостачи.ПартияНоменклатуры,\n\t|    усАктСверкиИнвентаризацииНедостачи.СтатусНоменклатуры,\n\t|    усАктСверкиИнвентаризацииНедостачи.КлючСвязи\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втСтроки.Ссылка КАК Ссылка,\n\t|    втСтроки.Номенклатура КАК Номенклатура,\n\t|    втСтроки.ПартияНоменклатуры КАК ПартияНоменклатуры, \n\t|    втСтроки.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|    втСтроки.Количество КАК Количество,\n\t|    втСтроки.КлючСвязи КАК КлючСвязи\n\t|ИЗ\n\t|    втСтроки КАК втСтроки\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    усАктСверкиИнвентаризацииНедостачиКодыЦМТ.ШтрихкодКИЗ КАК ШтрихкодКИЗ,\n\t|    усАктСверкиИнвентаризацииНедостачиКодыЦМТ.ШтрихкодТранспортнойУпаковки КАК ШтрихкодТранспортнойУпаковки,\n\t|    втСтроки.Номенклатура КАК Номенклатура,\n\t|    втСтроки.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|    втСтроки.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|    усАктСверкиИнвентаризацииНедостачиКодыЦМТ.КлючСвязи КАК КлючСвязи,\n\t|    усАктСверкиИнвентаризацииНедостачиКодыЦМТ.Ссылка КАК Ссылка,\n\t|    1 КАК Количество\n\t|ИЗ\n\t|    втСтроки КАК втСтроки\n\t|        ЛЕВОЕ СОЕДИНЕНИЕ Документ.усАктСверкиИнвентаризации.НедостачиКодыЦМТ КАК усАктСверкиИнвентаризацииНедостачиКодыЦМТ\n\t|        ПО (втСтроки.Ссылка = усАктСверкиИнвентаризацииНедостачиКодыЦМТ.Ссылка)\n\t|            И (втСтроки.КлючСвязи = усАктСверкиИнвентаризацииНедостачиКодыЦМТ.КлючСвязи)\";\n\n\tЗапрос.УстановитьПараметр(\"Объект\", Объект);\n\n\tРезультат = Запрос.ВыполнитьПакет();\n\n\t// инвентаризация\n\tВыборка     \t = Результат[1].Выбрать();\n\tТаблицаРезультат = Результат[3].Выгрузить();  \n\tТаблицаЦМТ\t\t = Результат[4].Выгрузить();\n\tТаблицаРезультат = РазложитьНаБазовыеУпаковкиНоменклатуры(ТаблицаРезультат);\n\tТаблицаРезультат.Колонки.Добавить(\"ШтрихкодКИЗ\", Новый ОписаниеТипов(\"Строка\"));\n\t\n\tТаблицаРезультатСКодамиЦМТ = ТаблицаРезультат.СкопироватьКолонки(); \n\n\t//Разобъем тзФакт на коды ЦМТ \n\tмсвСтруктурПоискаЦМТ = Новый Массив;\n\tмсвСтруктурПоискаЦМТ.Добавить(Новый Структура(\"КлючСвязи\"));\n\t\n\tДля каждого текСтрокаФакт Из ТаблицаРезультат Цикл\n\t\tЕсли ЗначениеЗаполнено(текСтрокаФакт.ПартияНоменклатуры) И текСтрокаФакт.ПартияНоменклатуры.ВестиУчетПоКодамЦМТ Тогда \n\t\t\tДля Каждого текСтруктураПоиска Из мсвСтруктурПоискаЦМТ Цикл \n\t\t\t\tЗаполнитьЗначенияСвойств(текСтруктураПоиска, текСтрокаФакт);\n\t\t\t\t\n\t\t\t\tмсвСтрок = ТаблицаЦМТ.НайтиСтроки(текСтруктураПоиска);\n\t\t\t\tЕсли мсвСтрок.Количество() Тогда\n\t\t\t\t\tДля Каждого текСтрокаЦМТ Из мсвСтрок Цикл \n\t\t\t\t\t\tтекКоличество = Мин(текСтрокаЦМТ.Количество, текСтрокаФакт.Количество);\n\t\t\t\t\t\tЕсли текКоличество Тогда \n\t\t\t\t\t\t\tНоваяСтрока = ТаблицаРезультатСКодамиЦМТ.Добавить();\n\t\t\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\t\t\tНоваяСтрока.Количество           = 1; \n\t\t\t\t\t\t\tНоваяСтрока.КоличествоУпаковок   = 1;\n\t\t\t\t\t\t\tНоваяСтрока.ШтрихкодКИЗ\t\t\t = текСтрокаЦМТ.ШтрихкодКИЗ;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tтекСтрокаЦМТ.Количество = текСтрокаЦМТ.Количество - текКоличество;\n\t\t\t\t\t\t\tтекСтрокаФакт.Количество = текСтрокаФакт.Количество - текКоличество;\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\t\t\n\t\t\t\t\t\tЕсли текСтрокаФакт.Количество <= 0 Тогда\n\t\t\t\t\t\t\tПрервать;\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\tКонецЦикла;\n\t\t\t\t\t\n\t\t\t\t\tЕсли текСтрокаФакт.Количество > 0 Тогда \n\t\t\t\t\t\tНоваяСтрока = ТаблицаРезультатСКодамиЦМТ.Добавить();\n\t\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\t\tНоваяСтрока.Количество           = текСтрокаФакт.Количество;\n\t\t\t\t\t\t\n\t\t\t\t\t\tтекСтрокаФакт.Количество = 0;\n\t\t\t\t\tКонецЕсли;\t\n\t\t\t\t\t\n\t\t\t\t\tПрервать;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЦикла;\t\t\n\t\t\t\n\t\t\tЕсли текСтрокаФакт.Количество > 0 Тогда \n\t\t\t\tНоваяСтрока = ТаблицаРезультатСКодамиЦМТ.Добавить();\n\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\n\t\t\t\tтекСтрокаФакт.Количество = 0;\n\t\t\tКонецЕсли;\t\n\t\tИначе \n\t\t\tНовСтр = ТаблицаРезультатСКодамиЦМТ.Добавить();\n\t\t\tЗаполнитьЗначенияСвойств(НовСтр, текСтрокаФакт);\n\t\tКонецЕсли;   \t\n\tКонецЦикла; \n\t\n\tТаблицаРезультат = ТаблицаРезультатСКодамиЦМТ.Скопировать();\n\n\tЗапросТЧ = Новый Запрос;\n\tЗапросТЧ.Текст =\n\t\"ВЫБРАТЬ\n\t|\tтбРезультат.Ссылка,\n\t|\tтбРезультат.Номенклатура,\n\t|\tтбРезультат.ПартияНоменклатуры,\n\t|\tтбРезультат.СтатусНоменклатуры,\n\t|\tтбРезультат.ШтрихкодКИЗ,\n\t|\tтбРезультат.УпаковкаНоменклатуры,\n\t|\tтбРезультат.КоличествоУпаковок,\n\t|\tтбРезультат.Количество,\n\t|\tтбРезультат.КлючСвязи\n\t|ПОМЕСТИТЬ втТабЧасть\n\t|ИЗ\n\t|\t&тбРезультат КАК тбРезультат\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tвтТабЧасть.Ссылка КАК Ссылка,\n\t|\tЕСТЬNULL(Бюро1440_ИдентификаторыОбменаНоменклатура.Идентификатор, \"\"\"\") КАК OwnerID,\n\t|\tЕСТЬNULL(Бюро1440_ИдентификаторыОбменаУпаковкаНоменклатуры.Идентификатор, \"\"\"\") КАК StorangeUnitID,\n\t|\tЕСТЬNULL(Бюро1440_ИдентификаторыОбменаПартияНоменклатуры.Идентификатор, \"\"\"\") КАК NomenclatureSeriesID, \n\t|\tвтТабЧасть.Номенклатура КАК Номенклатура,\n\t|\tвтТабЧасть.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tвтТабЧасть.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tвтТабЧасть.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tвтТабЧасть.ШтрихкодКИЗ КАК serialNumber,\n\t|\tвтТабЧасть.Количество КАК Quantity,\n\t|\tвтТабЧасть.КоличествоУпаковок КАК QuantityUnit,\n\t|\tвтТабЧасть.КлючСвязи КАК codeLine\n\t|ИЗ\n\t|\tвтТабЧасть КАК втТабЧасть\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаНоменклатура\n\t|\t\tПО втТабЧасть.Номенклатура = Бюро1440_ИдентификаторыОбменаНоменклатура.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаУпаковкаНоменклатуры\n\t|\t\tПО втТабЧасть.УпаковкаНоменклатуры = Бюро1440_ИдентификаторыОбменаУпаковкаНоменклатуры.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаПартияНоменклатуры\n\t|\t\tПО втТабЧасть.ПартияНоменклатуры = Бюро1440_ИдентификаторыОбменаПартияНоменклатуры.Объект\n\t|\n\t|УПОРЯДОЧИТЬ ПО\n\t|\tСсылка\";\n\tЗапросТЧ.УстановитьПараметр(\"тбРезультат\", ТаблицаРезультат);\n\n\tВыборкаТЧ = ЗапросТЧ.Выполнить().Выбрать();\n\n\tсткПоиска = Новый Структура(\"Ссылка\");      \n\tсткШапка \t= ВернутьСтруктуруШапкиПересчетов();\n\tПока Выборка.Следующий() Цикл \n\t\tЗаполнитьЗначенияСвойств(сткШапка, Выборка);\n        сткШапка.ID = XMLСтрока(Выборка.Ссылка);\n\t\tсткШапка.Date = XMLСтрока(Выборка.Date); \n\t\tЕсли ЗначениеЗаполнено(Выборка.Поклажедатель) Тогда\n\t\t\tсткШапка.CounterpartyIDP = ?(ЗначениеЗаполнено(Выборка.CounterpartyIDP), Выборка.CounterpartyIDP, XMLСтрока(Выборка.Поклажедатель));\n\t\tКонецЕсли;\n\t\tЕсли ЗначениеЗаполнено(Выборка.Организация) Тогда\n\t\t\tсткШапка.OrganizationID  = ?(ЗначениеЗаполнено(Выборка.OrganizationID), Выборка.OrganizationID, XMLСтрока(Выборка.Организация));\n\t\tКонецЕсли;\n\n\t\t// табличная часть\n\t\tЗаполнитьЗначенияСвойств(сткПоиска, Выборка);\n\t\tВыборкаТЧ.Сбросить();\n\t\tПока ВыборкаТЧ.НайтиСледующий(сткПоиска) Цикл\n\t\t\tсткТовары = ВернутьСтруктуруТаблицыТоваров();\n\t\t\tЗаполнитьЗначенияСвойств(сткТовары, ВыборкаТЧ);\t\n            сткТовары.OwnerID = ?(ЗначениеЗаполнено(сткТовары.OwnerID), сткТовары.OwnerID, XMLСтрока(ВыборкаТЧ.Номенклатура)); \n\t\t\t//Если ЗначениеЗаполнено(ВыборкаТЧ.УпаковкаНоменклатуры) Тогда \n\t\t\t//\tсткТовары.storageUnitID  = ?(ЗначениеЗаполнено(сткТовары.storageUnitID), сткТовары.storageUnitID, XMLСтрока(ВыборкаТЧ.УпаковкаНоменклатуры)); \n\t\t\t//КонецЕсли;\n\n\t\t\tсткШапка.Goods.Добавить(сткТовары);\n\t\tКонецЦикла;\n\t\t\n\tКонецЦикла; \n\t\n    Возврат сткШапка;\n\t\nКонецФункции\n\nФункция ПолучитьДанныеПоЗадачеПересчетНаИзменениеКачества(Объект)\n\t\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст =\n\t\"ВЫБРАТЬ\n\t|    усЗадачаПересчет.Ссылка КАК Ссылка,\n\t|    усЗадачаПересчет.Номер КАК Номер,\n\t|    усЗадачаПересчет.Дата КАК Дата,\n\t|    усЗадачаПересчет.Комментарий КАК Комментарий,\n\t|    усЗадачаПересчет.ПометкаУдаления КАК ПометкаУдаления\n\t|ПОМЕСТИТЬ втЗадачаПересчет\n\t|ИЗ\n\t|    Документ.усЗадачаПересчет КАК усЗадачаПересчет\n\t|ГДЕ\n\t|    усЗадачаПересчет.Ссылка = &Объект\n\t|    И усЗадачаПересчет.ТипЗадачи = ЗНАЧЕНИЕ(Перечисление.усТипыЗадачПересчета.ИзменениеКачества)\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|    Ссылка\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втЗадачаПересчет.Ссылка КАК Пересчет,\n\t|    втЗадачаПересчет.Номер КАК Number,\n\t|    втЗадачаПересчет.Дата КАК Date,\n\t|    втЗадачаПересчет.Комментарий КАК Description,\n\t|    втЗадачаПересчет.ПометкаУдаления КАК IsMarked\n\t|ИЗ\n\t|    втЗадачаПересчет КАК втЗадачаПересчет\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    ВЫБОР\n\t|        КОГДА усОстаткиТоваров.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)\n\t|            ТОГДА усОстаткиТоваров.Количество\n\t|        ИНАЧЕ -усОстаткиТоваров.Количество\n\t|    КОНЕЦ КАК Количество,\n\t|    ВЫБОР\n\t|        КОГДА усОстаткиТоваров.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)\n\t|            ТОГДА Истина\n\t|        ИНАЧЕ Ложь\n\t|    КОНЕЦ КАК ЭтоПриход,\n\t|    усОстаткиТоваров.КлючАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,\n\t|    усОстаткиТоваров.КлючАналитикиУчетаНоменклатуры.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|    усОстаткиТоваров.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|    ВЫРАЗИТЬ(усОстаткиТоваров.Регистратор КАК Документ.усДействиеПоПересчету).Задача КАК Пересчет,\n\t|    усОстаткиТоваров.НомерСтроки КАК НомерСтроки,\n\t|    усОстаткиТоваров.Контейнер КАК Контейнер\n\t|ИЗ\n\t|    РегистрНакопления.усОстаткиТоваров КАК усОстаткиТоваров\n\t|ГДЕ\n\t|    усОстаткиТоваров.Регистратор ССЫЛКА Документ.усДействиеПоПересчету\n\t|    И усОстаткиТоваров.Регистратор.Задача В\n\t|            (ВЫБРАТЬ\n\t|                втЗадачаПересчет.Ссылка\n\t|            ИЗ\n\t|                втЗадачаПересчет)\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    усЗадачаПересчетКодыЦМТ.ШтрихкодКИЗ КАК ШтрихкодКИЗ,\n\t|    ВЫБОР\n\t|        КОГДА усЗадачаПересчетКодыЦМТ.КоличествоПлан > 0\n\t|            ТОГДА -1\n\t|        ИНАЧЕ 1\n\t|    КОНЕЦ КАК Количество, \n\t|    ВЫБОР\n\t|        КОГДА усЗадачаПересчетКодыЦМТ.КоличествоПлан > 0\n\t|            ТОГДА Ложь\n\t|        ИНАЧЕ Истина\n\t|    КОНЕЦ КАК ЭтоПриход,\n\t|    усЗадачаПересчетКодыЦМТ.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|    усЗадачаПересчетКодыЦМТ.ШтрихкодТранспортнойУпаковки КАК ШтрихкодТранспортнойУпаковки,\n\t|    усЗадачаПересчетКодыЦМТ.Ссылка КАК Пересчет,\n\t|    усЗадачаПересчетКодыЦМТ.Номенклатура КАК Номенклатура,\n\t|    усЗадачаПересчетКодыЦМТ.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|    усЗадачаПересчетКодыЦМТ.Контейнер КАК Контейнер\n\t|ИЗ\n\t|    втЗадачаПересчет КАК втЗадачаПересчет\n\t|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.усЗадачаПересчет.КодыЦМТ КАК усЗадачаПересчетКодыЦМТ\n\t|        ПО втЗадачаПересчет.Ссылка = усЗадачаПересчетКодыЦМТ.Ссылка\";\n\t\n\tЗапрос.УстановитьПараметр(\"Объект\", Объект); \n\n\tРезультат = Запрос.ВыполнитьПакет();\n\n\tВыборка     \t = Результат[1].Выбрать();\n\tТаблицаРезультат = Результат[2].Выгрузить();  \n\tТаблицаЦМТ\t\t = Результат[3].Выгрузить();\n    ТаблицаРезультат = РазложитьНаБазовыеУпаковкиНоменклатуры(ТаблицаРезультат);\n\tТаблицаРезультат.Колонки.Добавить(\"ШтрихкодКИЗ\", Новый ОписаниеТипов(\"Строка\"));\n\t\n\tТаблицаРезультатСКодамиЦМТ = ТаблицаРезультат.СкопироватьКолонки(); \n\t\n\t//Разобъем тзФакт на коды ЦМТ \n\tмсвСтруктурПоискаЦМТ = Новый Массив;\n\tмсвСтруктурПоискаЦМТ.Добавить(Новый Структура(\"Пересчет, ЭтоПриход, Номенклатура, СтатусНоменклатуры, ПартияНоменклатуры, Контейнер\"));\n\tмсвСтруктурПоискаЦМТ.Добавить(Новый Структура(\"Пересчет, ЭтоПриход, Номенклатура, СтатусНоменклатуры, ПартияНоменклатуры\"));\n\tмсвСтруктурПоискаЦМТ.Добавить(Новый Структура(\"Пересчет, ЭтоПриход, Номенклатура, СтатусНоменклатуры\"));\n\tмсвСтруктурПоискаЦМТ.Добавить(Новый Структура(\"Пересчет, ЭтоПриход, Номенклатура\"));\n\t\n\tДля каждого текСтрокаФакт Из ТаблицаРезультат Цикл\n\t\tЕсли ЗначениеЗаполнено(текСтрокаФакт.ПартияНоменклатуры) И текСтрокаФакт.ПартияНоменклатуры.ВестиУчетПоКодамЦМТ Тогда \n\t\t\tДля Каждого текСтруктураПоиска Из мсвСтруктурПоискаЦМТ Цикл \n\t\t\t\tЗаполнитьЗначенияСвойств(текСтруктураПоиска, текСтрокаФакт);\n\t\t\t\t\n\t\t\t\tмсвСтрок = ТаблицаЦМТ.НайтиСтроки(текСтруктураПоиска);\n\t\t\t\tЕсли мсвСтрок.Количество() Тогда\n\t\t\t\t\tДля Каждого текСтрокаЦМТ Из мсвСтрок Цикл  \n\t\t\t\t\t\tЕсли текСтрокаЦМТ.Количество = 0 Тогда  \n\t\t\t\t\t\t\tПродолжить;\t\n\t\t\t\t\t\tКонецЕсли;  \n\t\t\t\t\t\tЕсли текСтрокаФакт.ЭтоПриход Тогда \n\t\t\t\t\t\t\tтекКоличество = Мин(текСтрокаЦМТ.Количество, текСтрокаФакт.Количество);  \n\t\t\t\t\t\tИначе\n\t\t\t\t\t\t\tтекКоличество = Макс(текСтрокаЦМТ.Количество, текСтрокаФакт.Количество);\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\t\tЕсли текКоличество Тогда \n\t\t\t\t\t\t\tНоваяСтрока = ТаблицаРезультатСКодамиЦМТ.Добавить();\n\t\t\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\t\t\tНоваяСтрока.Количество           = текСтрокаЦМТ.Количество;\n\t\t\t\t\t\t\tНоваяСтрока.КоличествоУпаковок   = текСтрокаЦМТ.Количество;\n\t\t\t\t\t\t\tНоваяСтрока.ШтрихкодКИЗ\t\t\t = текСтрокаЦМТ.ШтрихкодКИЗ;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tтекСтрокаЦМТ.Количество = текСтрокаЦМТ.Количество - текКоличество;\n\t\t\t\t\t\t\tтекСтрокаФакт.Количество = текСтрокаФакт.Количество - текКоличество; \n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\t\t\n\t\t\t\t\t\tЕсли текСтрокаФакт.Количество = 0 Тогда\n\t\t\t\t\t\t\tПрервать;\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\tКонецЦикла;\n\t\t\t\t\t\n\t\t\t\t\tЕсли текСтрокаФакт.Количество <> 0 Тогда \n\t\t\t\t\t\tНоваяСтрока = ТаблицаРезультатСКодамиЦМТ.Добавить();\n\t\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\t\tНоваяСтрока.Количество           = текСтрокаФакт.Количество;\n\t\t\t\t\t\t\n\t\t\t\t\t\tтекСтрокаФакт.Количество = 0;\n\t\t\t\t\tКонецЕсли;\t\n\t\t\t\t\t\n\t\t\t\t\tПрервать;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЦикла;\t\t\n\t\t\t\n\t\t\tЕсли текСтрокаФакт.Количество <> 0 Тогда \n\t\t\t\tНоваяСтрока = ТаблицаРезультатСКодамиЦМТ.Добавить();\n\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\n\t\t\t\tтекСтрокаФакт.Количество = 0;\n\t\t\tКонецЕсли;\t\n\t\tИначе \n\t\t\tНовСтр = ТаблицаРезультатСКодамиЦМТ.Добавить();\n\t\t\tЗаполнитьЗначенияСвойств(НовСтр, текСтрокаФакт);\n\t\tКонецЕсли;   \t\n\tКонецЦикла; \n\t\n\tТаблицаРезультат = ТаблицаРезультатСКодамиЦМТ.Скопировать();\n\t\n\tТаблицаРезультат.Свернуть(\"Пересчет, НомерСтроки, Номенклатура, ПартияНоменклатуры, УпаковкаНоменклатуры, СтатусНоменклатуры, ШтрихкодКИЗ\", \"КоличествоУпаковок, Количество\");\n\t\n\tЗапросТЧ = Новый Запрос;\n\tЗапросТЧ.Текст =\n\t\"ВЫБРАТЬ\n\t|\tтбРезультат.Пересчет,\n\t|\tтбРезультат.Номенклатура,\n\t|\tтбРезультат.ПартияНоменклатуры,\n\t|\tтбРезультат.УпаковкаНоменклатуры,\n\t|\tтбРезультат.СтатусНоменклатуры,\n\t|\tтбРезультат.ШтрихкодКИЗ,\n\t|\tтбРезультат.КоличествоУпаковок,\n\t|\tтбРезультат.Количество,\n\t|\tтбРезультат.НомерСтроки\t\n\t|ПОМЕСТИТЬ втТабЧасть\n\t|ИЗ\n\t|\t&тбРезультат КАК тбРезультат\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tвтТабЧасть.Пересчет КАК Пересчет,\n\t|\tЕСТЬNULL(Бюро1440_ИдентификаторыОбменаНоменклатура.Идентификатор, \"\"\"\") КАК OwnerID,\n\t|\tЕСТЬNULL(Бюро1440_ИдентификаторыОбменаУпаковкаНоменклатуры.Идентификатор, \"\"\"\") КАК StorangeUnitID,\n\t|\tЕСТЬNULL(Бюро1440_ИдентификаторыОбменаПартияНоменклатуры.Идентификатор, \"\"\"\") КАК NomenclatureSeriesID, \n\t|\tвтТабЧасть.Номенклатура КАК Номенклатура,\n\t|\tвтТабЧасть.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tвтТабЧасть.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tвтТабЧасть.ШтрихкодКИЗ КАК serialNumber,\n\t|\tвтТабЧасть.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tвтТабЧасть.Количество КАК Quantity,\n\t|\tвтТабЧасть.КоличествоУпаковок КАК QuantityUnit,\n\t|\tСтрока(втТабЧасть.НомерСтроки) КАК codeLine\n\t|ИЗ\n\t|\tвтТабЧасть КАК втТабЧасть\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаНоменклатура\n\t|\t\tПО втТабЧасть.Номенклатура = Бюро1440_ИдентификаторыОбменаНоменклатура.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаУпаковкаНоменклатуры\n\t|\t\tПО втТабЧасть.УпаковкаНоменклатуры = Бюро1440_ИдентификаторыОбменаУпаковкаНоменклатуры.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Бюро1440_ИдентификаторыОбменаПартияНоменклатуры\n\t|\t\tПО втТабЧасть.ПартияНоменклатуры = Бюро1440_ИдентификаторыОбменаПартияНоменклатуры.Объект\n\t|\n\t|УПОРЯДОЧИТЬ ПО\n\t|\tПересчет\";\n\tЗапросТЧ.УстановитьПараметр(\"тбРезультат\", ТаблицаРезультат);\n\n\tВыборкаТЧ = ЗапросТЧ.Выполнить().Выбрать();\n\n\tсткПоиска = Новый Структура(\"Пересчет\");      \n\tсткШапка \t= ВернутьСтруктуруШапкиПересчетов();\n\n\tПока Выборка.Следующий() Цикл \n\t\tЗаполнитьЗначенияСвойств(сткШапка, Выборка);\n        сткШапка.ID = XMLСтрока(Выборка.Пересчет);\n\t\tсткШапка.Date = XMLСтрока(Выборка.Date); \n\n\t\t// табличная часть\n\t\tЗаполнитьЗначенияСвойств(сткПоиска, Выборка);\n\t\tВыборкаТЧ.Сбросить();\n\t\tПока ВыборкаТЧ.НайтиСледующий(сткПоиска) Цикл\n\t\t\tсткТовары = ВернутьСтруктуруТаблицыТоваров();\n\t\t\tЗаполнитьЗначенияСвойств(сткТовары, ВыборкаТЧ);\t\n            сткТовары.OwnerID = ?(ЗначениеЗаполнено(сткТовары.OwnerID), сткТовары.OwnerID, XMLСтрока(ВыборкаТЧ.Номенклатура)); \n\t\t\t//Если ЗначениеЗаполнено(ВыборкаТЧ.УпаковкаНоменклатуры) Тогда \n\t\t\t//\tсткТовары.storageUnitID  = ?(ЗначениеЗаполнено(сткТовары.storageUnitID), сткТовары.storageUnitID, XMLСтрока(ВыборкаТЧ.УпаковкаНоменклатуры)); \n\t\t\t//КонецЕсли; \n\t\t\tсткТовары.Вставить(\"Status\", Строка(ВыборкаТЧ.СтатусНоменклатуры));\n\n\t\t\tсткШапка.Goods.Добавить(сткТовары);\n\t\tКонецЦикла;\n\t\t\t\n\tКонецЦикла;\n\t\n\tВозврат сткШапка;\n\t\nКонецФункции\n\n//++ Николаев ситек 21.08.24  ICT-37999\nФункция ПолучитьДанныеЗаказаНаОтгрузкуВСтатусеОтобран(Объект)  \n\t\n\tВыгружатьПартию = Ложь;\n\tВыгружатьОтборОтгрузкуПоКонтейнерно = Ложь;\n\tРаскладыватьПоУпаковкам = Ложь;\n\tВыгружатьСН = Ложь;    \n\t\n\t//Т.к. частично строки уже могут быть отгружены, в учет надо брать и отгруженные и отобранные товары\n\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст =\n\t\"ВЫБРАТЬ\n\t|\tусЗаказНаОтгрузку.Ссылка КАК Ссылка,\n\t|\tусЗаказНаОтгрузку.Дата,\n\t|\tусЗаказНаОтгрузку.Номер,\n\t|\tусЗаказНаОтгрузку.НаправлениеОтгрузки,\n\t|\tусЗаказНаОтгрузку.Комментарий,\n\t|\tусЗаказНаОтгрузку.Рейс.НомерКИС КАК РейсНомерКИС,\n\t|\tусЗаказНаОтгрузку.Рейс.Номер КАК РейсНомер,\n\t|\tусЗаказНаОтгрузку.Рейс.ТранспортноеСредство КАК Транспорт,\n\t|\tусЗаказНаОтгрузку.Организация КАК Организация,\n\t|\tусЗаказНаОтгрузку.Поклажедатель КАК Поклажедатель, \n\t|\tусЗаказНаОтгрузку.Контрагент КАК Контрагент,\n\t|\tусСтатусыЗаказовНаОтгрузку.ДатаОтобрано КАК ДатаОтобрано,\n\t|\tусСтатусыЗаказовНаОтгрузку.ДатаГотовоКОтгрузке КАК ДатаГотовоКОтгрузке,\n\t|\tусСтатусыЗаказовНаОтгрузку.ДатаОтгружено КАК ДатаОтгружено,\n\t|\tусЗаказНаОтгрузку.Маршрут КАК Маршрут\n\t|ПОМЕСТИТЬ втЗаказы\n\t|ИЗ\n\t|\t Документ.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t|\t\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.усСтатусыЗаказовНаОтгрузку КАК усСтатусыЗаказовНаОтгрузку\n\t|\t\t\tПО усЗаказНаОтгрузку.Ссылка = усСтатусыЗаказовНаОтгрузку.ЗаказНаОтгрузку\n\t|ГДЕ\n\t|\tусСтатусыЗаказовНаОтгрузку.Статус.Порядок >= 7\n\t|   И усСтатусыЗаказовНаОтгрузку.Статус.Порядок <= 9\n\t|\tИ усЗаказНаОтгрузку.Ссылка = &ОбъектОтбора\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tвтЗаказы.Ссылка КАК Ссылка,\n\t|\tЕСТЬNULL(axИдентификаторыОбмена.Идентификатор, \"\"\"\") КАК ID,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаКонтрагент.Идентификатор, \"\"\"\") КАК counterpartyID,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаПоклажедатель.Идентификатор, \"\"\"\") КАК counterpartyIDP,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаОрганизация.Идентификатор, \"\"\"\") КАК OrganizationID,\n\t|\tвтЗаказы.Организация КАК Организация,\n\t|\tвтЗаказы.Поклажедатель КАК Поклажедатель, \n\t|\tвтЗаказы.Контрагент КАК Контрагент,\n\t|\tвтЗаказы.Номер КАК Number,\n\t|\tВЫБОР\n\t|\t\tКОГДА втЗаказы.НаправлениеОтгрузки В (ЗНАЧЕНИЕ(Справочник.усНаправлениеОтгрузки.ОтгрузкаКлиенту), ЗНАЧЕНИЕ(Справочник.усНаправлениеОтгрузки.Самовывоз))\n\t|\t\t\tТОГДА \"\"ОтгрузкаКлиенту\"\"\n\t|\t\tКОГДА втЗаказы.НаправлениеОтгрузки = ЗНАЧЕНИЕ(Справочник.усНаправлениеОтгрузки.ОтгрузкаНаСклад)\n\t|\t\t\tТОГДА \"\"ОтгрузкаНаСклад\"\"\n\t|\t\tКОГДА втЗаказы.НаправлениеОтгрузки = ЗНАЧЕНИЕ(Справочник.усНаправлениеОтгрузки.ВозвратПоставщику)\n\t|\t\t\tТОГДА \"\"ВозвратПоставщику\"\"\n\t|\t\tИНАЧЕ ПРЕДСТАВЛЕНИЕ(втЗаказы.НаправлениеОтгрузки)\n\t|\tКОНЕЦ КАК OrderSource,\n\t|\tвтЗаказы.ДатаОтобрано КАК Date,\n\t|\tвтЗаказы.ДатаГотовоКОтгрузке КАК DateReadyForShipment,\n\t|\tвтЗаказы.ДатаОтгружено КАК DateEndOfShipment,\n\t|\tвтЗаказы.Комментарий КАК Description,\n\t|\tЕСТЬNULL(втЗаказы.РейсНомерКИС, ЕСТЬNULL(втЗаказы.РейсНомер, \"\"\"\")) КАК TransportationNumber,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаМаршрут.Идентификатор, \"\"\"\") КАК RouteID,\n\t|\tЕСТЬNULL(втЗаказы.Транспорт.Штрихкод, \"\"\"\") КАК TransportID,\n\t|\tЕСТЬNULL(втЗаказы.Организация.Код, \"\"\"\") КАК WarehouseID,\n\t|\tПРЕДСТАВЛЕНИЕ(втЗаказы.Маршрут) КАК RouteName\n\t|ИЗ\n\t|\tвтЗаказы КАК втЗаказы\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбмена\n\t|\t\tПО втЗаказы.Ссылка = axИдентификаторыОбмена.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаМаршрут\n\t|\t\tПО втЗаказы.Маршрут = axИдентификаторыОбменаМаршрут.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаКонтрагент\n\t|\t\tПО втЗаказы.Контрагент = axИдентификаторыОбменаКонтрагент.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаПоклажедатель\n\t|\t\tПО втЗаказы.Поклажедатель = axИдентификаторыОбменаПоклажедатель.Объект \n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаОрганизация\n\t|\t\tПО втЗаказы.Организация = axИдентификаторыОбменаОрганизация.Объект\n\t|\n\t|УПОРЯДОЧИТЬ ПО\n\t|\tСсылка\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////  \n\t|ВЫБРАТЬ\n\t|    усКонтрольОтгрузки.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,\n\t|    усКонтрольОтгрузки.НомерКонтейнера КАК НомерКонтейнера,\n\t|    усКонтрольОтгрузки.Номенклатура КАК Номенклатура,\n\t|    усКонтрольОтгрузки.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|    усКонтрольОтгрузки.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|    СУММА(усКонтрольОтгрузки.КоличествоОтгружено - усКонтрольОтгрузки.КоличествоВозврат) КАК Количество\n\t|ПОМЕСТИТЬ втОтгружено\n\t|ИЗ\n\t|    втЗаказы КАК втЗаказы\n\t|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.усКонтрольОтгрузки КАК усКонтрольОтгрузки\n\t|        ПО втЗаказы.Ссылка = усКонтрольОтгрузки.ЗаказНаОтгрузку\n\t|ГДЕ\n\t|    усКонтрольОтгрузки.КоличествоОтгружено <> 0\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|    усКонтрольОтгрузки.ЗаказНаОтгрузку,\n\t|    усКонтрольОтгрузки.Номенклатура,\n\t|    усКонтрольОтгрузки.СтатусНоменклатуры,\n\t|    усКонтрольОтгрузки.ПартияНоменклатуры,\n\t|    усКонтрольОтгрузки.НомерКонтейнера\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    усОстаткиТоваровОстатки.Контейнер КАК Контейнер,\n\t|    усОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры КАК КлючАналитикиУчетаНоменклатуры,\n\t|    усОстаткиТоваровОстатки.КоличествоОстаток КАК КоличествоОстаток\n\t|ПОМЕСТИТЬ втОтобрано\n\t|ИЗ\n\t|    РегистрНакопления.усОстаткиТоваров.Остатки(\n\t|            ,\n\t|            Контейнер.ДокументПривязки В\n\t|                (ВЫБРАТЬ\n\t|                    втЗаказы.Ссылка\n\t|                ИЗ\n\t|                    втЗаказы КАК втЗаказы)) КАК усОстаткиТоваровОстатки\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втОтобрано.Контейнер.ДокументПривязки КАК ЗаказНаОтгрузку,\n\t|    втОтобрано.Контейнер.Наименование КАК НомерКонтейнера,\n\t|    втОтобрано.КлючАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,\n\t|    втОтобрано.КлючАналитикиУчетаНоменклатуры.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|    втОтобрано.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|    СУММА(втОтобрано.КоличествоОстаток) КАК Количество\n\t|ПОМЕСТИТЬ втОтобраноФакт\n\t|ИЗ\n\t|    втОтобрано КАК втОтобрано\n\t|ГДЕ\n\t|    втОтобрано.КоличествоОстаток <> 0\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|    втОтобрано.Контейнер.ДокументПривязки,\n\t|    втОтобрано.Контейнер.Наименование,\n\t|    втОтобрано.КлючАналитикиУчетаНоменклатуры.Номенклатура,\n\t|    втОтобрано.КлючАналитикиУчетаНоменклатуры.СтатусНоменклатуры,\n\t|    втОтобрано.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втОтгружено.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,\n\t|    втОтгружено.НомерКонтейнера КАК НомерКонтейнера,\n\t|    втОтгружено.Номенклатура КАК Номенклатура,\n\t|    втОтгружено.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|    втОтгружено.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|    втОтгружено.Количество КАК Количество\n\t|ИЗ\n\t|    втОтгружено КАК втОтгружено\n\t|\n\t|ОБЪЕДИНИТЬ ВСЕ\n\t|\n\t|ВЫБРАТЬ\n\t|    втОтобраноФакт.ЗаказНаОтгрузку,\n\t|    втОтобраноФакт.НомерКонтейнера,\n\t|    втОтобраноФакт.Номенклатура,\n\t|    втОтобраноФакт.СтатусНоменклатуры,\n\t|    втОтобраноФакт.ПартияНоменклатуры,\n\t|    втОтобраноФакт.Количество\n\t|ИЗ\n\t|    втОтобраноФакт КАК втОтобраноФакт\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|\";  \n\n\tЕсли РаскладыватьПоУпаковкам Тогда\n\t\tЗапрос.Текст = Запрос.Текст +\n\t\t\"ВЫБРАТЬ\n\t\t|\tусКонтрольОтгрузки.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,\n\t\t|\tВЫРАЗИТЬ(усКонтрольОтгрузки.Регистратор КАК Документ.усСтрокаЗаказаНаОтгрузку).ПланОтгрузки КАК ПланОтгрузки,\n\t\t|\tВЫРАЗИТЬ(усКонтрольОтгрузки.Регистратор КАК Документ.усСтрокаЗаказаНаОтгрузку).КодСтрокиКИС КАК КодСтрокиКИС,\n\t\t|\tусКонтрольОтгрузки.Номенклатура КАК Номенклатура,\n\t\t|\tЗНАЧЕНИЕ(Справочник.усУпаковкиНоменклатуры.ПустаяСсылка) КАК УпаковкаНоменклатуры,\n\t\t|\t1 КАК Коэффициент,\n\t\t|\tусКонтрольОтгрузки.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t\t|\tусКонтрольОтгрузки.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t\t|\tусКонтрольОтгрузки.НомерКонтейнера КАК НомерКонтейнера,\n\t\t|\tСУММА(усКонтрольОтгрузки.КоличествоЗапланировано) КАК КоличествоУпаковок,\n\t\t|\tСУММА(усКонтрольОтгрузки.КоличествоЗапланировано) КАК Количество\n\t\t|ИЗ\n\t\t|\tвтЗаказы КАК втЗаказы\n\t\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.усКонтрольОтгрузки КАК усКонтрольОтгрузки\n\t\t|\t\tПО втЗаказы.Ссылка = усКонтрольОтгрузки.ЗаказНаОтгрузку\n\t\t|ГДЕ\n\t\t|\tусКонтрольОтгрузки.КоличествоЗапланировано <> 0\n\t\t|\n\t\t|СГРУППИРОВАТЬ ПО\n\t\t|\tусКонтрольОтгрузки.ЗаказНаОтгрузку,\n\t\t|\tВЫРАЗИТЬ(усКонтрольОтгрузки.Регистратор КАК Документ.усСтрокаЗаказаНаОтгрузку).ПланОтгрузки,\n\t\t|\tВЫРАЗИТЬ(усКонтрольОтгрузки.Регистратор КАК Документ.усСтрокаЗаказаНаОтгрузку).КодСтрокиКИС,\n\t\t|\tусКонтрольОтгрузки.Номенклатура,\n\t\t|\tусКонтрольОтгрузки.СтатусНоменклатуры,\n\t\t|\tусКонтрольОтгрузки.ПартияНоменклатуры,\n\t\t|\tусКонтрольОтгрузки.НомерКонтейнера\";\n\tИначе\n\t\tЗапрос.Текст = Запрос.Текст +\n\t\t\"ВЫБРАТЬ\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Владелец КАК ЗаказНаОтгрузку,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.ПланОтгрузки КАК ПланОтгрузки,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.КодСтрокиКИС КАК КодСтрокиКИС,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Номенклатура КАК Номенклатура,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t\t|\tЕСТЬNULL(усСтрокаЗаказаНаОтгрузку.УпаковкаНоменклатуры.Коэффициент, 1) КАК Коэффициент,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.НомерКонтейнера КАК НомерКонтейнера,\n\t\t|\tСУММА(усСтрокаЗаказаНаОтгрузку.Количество) КАК Количество,\n\t\t|\tСУММА(усСтрокаЗаказаНаОтгрузку.КоличествоУпаковок) КАК КоличествоУпаковок\n\t\t|ИЗ\n\t\t|\tвтЗаказы КАК втЗаказы\n\t\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.усСтрокаЗаказаНаОтгрузку КАК усСтрокаЗаказаНаОтгрузку\n\t\t|\t\tПО втЗаказы.Ссылка = усСтрокаЗаказаНаОтгрузку.Владелец\n\t\t|ГДЕ\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Проведен\n\t\t|\tИ усСтрокаЗаказаНаОтгрузку.Количество <> 0\n\t\t|\n\t\t|СГРУППИРОВАТЬ ПО\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Владелец,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.ПланОтгрузки,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.КодСтрокиКИС,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Номенклатура,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.УпаковкаНоменклатуры,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.СтатусНоменклатуры,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.ПартияНоменклатуры,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.НомерКонтейнера,\n\t\t|\tЕСТЬNULL(усСтрокаЗаказаНаОтгрузку.УпаковкаНоменклатуры.Коэффициент, 1)\";\n\tКонецЕсли;\n\n\tЗапрос.Текст = Запрос.Текст +\n    \"\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втЗаказы.Ссылка КАК Ссылка,\n\t|    усЗадачаПеремещениеТовараКодыЦМТ.ШтрихкодКИЗ КАК ШтрихкодКИЗ\n\t|ПОМЕСТИТЬ втШтрихкодыКИЗ\n\t|ИЗ\n\t|    втЗаказы КАК втЗаказы\n\t|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.усЗадачаПеремещениеТовара.КодыЦМТ КАК усЗадачаПеремещениеТовараКодыЦМТ\n\t|        ПО (втЗаказы.Ссылка = усЗадачаПеремещениеТовараКодыЦМТ.Ссылка.ДокументОснование)\n\t|ГДЕ\n\t|    усЗадачаПеремещениеТовараКодыЦМТ.Ссылка.ТипЗадачи = ЗНАЧЕНИЕ(Перечисление.усТипыЗадач.Отгрузка)\n\t|\n\t|ОБЪЕДИНИТЬ ВСЕ\n\t|\n\t|ВЫБРАТЬ\n\t|    втЗаказы.Ссылка,\n\t|    усЗадачаПеремещениеКонтейнераКодыЦМТ.ШтрихкодКИЗ\n\t|ИЗ\n\t|    втЗаказы КАК втЗаказы\n\t|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.усЗадачаПеремещениеКонтейнера.КодыЦМТ КАК усЗадачаПеремещениеКонтейнераКодыЦМТ\n\t|        ПО втЗаказы.Ссылка = усЗадачаПеремещениеКонтейнераКодыЦМТ.Ссылка.ДокументОснование\n\t|ГДЕ\n\t|    усЗадачаПеремещениеКонтейнераКодыЦМТ.Ссылка.ТипЗадачи = ЗНАЧЕНИЕ(Перечисление.усТипыЗадач.Отгрузка)\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|    ШтрихкодКИЗ\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втКодыЦмт.Ссылка КАК Ссылка,\n\t|    усОбъектыЦМТ.Ссылка КАК ОбъектЦМТ,\n\t|    усОбъектыЦМТ.ШтрихкодКИЗ КАК ШтрихкодКИЗ\n\t|ПОМЕСТИТЬ втОбъектыЦМТ\n\t|ИЗ\n\t|    втШтрихкодыКИЗ КАК втКодыЦмт\n\t|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.усОбъектыЦМТ КАК усОбъектыЦМТ\n\t|        ПО (втКодыЦмт.ШтрихкодКИЗ = усОбъектыЦМТ.ШтрихкодКИЗ)\n\t|СГРУППИРОВАТЬ ПО \n\t|    втКодыЦмт.Ссылка,\n\t|    усОбъектыЦМТ.Ссылка,\n\t|    усОбъектыЦМТ.ШтрихкодКИЗ\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|    ОбъектЦМТ\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|    втОбъектыЦМТ.Ссылка КАК ЗаказНаОтгрузку,\n\t|    втОбъектыЦМТ.ШтрихкодКИЗ КАК ШтрихкодКИЗ,\n\t|    1 КАК Количество,\n\t|    усРеквизитыОбъектовЦМТСрезПоследних.Объект КАК Объект,    \n\t|    ЕСТЬNULL(усРеквизитыОбъектовЦМТСрезПоследних.Номенклатура, ЗНАЧЕНИЕ(Справочник.усНоменклатура.ПустаяСсылка)) КАК Номенклатура,\n\t|    ЕСТЬNULL(усРеквизитыОбъектовЦМТСрезПоследних.ПартияНоменклатуры, ЗНАЧЕНИЕ(Справочник.усПартииНоменклатуры.ПустаяСсылка)) КАК ПартияНоменклатуры,\n\t|    ЕСТЬNULL(усСтатусыОбъектовЦМТСрезПоследних.Статус, ЗНАЧЕНИЕ(Справочник.усСтатусыНоменклатуры.Кондиция)) КАК СтатусНоменклатуры\n\t|ИЗ\n\t|    втОбъектыЦМТ КАК втОбъектыЦМТ\n\t|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.усРеквизитыОбъектовЦМТ.СрезПоследних КАК усРеквизитыОбъектовЦМТСрезПоследних\n\t|        ПО (втОбъектыЦМТ.ОбъектЦМТ = усРеквизитыОбъектовЦМТСрезПоследних.Объект)\n\t|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.усСтатусыОбъектовЦМТ.СрезПоследних КАК усСтатусыОбъектовЦМТСрезПоследних\n\t|        ПО (втОбъектыЦМТ.ОбъектЦМТ = усСтатусыОбъектовЦМТСрезПоследних.Объект)\";\n\n\tЗапрос.УстановитьПараметр(\"ОбъектОтбора\", Объект);\n\n\tРезультат   = Запрос.ВыполнитьПакет();\n\tВыборка     = Результат[1].Выбрать();\n\tВыборкаФакт = Результат[5].Выгрузить();\n\tВыборкаПлан = Результат[6].Выгрузить();\n\tВыборкаЦМТ  = Результат[9].Выгрузить();\n\n\t// распределить факт на план\n\tмсвСтруктурПоиска = Новый Массив;\n\tЕсли ВыгружатьОтборОтгрузкуПоКонтейнерно Тогда\n\t\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ЗаказНаОтгрузку, Номенклатура, СтатусНоменклатуры, ПартияНоменклатуры, НомерКонтейнера\"));\n\tИначе\n\t\tВыборкаФакт.Свернуть(\"ЗаказНаОтгрузку, Номенклатура, СтатусНоменклатуры, ПартияНоменклатуры\", \"Количество\");\n\t\tВыборкаПлан.Свернуть(\"ЗаказНаОтгрузку, ПланОтгрузки, КодСтрокиКИС, Номенклатура, УпаковкаНоменклатуры, Коэффициент, СтатусНоменклатуры, ПартияНоменклатуры\", \"КоличествоУпаковок, Количество\");\n\tКонецЕсли;\n\t\n\tТаблицаРезультат = ВыборкаПлан.СкопироватьКолонки();\n\tТаблицаРезультат.Колонки.Добавить(\"ШтрихкодКИЗ\", Новый ОписаниеТипов(\"Строка\"));\n\t\n\tВыборкаФактСКодамиЦМТ = ВыборкаФакт.СкопироватьКолонки();\n\tВыборкаФактСКодамиЦМТ.Колонки.Добавить(\"ШтрихкодКИЗ\", Новый ОписаниеТипов(\"Строка\")); \n\n\t//Разобъем тзФакт на коды ЦМТ \n\tмсвСтруктурПоискаЦМТ = Новый Массив;\n\tмсвСтруктурПоискаЦМТ.Добавить(Новый Структура(\"ЗаказНаОтгрузку, Номенклатура, СтатусНоменклатуры, ПартияНоменклатуры\"));\n\tмсвСтруктурПоискаЦМТ.Добавить(Новый Структура(\"ЗаказНаОтгрузку, Номенклатура, СтатусНоменклатуры\"));\n\tмсвСтруктурПоискаЦМТ.Добавить(Новый Структура(\"ЗаказНаОтгрузку, Номенклатура\"));\n\t\n\tДля каждого текСтрокаФакт Из ВыборкаФакт Цикл\n\t\tЕсли ЗначениеЗаполнено(текСтрокаФакт.ПартияНоменклатуры) И текСтрокаФакт.ПартияНоменклатуры.ВестиУчетПоКодамЦМТ Тогда \n\t\t\tДля Каждого текСтруктураПоиска Из мсвСтруктурПоискаЦМТ Цикл \n\t\t\t\tЗаполнитьЗначенияСвойств(текСтруктураПоиска, текСтрокаФакт);\n\t\t\t\t\n\t\t\t\tмсвСтрок = ВыборкаЦМТ.НайтиСтроки(текСтруктураПоиска);\n\t\t\t\tЕсли мсвСтрок.Количество() Тогда\n\t\t\t\t\tДля Каждого текСтрокаЦМТ Из мсвСтрок Цикл \n\t\t\t\t\t\tтекКоличество = Мин(текСтрокаЦМТ.Количество, текСтрокаФакт.Количество);\n\t\t\t\t\t\tЕсли текКоличество Тогда \n\t\t\t\t\t\t\tНоваяСтрока = ВыборкаФактСКодамиЦМТ.Добавить();\n\t\t\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\t\t\tНоваяСтрока.Количество           = 1;\n\t\t\t\t\t\t\tНоваяСтрока.ШтрихкодКИЗ\t\t\t = текСтрокаЦМТ.ШтрихкодКИЗ;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tтекСтрокаЦМТ.Количество = текСтрокаЦМТ.Количество - текКоличество;\n\t\t\t\t\t\t\tтекСтрокаФакт.Количество = текСтрокаФакт.Количество - текКоличество;\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\t\t\n\t\t\t\t\t\tЕсли текСтрокаФакт.Количество <= 0 Тогда\n\t\t\t\t\t\t\tПрервать;\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\tКонецЦикла;\n\t\t\t\t\t\n\t\t\t\t\tЕсли текСтрокаФакт.Количество > 0 Тогда \n\t\t\t\t\t\tНоваяСтрока = ВыборкаФактСКодамиЦМТ.Добавить();\n\t\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\t\tНоваяСтрока.Количество           = текСтрокаФакт.Количество;\n\t\t\t\t\t\t\n\t\t\t\t\t\tтекСтрокаФакт.Количество = 0;\n\t\t\t\t\tКонецЕсли;\t\n\t\t\t\t\t\n\t\t\t\t\tПрервать;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЦикла;\t\t\n\t\t\t\n\t\t\tЕсли текСтрокаФакт.Количество > 0 Тогда \n\t\t\t\tНоваяСтрока = ВыборкаФактСКодамиЦМТ.Добавить();\n\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\n\t\t\t\tтекСтрокаФакт.Количество = 0;\n\t\t\tКонецЕсли;\t\n\t\tИначе \n\t\t\tНовСтр = ВыборкаФактСКодамиЦМТ.Добавить();\n\t\t\tЗаполнитьЗначенияСвойств(НовСтр, текСтрокаФакт);\n\t\tКонецЕсли;   \t\n\tКонецЦикла; \n\t\n\tВыборкаФакт = ВыборкаФактСКодамиЦМТ.Скопировать(); \n\t\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ЗаказНаОтгрузку, Номенклатура, СтатусНоменклатуры, ПартияНоменклатуры\"));\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ЗаказНаОтгрузку, Номенклатура, СтатусНоменклатуры\"));\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ЗаказНаОтгрузку, Номенклатура\"));\n\tмсвСтруктурПоиска.Добавить(Новый Структура(\"ЗаказНаОтгрузку\"));\n\n\tДля каждого текСтрокаФакт Из ВыборкаФакт Цикл\n\t\tДля Каждого текСтруктураПоиска Из мсвСтруктурПоиска Цикл\n\t\t\tЗаполнитьЗначенияСвойств(текСтруктураПоиска, текСтрокаФакт);\n\n\t\t\tмсвСтрок = ВыборкаПлан.НайтиСтроки(текСтруктураПоиска);\n\t\t\tЕсли мсвСтрок.Количество() Тогда\n\t\t\t\tДля Каждого текСтрокаПлан Из мсвСтрок Цикл\n\t\t\t\t\tтекКоличество = Мин(текСтрокаПлан.Количество, текСтрокаФакт.Количество);\n\t\t\t\t\tЕсли текКоличество Тогда\n\t\t\t\t\t\tНоваяСтрока = ТаблицаРезультат.Добавить();\n\t\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\t\tНоваяСтрока.ПланОтгрузки         = текСтрокаПлан.ПланОтгрузки;\n\t\t\t\t\t\tНоваяСтрока.КодСтрокиКИС         = текСтрокаПлан.КодСтрокиКИС;\n\t\t\t\t\t\tНоваяСтрока.УпаковкаНоменклатуры = текСтрокаПлан.УпаковкаНоменклатуры;\n\t\t\t\t\t\tНоваяСтрока.КоличествоУпаковок   = текКоличество/текСтрокаПлан.Коэффициент;\n\t\t\t\t\t\tНоваяСтрока.Количество           = текКоличество;\n\n\t\t\t\t\t\tтекСтрокаПлан.Количество = текСтрокаПлан.Количество - текКоличество;\n\t\t\t\t\t\tтекСтрокаФакт.Количество = текСтрокаФакт.Количество - текКоличество;\n\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\tЕсли текСтрокаФакт.Количество <= 0 Тогда\n\t\t\t\t\t\tПрервать;\n\t\t\t\t\tКонецЕсли;\n\t\t\t\tКонецЦикла;\n\n\t\t\t\tЕсли текСтрокаФакт.Количество > 0 Тогда\n\t\t\t\t\tНоваяСтрока = ТаблицаРезультат.Добавить();\n\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\t\t\t\t\tНоваяСтрока.ПланОтгрузки         = мсвСтрок[0].ПланОтгрузки;\n\t\t\t\t\tНоваяСтрока.КодСтрокиКИС         = мсвСтрок[0].КодСтрокиКИС;\n\t\t\t\t\tНоваяСтрока.УпаковкаНоменклатуры = мсвСтрок[0].УпаковкаНоменклатуры;\n\t\t\t\t\tНоваяСтрока.КоличествоУпаковок   = текСтрокаФакт.Количество/мсвСтрок[0].Коэффициент;\n\t\t\t\t\tНоваяСтрока.Количество           = текСтрокаФакт.Количество;\n\n\t\t\t\t\tтекСтрокаФакт.Количество = 0;\n\t\t\t\tКонецЕсли;\n\t\t\t\tПрервать;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\n\t\tЕсли текСтрокаФакт.Количество > 0 Тогда\n\t\t\tНоваяСтрока = ТаблицаРезультат.Добавить();\n\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрокаФакт);\n\n\t\t\tтекСтрокаФакт.Количество = 0;\n\t\tКонецЕсли;\n\tКонецЦикла;\n\n\tТаблицаРезультат.Свернуть(\"ЗаказНаОтгрузку, ПланОтгрузки, КодСтрокиКИС, Номенклатура, УпаковкаНоменклатуры, СтатусНоменклатуры, ШтрихкодКИЗ\" + ?(ВыгружатьОтборОтгрузкуПоКонтейнерно,\",НомерКонтейнера\",\"\") + ?(ВыгружатьПартию,\",ПартияНоменклатуры\",\"\"), \"Количество\" + ?(РаскладыватьПоУпаковкам, \"\", \",КоличествоУпаковок\"));\n\n\tЕсли НЕ ВыгружатьПартию Тогда\n\t\tТаблицаРезультат.Колонки.Добавить(\"ПартияНоменклатуры\", Новый ОписаниеТипов(\"СправочникСсылка.усПартииНоменклатуры\"));\n\tКонецЕсли;\n\n\tЕсли Не ВыгружатьОтборОтгрузкуПоКонтейнерно Тогда\n\t\tТаблицаРезультат.Колонки.Добавить(\"НомерКонтейнера\", Новый ОписаниеТипов(\"Строка\"));\n\tКонецЕсли;\n\n\tЕсли РаскладыватьПоУпаковкам Тогда\n\t\tТаблицаРезультат.Колонки.Удалить(\"УпаковкаНоменклатуры\");\n\t\tТаблицаРезультат = усУправлениеСкладом.РазложитьНаУпаковкиНоменклатуры(ТаблицаРезультат);\n\tКонецЕсли;\n\n\tЗапросТЧ = Новый Запрос;\n\tЗапросТЧ.Текст =\n\t\"ВЫБРАТЬ\n\t|\tтбРезультат.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,\n\t|\tтбРезультат.ПланОтгрузки КАК ПланОтгрузки,\n\t|\tтбРезультат.КодСтрокиКИС КАК КодСтрокиКИС,\n\t|\tтбРезультат.Номенклатура КАК Номенклатура,\n\t|\tтбРезультат.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tтбРезультат.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tтбРезультат.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tтбРезультат.НомерКонтейнера КАК НомерКонтейнера,\n\t|\tтбРезультат.ШтрихкодКИЗ КАК ШтрихкодКИЗ,\n\t|\tтбРезультат.КоличествоУпаковок КАК КоличествоУпаковок,\n\t|\tтбРезультат.Количество КАК Количество\n\t|ПОМЕСТИТЬ втТабЧасть\n\t|ИЗ\n\t|\t&тбРезультат КАК тбРезультат\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t|\tусСерийныеНомера.Номенклатура КАК Номенклатура,\n\t|\tусСерийныеНомера.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tусСерийныеНомера.СерийныйНомер КАК SerialNumber,\n\t|\tусСерийныеНомера.СерийныйНомерПо КАК SerialNumberEnd,\n\t|\tусСерийныеНомера.ШтрихкодПроизводителя КАК ManufacturerBarcode\n\t|ИЗ\n\t|\tРегистрСведений.усСерийныеНомера КАК усСерийныеНомера\n\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ втТабЧасть КАК втТабЧасть\n\t|\t\tПО усСерийныеНомера.ПартияНоменклатуры = втТабЧасть.ПартияНоменклатуры\n\t|ГДЕ\n\t|\tвтТабЧасть.ПартияНоменклатуры <> ЗНАЧЕНИЕ(Справочник.усПартииНоменклатуры.ПустаяСсылка)\n\t|\tИ &ВыгружатьСН\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tвтТабЧасть.ЗаказНаОтгрузку КАК Ссылка,\n\t|\tЕСТЬNULL(втТабЧасть.КодСтрокиКИС, \"\"\"\") КАК codeLine,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаНоменклатура.Идентификатор, \"\"\"\") КАК OwnerID,\n\t|   втТабЧасть.Номенклатура КАК Номенклатура, \n\t|\tЕСТЬNULL(axИдентификаторыОбменаУпаковкаНоменклатуры.Идентификатор, \"\"\"\") КАК StorangeUnitID,\n\t|   втТабЧасть.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаСтатусНомеклатуры.Идентификатор, \"\"\"\") КАК StatusItemID,\n\t|\tвтТабЧасть.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tЕСТЬNULL(axИдентификаторыОбменаПартияНоменклатуры.Идентификатор, \"\"\"\") КАК NomenclatureSeriesID,\n\t|\tвтТабЧасть.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tвтТабЧасть.НомерКонтейнера КАК ContainerNumber, \n\t|\tвтТабЧасть.ШтрихкодКИЗ КАК serialNumber,\n\t|\tвтТабЧасть.Количество КАК Quantity,\n\t|\tвтТабЧасть.КоличествоУпаковок КАК QuantityUnit,\n\t|\tВЫБОР\n\t|\t\tКОГДА ЕСТЬNULL(усСтатусыНоменклатуры.ТипСтатуса, ЗНАЧЕНИЕ(Перечисление.усГрадацииКачества.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.усГрадацииКачества.НеГоден)\n\t|\t\t\t\tИЛИ ЕСТЬNULL(усСтатусыНоменклатуры.ТипСтатуса, ЗНАЧЕНИЕ(Перечисление.усГрадацииКачества.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.усГрадацииКачества.ОграниченноГоден)\n\t|\t\t\tТОГДА ИСТИНА\n\t|\t\tИНАЧЕ ЛОЖЬ\n\t|\tКОНЕЦ КАК Defect\n\t|ИЗ\n\t|\tвтТабЧасть КАК втТабЧасть\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаНоменклатура\n\t|\t\tПО втТабЧасть.Номенклатура = axИдентификаторыОбменаНоменклатура.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаУпаковкаНоменклатуры\n\t|\t\tПО втТабЧасть.УпаковкаНоменклатуры = axИдентификаторыОбменаУпаковкаНоменклатуры.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаОП\n\t|\t\tПО втТабЧасть.ЗаказНаОтгрузку = axИдентификаторыОбменаОП.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаПП\n\t|\t\tПО втТабЧасть.ПланОтгрузки = axИдентификаторыОбменаПП.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ Справочник.усСтатусыНоменклатуры КАК усСтатусыНоменклатуры\n\t|\t\tПО втТабЧасть.СтатусНоменклатуры = усСтатусыНоменклатуры.Ссылка\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаСтатусНомеклатуры\n\t|\t\tПО втТабЧасть.СтатусНоменклатуры = axИдентификаторыОбменаСтатусНомеклатуры.Объект\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Бюро1440_ИдентификаторыОбмена КАК axИдентификаторыОбменаПартияНоменклатуры\n\t|\t\tПО втТабЧасть.ПартияНоменклатуры = axИдентификаторыОбменаПартияНоменклатуры.Объект\n\t|\n\t|УПОРЯДОЧИТЬ ПО\n\t|\tСсылка\";\n\tЗапросТЧ.УстановитьПараметр(\"тбРезультат\", ТаблицаРезультат);\n\tЗапросТЧ.УстановитьПараметр(\"ВыгружатьСН\", ВыгружатьСН);\n\n\tРезультат = ЗапросТЧ.ВыполнитьПакет();\n\tВыборкаСН = Результат[1].Выбрать();\n\tВыборкаТЧ = Результат[2].Выбрать();\n\n\tсткПоиска   = Новый Структура(\"Ссылка\");\n\tсткПоискаСН = Новый Структура(\"ПартияНоменклатуры\");\n\t//сткШапка \t= ВернутьСтруктуруШапкиЗаказаНаОтгрузку(); \n\tсткШапка = новый Структура;\n\tсткШапка.Вставить(\"id\", \"\");\n\tсткШапка.Вставить(\"status\", \"selected\");\n\tсткШапка.Вставить(\"goods\", Новый Массив); \n\tПока Выборка.Следующий() Цикл \n\t\tЗаполнитьЗначенияСвойств(сткШапка, Выборка);\n\t\tсткШапка.id = ?(ЗначениеЗаполнено(сткШапка.ID), сткШапка.ID, XMLСтрока(Выборка.Ссылка));\n\t\t//сткШапка.Date = XMLСтрока(Выборка.Date); \n\t\t//Если ЗначениеЗаполнено(Выборка.Контрагент) Тогда\n\t\t//\tсткШапка.counterpartyID   = ?(ЗначениеЗаполнено(Выборка.counterpartyID), Выборка.counterpartyID, XMLСтрока(Выборка.Контрагент)); \n\t\t//КонецЕсли;\n\t\t//Если ЗначениеЗаполнено(Выборка.Поклажедатель) Тогда\n\t\t//\tсткШапка.counterpartyIDP = ?(ЗначениеЗаполнено(Выборка.counterpartyIDP), Выборка.counterpartyIDP, XMLСтрока(Выборка.Поклажедатель));\n\t\t//КонецЕсли;\n\t\t//Если ЗначениеЗаполнено(Выборка.Организация) Тогда\n\t\t//\tсткШапка.organizationID  = ?(ЗначениеЗаполнено(Выборка.organizationID), Выборка.organizationID, XMLСтрока(Выборка.Организация));\n\t\t//КонецЕсли;\n\n\t\tЗаполнитьЗначенияСвойств(сткПоиска, Выборка);\n\t\t// табличная часть\n\t\tВыборкаТЧ.Сбросить();\n\t\tПока ВыборкаТЧ.НайтиСледующий(сткПоиска) Цикл \n\t\t\tсткТовары = ВернутьСтруктуруТаблицыТоваров();\n\t\t\tЗаполнитьЗначенияСвойств(сткТовары, ВыборкаТЧ);\t\n\t\t\tсткТовары.ownerID = ?(ЗначениеЗаполнено(сткТовары.ownerID), сткТовары.ownerID, XMLСтрока(ВыборкаТЧ.Номенклатура)); \n\t\t\t//Если ЗначениеЗаполнено(ВыборкаТЧ.УпаковкаНоменклатуры) Тогда \n\t\t\t//\tсткТовары.storageUnitID  = ?(ЗначениеЗаполнено(сткТовары.storageUnitID), сткТовары.storageUnitID, XMLСтрока(ВыборкаТЧ.УпаковкаНоменклатуры)); \n\t\t\t//КонецЕсли;\n\t\t\tсткШапка.Goods.Добавить(сткТовары);\n\t\tКонецЦикла; \n\t\t\n\t\tВозврат сткШапка;\n\tКонецЦикла;\n\t\nКонецФункции //-- Николаев ситек 21.08.24\t\n\n#КонецОбласти\n\n#Область СлужебныйПрограммныйИнтерфейс\n\n// Метод производит поиск по Guid элемента справочника\n// Если по Guid объект не найден, выполняет поиск по РС Бюро1440_ИдентификаторыОбмена \n//\n// Параметры:\n//  Id\t\t\t\t \t - Строка - Guid \n//  СсылкаНаОб   \t\t - заполняется найденным значением\n//  Имя \t\t   \t\t - Строка - имя справочника (Пример \"усКонтаргенты\")\n// \n// Возвращаемое значение:\n//  Булево - найдено или нет\n//\nФункция ПолучитьСсылкуНаЭлементСправочника(Id, СсылкаНаОб, Имя = \"\") Экспорт \n\t\n\tЕсли НЕ ЗначениеЗаполнено(Id) ИЛИ Id = \"00000000-0000-0000-0000-000000000000\" Тогда \n\t\tСсылкаНаОб = Справочники[Имя].ПустаяСсылка();\n\t\tВозврат Истина;\t\n\tКонецЕсли;\n\t\n\t// Очищаем ссылку для случаев обновления основного объекта\n\tСсылкаНаОб = Неопределено;\n\t\n\tЕсли Имя = \"\" Тогда \n\t\tВозврат Ложь;\n\tКонецЕсли;\n\t\t\n\tСсылкаНаОб = Справочники[Имя].ПолучитьСсылку(Новый УникальныйИдентификатор(Id));\n\t\n\tЕсли ОбщегоНазначения.СсылкаСуществует(СсылкаНаОб) Тогда \n\t\tВозврат Истина;\n\tКонецЕсли;    \n\t\n\t// Если не нашли по уникальному идентификатору в базе данных \n\t//\tтогда ищем по РС усИдентификаторыОбмена\n\tЕсли ЕстьЗаписьСИдентификаторомВСинхронизируемыхОбъектахБюро1440_ИдентификаторыОбмена(Id, СсылкаНаОб) Тогда \n\t\tВозврат Истина;\n\tКонецЕсли;\n\t\t\t\t\t\n\tВозврат Ложь;\t\t\n\t\t\t\nКонецФункции\n\n// Метод производит поиск по полям поиска и заполняет МассивСсылок \n// в качестве типа значения можно передать строку с наименованием объекта метаданных\n// или тип объекта метаданных\n//\n// Параметры:\n//  ТипЗначения\t - Строка или ТИП - Имя объекта МД (Пример \"Справочник.Организации\" ИЛИ Тип(\"ДокументСсылка.усОжидаемаяПриемка)) \n//  НаборЗначенийПолей\t - Структура - с данными значений полей поиска\n//  ПоляПоиска\t\t\t - Строка    - поля поиска через запятую (Пример \"Номер=Number, НомерКИС=NumberCIS\")\n// \n// Возвращаемое значение:\n//  Булево - Истина найдено, Ложь элементы не найдены\n//\nФункция НайтиСсылкиПоПолямПоиска(ТипЗначения, НаборЗначенийПолей, ПоляПоиска, МассивСсылок)\n\t\n\tМассивСсылок = Новый Массив;\n\tЗапрос = Новый Запрос;\n\t\n\tТекстЗапроса = \n\t\"ВЫБРАТЬ\n\t|\tТ.Ссылка КАК Ссылка\n\t|ИЗ\n\t|\t#Таблица# КАК Т\n\t|ГДЕ\n\t|\t#УсловиеПоиска#\";\n\t\n\tШаблонУсловия = \"#УсловиеПоиска#\n\t|\tИ Т.%1 = &%2\";\n\tМассивОписанияПолейПоиска = СтрРазделить(ПоляПоиска, \",\");\n\tДля Каждого ОписаниеПоляПоиска Из МассивОписанияПолейПоиска Цикл \n\t\t\n\t\tЗначенияОписанияПоляПоиска = СтрРазделить(ОписаниеПоляПоиска, \"=\");\n\t\tПолеПоиска = СокрЛП(ЗначенияОписанияПоляПоиска[0]);\n\t\tПолеИсходныхДанных = СокрЛП(ЗначенияОписанияПоляПоиска[1]);\n\t\tТекстЗапроса = СтрЗаменить(ТекстЗапроса, \"#УсловиеПоиска#\", \n\t\t\tСтрШаблон(ШаблонУсловия, ПолеПоиска, ПолеИсходныхДанных));  \n\t\t\t\t\t\t\n\t\tЗапрос.УстановитьПараметр(ПолеИсходныхДанных, НаборЗначенийПолей[ПолеИсходныхДанных]);\n\t\t\t\t\n\tКонецЦикла;\t\n\tТекстЗапроса = СтрЗаменить(ТекстЗапроса, \"#УсловиеПоиска#\", \"ИСТИНА\");\n\n\tЕсли ТипЗнч(ТипЗначения) = Тип(\"Строка\") Тогда \n\t\tТекстЗапроса = СтрЗаменить(ТекстЗапроса, \"#Таблица#\", ТипЗначения);\n\tИначеЕсли ТипЗнч(ТипЗначения) = Тип(\"Тип\") Тогда \n\t\tТекстЗапроса = СтрЗаменить(ТекстЗапроса, \"#Таблица#\", Метаданные.НайтиПоТипу(ТипЗначения).ПолноеИмя());\n\tКонецЕсли;\n\t\n\tЗапрос.Текст = ТекстЗапроса;   \n\tРезультатЗапроса = Запрос.Выполнить();\n\t\n\tВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();\n\tПока ВыборкаДетальныеЗаписи.Следующий() Цикл   \n    \tМассивСсылок.Добавить(ВыборкаДетальныеЗаписи.Ссылка);\n\tКонецЦикла;\n\t\n\tВозврат ЗначениеЗаполнено(МассивСсылок);\n\t\nКонецФункции\n\nФункция ПолучитьСсылкуСУчетомСсылкиНового(Объект, GUIDУникальныйИдентификатор = Неопределено)  \n\n\t// Определим ссылку на объект\n\t// Если объекта не существует то установим ему ссылку, если еще не установлена\n\tЕсли Объект.ЭтоНовый() Тогда       \n\t\tОбъектСсылка = Объект.ПолучитьСсылкуНового();\n\t\tЕсли Не ЗначениеЗаполнено(ОбъектСсылка) Тогда      \n\t\t\t\n\t\t\tЕсли GUIDУникальныйИдентификатор = Неопределено Тогда \n\t\t\t\tGUID = Строка(Новый УникальныйИдентификатор());\n\t\t\tИначеЕсли ТипЗнч(GUIDУникальныйИдентификатор) = Тип(\"Строка\") Тогда \n\t\t\t\tGUID = GUIDУникальныйИдентификатор;   \n\t\t\tИначе\t\n\t\t\t\tGUID = Строка(GUIDУникальныйИдентификатор);\n\t\t\tКонецЕсли;\t\n\t\t\t\t\t\t\t\n\t\t\tТипЗначения = ТипЗнч(Объект.Ссылка);\n\t\t\tОбъектСсылка = XMLЗначение(ТипЗначения, GUID);\n\t\t\tОбъект.УстановитьСсылкуНового(ОбъектСсылка);\n\t\tКонецЕсли;         \n\tИначе\n\t\tОбъектСсылка = Объект.Ссылка;\n\tКонецЕсли;  \n\t\n\tВозврат ОбъектСсылка;\n\t\nКонецФункции \n\n// Функция - Есть запись с идентификатором в синхронизируемых объектах бюро1440 идентификаторы обмена\n//\n// Параметры:\n//  Идентификатор\t\t\t\t\t - Уникальный идентификатор объекта \n//  Ссылка\t\t\t\t\t\t\t - \t - \n//  НаборЗначенийПолей\t\t\t\t - Структура - с данными значений полей поиска, обязательно предавать в случае использования ДополнительныеПоляПоискаОбъекта \n//  ДополнительныеПоляПоискаОбъекта\t - Строка    - поля поиска через запятую (Пример \"Номер=Number, НомерКИС=NumberCIS\") \n// \n// Возвращаемое значение:\n// Булево - Истина найдено, Ложь не найдено \n//\nФункция ЕстьЗаписьСИдентификаторомВСинхронизируемыхОбъектахБюро1440_ИдентификаторыОбмена(Идентификатор, Ссылка, НаборЗначенийПолей = \"\", ДополнительныеПоляПоискаОбъекта = \"\")  \n\n\tЗапрос = Новый Запрос(ТекстЗапросаНайтиСсылкуПоИдентификаторуБюро1440_ИдентификаторыОбмена());\n\tШаблонУсловия = \"#УсловиеПоиска#\n\t|\tИ Т.%1 = &%2\";     \n\tЕсли ЗначениеЗаполнено(ДополнительныеПоляПоискаОбъекта) Тогда \n\t\tМассивОписанияПолейПоиска = СтрРазделить(ДополнительныеПоляПоискаОбъекта, \",\"); \n\t\tДля Каждого ОписаниеПоляПоиска Из МассивОписанияПолейПоиска Цикл \n\t\t\t\n\t\t\tЗначенияОписанияПоляПоиска = СтрРазделить(ОписаниеПоляПоиска, \"=\");\n\t\t\tПолеПоиска = СокрЛП(ЗначенияОписанияПоляПоиска[0]);\n\t\t\tПолеИсходныхДанных = СокрЛП(ЗначенияОписанияПоляПоиска[1]);\n\t\t\tЗапрос.Текст = СтрЗаменить(Запрос.Текст, \"#УсловиеПоиска#\", \n\t\t\tСтрШаблон(ШаблонУсловия, ПолеПоиска, ПолеИсходныхДанных));  \n\t\t\t\n\t\t\tЗапрос.УстановитьПараметр(ПолеИсходныхДанных, НаборЗначенийПолей[ПолеИсходныхДанных]);\n\t\t\t\n\t\tКонецЦикла;\n\tКонецЕсли;\n\tЗапрос.Текст = СтрЗаменить(Запрос.Текст, \"#УсловиеПоиска#\", \"И ИСТИНА\");\n\t\n    Запрос.УстановитьПараметр(\"Идентификатор\", Идентификатор);\n\t\n\tРезультатЗапроса = Запрос.Выполнить();\n\n\tВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();   \n\t\t\n\tЕсли ВыборкаДетальныеЗаписи.Следующий() Тогда \n\t\t\n\t\tСсылка = ВыборкаДетальныеЗаписи.Ссылка;  \n\t\t\t\n\t\tВозврат\tИстина;\n\t\t\n\tИначе \n\t\t\t\t\n\t\tВозврат Ложь;\n\t\t\n\tКонецЕсли;\t\n\t\nКонецФункции\n\nФункция ТекстЗапросаНайтиСсылкуПоИдентификаторуБюро1440_ИдентификаторыОбмена()\n\tВозврат\n\t\"ВЫБРАТЬ\n\t|\tТ.Объект КАК Ссылка\n\t|ИЗ\n\t|\tРегистрСведений.Бюро1440_ИдентификаторыОбмена КАК Т\n\t|ГДЕ\n\t|\tТ.Идентификатор = &Идентификатор\n\t|\t#УсловиеПоиска#\";\n\t\nКонецФункции      \n\nПроцедура ЗаписатьВИдентификаторОбмена(Ссылка, Идентификатор = Неопределено)\n\n\tЕсли Ссылка <> Неопределено И ЗначениеЗаполнено(Ссылка)Тогда\n\t\tЗапись = РегистрыСведений.Бюро1440_ИдентификаторыОбмена.СоздатьМенеджерЗаписи();\n\t\tЗапись.Объект = Ссылка;\n\t\tЗапись.Прочитать();\n\t\tЕсли НЕ ЗначениеЗаполнено(Запись.Идентификатор)\n\t\t\tИЛИ (ЗначениеЗаполнено(Идентификатор) И Запись.Идентификатор <> Идентификатор) Тогда\n\t\t\tЕсли Идентификатор <> Неопределено Тогда\n\t\t\t\tУникальныйИдентификатор = Идентификатор;\n\t\t\tИначе\n\t\t\t\tУникальныйИдентификатор = Строка(Новый УникальныйИдентификатор);\n\t\t\tКонецЕсли;\n\t\t\t\n\t\t\tЗапись.Объект \t     = Ссылка;\n\t\t\tЗапись.Идентификатор = УникальныйИдентификатор;\n\t\t\tЗапись.Записать(Истина);\n\t\tКонецЕсли;\n\tКонецЕсли;\n\nКонецПроцедуры\n\n// Добавляет упаковку в тбз с коэффициентом = 1 \n//\n// Параметры:\n//\n// Возвращаемое значение:\n//\n//\nФункция РазложитьНаБазовыеУпаковкиНоменклатуры(тбзИсходная, ПропускатьЗаполненныеУпаковки = Ложь) Экспорт\n\n\tЕсли ПропускатьЗаполненныеУпаковки И тбзИсходная.Колонки.Найти(\"УпаковкаНоменклатуры\") = Неопределено Тогда\n\t\tПропускатьЗаполненныеУпаковки = Ложь;\n\tКонецЕсли;\n\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст =\n\t\"ВЫБРАТЬ\n\t|\tусНоменклатура.Ссылка КАК Номенклатура,\n\t|\tNULL КАК УпаковкаНоменклатуры,\n\t|\t1 КАК Коэффициент,\n\t|\tусНоменклатура.Масса,\n\t|\tусНоменклатура.Объем\n\t|ИЗ\n\t|\tСправочник.усНоменклатура КАК усНоменклатура\n\t|ГДЕ\n\t|\tусНоменклатура.Ссылка В(&Номенклатура)\n\t|\n\t|ОБЪЕДИНИТЬ ВСЕ\n\t|\n\t|ВЫБРАТЬ\n\t|\tусУпаковкиНоменклатуры.Владелец,\n\t|\tусУпаковкиНоменклатуры.Ссылка,\n\t|\tусУпаковкиНоменклатуры.Коэффициент,\n\t|\tусУпаковкиНоменклатуры.Масса,\n\t|\tусУпаковкиНоменклатуры.Объем\n\t|ИЗ\n\t|\tСправочник.усУпаковкиНоменклатуры КАК усУпаковкиНоменклатуры\n\t|ГДЕ\n\t|\tусУпаковкиНоменклатуры.Владелец В(&Номенклатура)\n\t|\tИ усУпаковкиНоменклатуры.Коэффициент = 1  \n\t|\n\t|УПОРЯДОЧИТЬ ПО\n\t|\tНоменклатура,\n\t|\tКоэффициент УБЫВ,\n\t|\tУпаковкаНоменклатуры УБЫВ\";\n\tЗапрос.УстановитьПараметр(\"Номенклатура\", тбзИсходная.ВыгрузитьКолонку(\"Номенклатура\")); \n\n\tтбзУпаковки  = Запрос.Выполнить().Выгрузить();\n\tтбзРезультат = тбзИсходная.СкопироватьКолонки();\n\tЕсли тбзРезультат.Колонки.Найти(\"УпаковкаНоменклатуры\") = Неопределено Тогда\n\t\tтбзРезультат.Колонки.Добавить(\"УпаковкаНоменклатуры\", Новый ОписаниеТипов(\"СправочникСсылка.усУпаковкиНоменклатуры\"));\n\tКонецЕсли;\n\tЕсли тбзРезультат.Колонки.Найти(\"КоличествоУпаковок\") = Неопределено Тогда\n\t\tтбзРезультат.Колонки.Добавить(\"КоличествоУпаковок\", Новый ОписаниеТипов(\"Число\", Новый КвалификаторыЧисла(15,3)));\n\tКонецЕсли;\n\tЕсли тбзРезультат.Колонки.Найти(\"Масса\") = Неопределено Тогда\n\t\tтбзРезультат.Колонки.Добавить(\"Масса\", Новый ОписаниеТипов(\"Число\", Новый КвалификаторыЧисла(15,3)));\n\tКонецЕсли;\n\tЕсли тбзРезультат.Колонки.Найти(\"Объем\") = Неопределено Тогда\n\t\tтбзРезультат.Колонки.Добавить(\"Объем\", Новый ОписаниеТипов(\"Число\", Новый КвалификаторыЧисла(15,6)));\n\tКонецЕсли;\n\tЕсли тбзРезультат.Колонки.Найти(\"МассаУпаковки\") = Неопределено Тогда\n\t\tтбзРезультат.Колонки.Добавить(\"МассаУпаковки\", Новый ОписаниеТипов(\"Число\", Новый КвалификаторыЧисла(15,3)));\n\tКонецЕсли;\n\tЕсли тбзРезультат.Колонки.Найти(\"ОбъемУпаковки\") = Неопределено Тогда\n\t\tтбзРезультат.Колонки.Добавить(\"ОбъемУпаковки\", Новый ОписаниеТипов(\"Число\", Новый КвалификаторыЧисла(15,6)));\n\tКонецЕсли;\n\n\tсткПоиска = Новый Структура(\"Номенклатура\");\n\tДля Каждого текСтрока Из тбзИсходная Цикл\n\n\t\tЕсли ПропускатьЗаполненныеУпаковки И ЗначениеЗаполнено(текСтрока.УпаковкаНоменклатуры) И текСтрока.Количество > 0 Тогда\n\t\t\tЗаполнитьЗначенияСвойств(тбзРезультат.Добавить(), текСтрока);\n\t\tИначе\n\t\t\tКоличествоДляРаспределения = текСтрока.Количество;\n\n\t\t\tсткПоиска.Номенклатура = текСтрока.Номенклатура;\n\t\t\tмсвСтрок = тбзУпаковки.НайтиСтроки(сткПоиска);\n\t\t\tЕсли мсвСтрок.Количество() Тогда\n\t\t\t\tДля Каждого текУпаковка Из мсвСтрок Цикл\n\t\t\t\t\tНоваяСтрока = тбзРезультат.Добавить();\n\t\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрока);\n\t\t\t\t\tНоваяСтрока.УпаковкаНоменклатуры = текУпаковка.УпаковкаНоменклатуры;\n\t\t\t\t\tНоваяСтрока.Количество           = КоличествоДляРаспределения;\n\t\t\t\t\tНоваяСтрока.КоличествоУпаковок   = КоличествоДляРаспределения;\n\t\t\t\t\tНоваяСтрока.Масса                = КоличествоДляРаспределения * текУпаковка.Масса;\n\t\t\t\t\tНоваяСтрока.Объем                = КоличествоДляРаспределения * текУпаковка.Объем;\n\t\t\t\t\tНоваяСтрока.МассаУпаковки        = текУпаковка.Масса;\n\t\t\t\t\tНоваяСтрока.ОбъемУпаковки        = текУпаковка.Объем;\n\t\t\t\t\t\n\t\t\t\t\tКоличествоДляРаспределения = 0;\n\t\t\t\t\t\n\t\t\t\t\tПрервать; \n\t\t\t\t\t\n\t\t\t\tКонецЦикла;\n\t\t\tКонецЕсли;\n\n\t\t\tЕсли КоличествоДляРаспределения > 0 Тогда\n\t\t\t\tНоваяСтрока = тбзРезультат.Добавить();\n\t\t\t\tЗаполнитьЗначенияСвойств(НоваяСтрока, текСтрока);\n\t\t\t\tНоваяСтрока.КоличествоУпаковок = КоличествоДляРаспределения;\n\t\t\t\tНоваяСтрока.Количество         = КоличествоДляРаспределения;\n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\n\tКонецЦикла;\n\n\tВозврат тбзРезультат;\n\nКонецФункции\n\nФункция ПолучитьСтруктуруОтветногоСообщения(МассивОшибок, КритичнаяОшибка = Ложь)\n\t\t\n\tСтруктураОтвета = Бюро1440_СозданиеИсходящихСообщений.ПолучитьТелоОтветногоСообщенияПоУмолчанию();\n\tЕсли КритичнаяОшибка Тогда \n\t\tСтруктураОтвета.success = Ложь;\n\tИначе\n\t\tСтруктураОтвета.success = Истина;\t\n\tКонецЕсли; \n\tСтруктураОтвета.errors = МассивОшибок;\n\t\n\tВозврат СтруктураОтвета;\t\n\t\nКонецФункции\n\nФункция СформироватьТекстОшибки(МассивОшибок)\n\t\n\tТекстОшибки = \"Критичная ошибка при загрузке данных, описание:\"  + Символы.ПС;\n\t\n\tДля Каждого Стр из МассивОшибок Цикл \n\t\tТекстОшибки = ТекстОшибки + \"Код: \" + Стр.code + \" Сообщение: \" + Стр.description + Символы.ПС; \t\t\n\tКонецЦикла; \n\t\n\tВозврат ТекстОшибки;\n\t\nКонецФункции\n\nФункция ВернутьСтруктуруШапкиОжидаемойПриемки() \n\t\n\tсткШапка \t= Новый Структура(); \n\tсткШапка.Вставить(\"id\", \"\");\n\tсткШапка.Вставить(\"date\", Дата(1,1,1));\n\tсткШапка.Вставить(\"counterpartyID\", \"\");\n\tсткШапка.Вставить(\"counterpartyIDP\", \"\");\n\tсткШапка.Вставить(\"organizationID\", \"\");\n\tсткШапка.Вставить(\"description\", \"\");\n\tсткШапка.Вставить(\"isMarked\", Ложь);\n\tсткШапка.Вставить(\"goods\", Новый Массив);\n\t\n\tВозврат сткШапка;\n\t\nКонецФункции\n\nФункция ВернутьСтруктуруШапкиЗаказаНаОтгрузку() \n\n\tсткШапка \t= Новый Структура(); \n\tсткШапка.Вставить(\"id\", \"\");\n\tсткШапка.Вставить(\"date\", Дата(1,1,1));\n\tсткШапка.Вставить(\"number\", \"\");\n\tсткШапка.Вставить(\"counterpartyID\", \"\");\n\tсткШапка.Вставить(\"counterpartyIDP\", \"\");\n\tсткШапка.Вставить(\"organizationID\", \"\");\n\tсткШапка.Вставить(\"description\", \"\");\n\tсткШапка.Вставить(\"isMarked\", Ложь);\n\tсткШапка.Вставить(\"goods\", Новый Массив); \n\t\n\tВозврат сткШапка;\n\t\nКонецФункции \n\nФункция ВернутьСтруктуруШапкиПересчетов() \n\t\n\tсткШапка \t= Новый Структура(); \n\tсткШапка.Вставить(\"id\", \"\");\n\tсткШапка.Вставить(\"date\", Дата(1,1,1));\n\tсткШапка.Вставить(\"number\", \"\");\n\tсткШапка.Вставить(\"counterpartyID\", \"\");\n\tсткШапка.Вставить(\"counterpartyIDP\", \"\");\n\tсткШапка.Вставить(\"organizationID\", \"\");\n\tсткШапка.Вставить(\"description\", \"\");\n\tсткШапка.Вставить(\"isMarked\", Ложь);\n\tсткШапка.Вставить(\"goods\", Новый Массив);\n\t\n\tВозврат сткШапка;\n\t\nКонецФункции\n\nФункция ВернутьСтруктуруТаблицыТоваров()\n\t \n\tсткТовары = Новый Структура; \n\tсткТовары.Вставить(\"codeLine\", \"\");\n\tсткТовары.Вставить(\"ownerID\", \"\");\n\t//сткТовары.Вставить(\"storageUnitID\", \"\");\n\tсткТовары.Вставить(\"quantity\", 0);\n\t//сткТовары.Вставить(\"quantityUnit\", 0);\n\tсткТовары.Вставить(\"serialNumber\", \"\");\n \n\tВозврат сткТовары;\n\t\nКонецФункции\n\nПроцедура ЗафиксироватьВыгрузкуДокумента(Документ, Статус = Неопределено) \n\t\n\tтекЗапись = РегистрыСведений.Бюро1440_КонтрольВыгрузкиДокументов.СоздатьМенеджерЗаписи();\n\tтекЗапись.Документ       \t= Документ;\n\tтекЗапись.СтатусВыгрузки    = Статус;\n\tтекЗапись.Выгружен = Истина;\n\tтекЗапись.Записать();\n\t\nКонецПроцедуры   \n\n// Функция - Документ выгружался\n//\n// Параметры:\n//  Документ\t\t\t\t\t - Ссылка на проверяемый док \n//  ПроверяемыйСтатусВыгрузки\t - Неопределено в случае с актом сверки, в этом случае в РС не будет указан статус выгрузки \n// \n// Возвращаемое значение:\n//   Булево- \n//\nФункция ДокументВыгружался(Документ, мсвПроверяемыеСтатусыВыгрузки = Неопределено)  \n\t\n\tВыгружен = Ложь;\n\t\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст =   \n\t\t\"ВЫБРАТЬ\n\t\t|\tБюро1440_КонтрольВыгрузкиДокументов.Выгружен КАК Выгружен\n\t\t|ИЗ\n\t\t|\tРегистрСведений.Бюро1440_КонтрольВыгрузкиДокументов КАК Бюро1440_КонтрольВыгрузкиДокументов\n\t\t|ГДЕ\n\t\t|\tБюро1440_КонтрольВыгрузкиДокументов.Документ = &Документ\n\t\t|\tИ #УсловиеПоиска#\";\n\t\t\t\n\tЗапрос.УстановитьПараметр(\"Документ\", Документ); \n\tЕсли мсвПроверяемыеСтатусыВыгрузки = Неопределено Тогда \n\t\tЗапрос.Текст = СтрЗаменить(Запрос.Текст, \"#УсловиеПоиска#\", \"ИСТИНА\");\t\n\tИначе\n\t\tЗапрос.Текст = СтрЗаменить(Запрос.Текст, \"#УсловиеПоиска#\", \"Бюро1440_КонтрольВыгрузкиДокументов.СтатусВыгрузки В (&мсвПроверяемыеСтатусыВыгрузки)\");\n\t\tЗапрос.УстановитьПараметр(\"мсвПроверяемыеСтатусыВыгрузки\", мсвПроверяемыеСтатусыВыгрузки);\n\tКонецЕсли;\n\t\n\tРезультатЗапроса = Запрос.Выполнить();\n\t\n\tВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();\n\t\n\tПока ВыборкаДетальныеЗаписи.Следующий() Цикл\n\t\tВыгружен = ВыборкаДетальныеЗаписи.Выгружен; \n\tКонецЦикла;\n\t\n\tВозврат Выгружен;\n\t\nКонецФункции\n//-- Крутских Ситек 30.01.25 -- \n\n#Область ИсходящиеДанные\n\n#КонецОбласти\n\n\n//++Крутских СИТЕК 26.11.24++\nФункция ЗаполнитьТабличныйДокументУведомление(ТЗ, ЗаказНаОтгрузку)\n\t\n\tТабличныйДокумент = Новый ТабличныйДокумент;\n\tТабличныйДокумент.ИмяПараметровПечати = \"ПАРАМЕТРЫ_ПЕЧАТИ_КоррекцияЗаказа\";\n\tМакет = Документы.усСтрокаЗаказаНаОтгрузку.ПолучитьМакет(\"Бюро1440_МакетИзменений\");\n\tЗаголовокМакета  = Макет.ПолучитьОбласть(\"Заголовок\");\t\n\t\n\t//++Крутских Ситек 25.02.25\n\t//стрНомерКИС = \"Номер КИС: \" + Строка(ЗаказНаОтгрузку.НомерКИС) + \", Номер документа основания: \" + Строка(ЗаказНаОтгрузку.Бюро1440_ДокументОснованиеКИС);\n\tстрНомерКИС = \"Расходный ордер: \" + Строка(ЗаказНаОтгрузку.НомерКИС) + \", распоряжение: \" + Строка(ЗаказНаОтгрузку.Бюро1440_ДокументОснованиеКИС);\n\n\tЗаголовокМакета.Параметры.НомерКИС = стрНомерКИС;\n\t//--Крутских Ситек 25.02.25\n\t\n\t// Вывод заголовка и строки\n\tЗаголовокМакета.Параметры.ЗаказНаОтгрузку = Строка(ЗаказНаОтгрузку);\n\tТабличныйДокумент.Вывести(ЗаголовокМакета);\n\t\n\tном = 1;\n\tДля каждого стр из ТЗ Цикл\n\t\tСтрокаМакета     = Макет.ПолучитьОбласть(\"Строка\");\n\t\tДанныеДляЗаполнения = Новый Структура;\n\t\tДанныеДляЗаполнения.Вставить(\"Номенклатура\", \t\tстр.Номенклатура); \n\t\tДанныеДляЗаполнения.Вставить(\"КоличествоДо\", \t\tстр.КоличествоДо);\n\t\tДанныеДляЗаполнения.Вставить(\"КоличествоПосле\", \tстр.КоличествоПосле);  \n\t\t//++Крутских Ситек 21.02.25                                             \n\t\tДанныеДляЗаполнения.Вставить(\"НомерСтроки\", ном);\n\t\tДанныеДляЗаполнения.Вставить(\"Дельта\", стр.КоличествоПосле - стр.КоличествоДо);       \n\t\t//--Крутских Ситек 21.02.25\n\t\t\n\t\tЗаполнитьЗначенияСвойств(СтрокаМакета.Параметры, ДанныеДляЗаполнения);\n\t\tТабличныйДокумент.Вывести(СтрокаМакета);\n\t\t\n\t\tном = ном + 1;\n\tКонецЦикла;\n\t\n\tВозврат ТабличныйДокумент;\n\t\nКонецФункции\n //--Крутских СИТЕК 26.11.24-- \n\n//++ Крутских Ситек 30.01.25 ++ \nФункция ПолучитьТаблицуИзменений(ЗаказНаОтгрузкуСсылка, МассивМодифицированныхСтрок)\n\t\n\tТаблицаИзмененныеСтроки = Новый ТаблицаЗначений;   \n\tТаблицаИзмененныеСтроки.Колонки.Добавить(\"КодСтрокиКИС\", \tНовый ОписаниеТипов(\"Строка\", , Новый КвалификаторыСтроки(10)));  \n\tТаблицаИзмененныеСтроки.Колонки.Добавить(\"НомерСтроки\", \tНовый ОписаниеТипов(\"Строка\", , Новый КвалификаторыСтроки(10)));  \n\tТаблицаИзмененныеСтроки.Колонки.Добавить(\"Номенклатура\", \tНовый ОписаниеТипов(\"СправочникСсылка.усНоменклатура\"));\n\tТаблицаИзмененныеСтроки.Колонки.Добавить(\"КоличествоДО\", \tНовый ОписаниеТипов(\"Число\"));\n\tТаблицаИзмененныеСтроки.Колонки.Добавить(\"КоличествоПосле\", Новый ОписаниеТипов(\"Число\"));\n\n\tЗапросСтрокиЗаказа = Новый Запрос;\n\tЗапросСтрокиЗаказа.Текст = \n\t\t\"ВЫБРАТЬ\n\t\t|\tусСтрокаЗаказаНаОтгрузку.КодСтрокиКИС КАК КодСтрокиКИС,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.РеквизитДопУпорядочивания КАК НомерСтроки,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Номенклатура КАК Номенклатура,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Ссылка КАК Ссылка,\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Количество КАК Количество\n\t\t|ИЗ\n\t\t|\tДокумент.усСтрокаЗаказаНаОтгрузку КАК усСтрокаЗаказаНаОтгрузку\n\t\t|ГДЕ\n\t\t|\tусСтрокаЗаказаНаОтгрузку.Владелец = &ЗаказНаОтгрузку   \n\t\t|\tИ усСтрокаЗаказаНаОтгрузку.Проведен\n\t\t|\n\t\t|УПОРЯДОЧИТЬ ПО\n\t\t|\tусСтрокаЗаказаНаОтгрузку.РеквизитДопУпорядочивания\";\n\t\n\tЗапросСтрокиЗаказа.УстановитьПараметр(\"ЗаказНаОтгрузку\", ЗаказНаОтгрузкуСсылка);\n\n    ТаблицаСтрок = ЗапросСтрокиЗаказа.Выполнить().Выгрузить();\n\tТаблицаПартий = ТаблицаСтрок.Скопировать(); \n\tТаблицаПартий.Свернуть(\"ПартияНоменклатуры\"); \n \t\n\tМассивПартий = ТаблицаПартий.ВыгрузитьКолонку(\"ПартияНоменклатуры\");\n\t\n\tТаблицаКонтроля = ПолучитьКоличествоСпланировано(ЗаказНаОтгрузкуСсылка, МассивПартий);\n\t\n\tДля Каждого ВыборкаКонтроль Из ТаблицаКонтроля Цикл\n\t\t\t\n\t\tКонтрольОтгружено       = ?(ЗначениеЗаполнено(ВыборкаКонтроль.Отгружено), ВыборкаКонтроль.Отгружено, 0);\n\t\tКонтрольОтобрано        = ?(ЗначениеЗаполнено(ВыборкаКонтроль.Отобрано), ВыборкаКонтроль.Отобрано, 0);\n\t\t\n\t\tПараметрыОтбора = Новый Структура(\"Номенклатура, СтатусНоменклатуры, ПартияНоменклатуры\");\n\t\tЗаполнитьЗначенияСвойств(ПараметрыОтбора, ВыборкаКонтроль);\t\n\t\t                    \n\t\tНайденныеСтроки = ТаблицаСтрок.НайтиСтроки(ПараметрыОтбора); \n\t\t\n\t\tЕсли НайденныеСтроки.Количество() = 0 Тогда\n\t\t\t\n\t\t\tПараметрыОтбора = Новый Структура(\"Номенклатура, СтатусНоменклатуры\");\n\t\t\tЗаполнитьЗначенияСвойств(ПараметрыОтбора, ВыборкаКонтроль);\t\n\n\t\t\tНайденныеСтроки = ТаблицаСтрок.НайтиСтроки(ПараметрыОтбора);\n\t\t\tЕсли НайденныеСтроки.Количество() = 0 Тогда\t\t\t\n\t\t\t\tПараметрыОтбора = Новый Структура(\"Номенклатура\");\n\t\t\t\tЗаполнитьЗначенияСвойств(ПараметрыОтбора, ВыборкаКонтроль);\t\n\t\t\t\tНайденныеСтроки = ТаблицаСтрок.НайтиСтроки(ПараметрыОтбора);\t\t\t\n\t\t\tКонецЕсли;\t\t\t\n\t\tКонецЕсли;\n\t\t\n\t\tВсегоСтрок = НайденныеСтроки.Количество();\n\t                              \n\t\tСсылка = НайденныеСтроки[ВсегоСтрок-1].Ссылка;\n\t\t\n\t\tНомерСтроки = 1;\n\t\t\n\t\tДля Каждого СтрочкаЗаказа Из НайденныеСтроки Цикл  \n\t\t\t\n\t\t\t//++Крутских Ситек 20.02.25\n\t\t\tОбъектМодифицирован = (МассивМодифицированныхСтрок.Найти(СтрочкаЗаказа.Ссылка) <> Неопределено);\n\t\t\t//--\n\t\t\tЕсли СтрочкаЗаказа.Ссылка = Ссылка Тогда\n\t\t\t\tЕсли НомерСтроки = ВсегоСтрок Тогда\n\t\t\t\t\tОтобрано          = КонтрольОтобрано;\n\t\t\t\tИначе  \n\t\t\t\t\tОтобрано          = Мин(КонтрольОтобрано, СтрочкаЗаказа.Количество);\n\t\t\t\tКонецЕсли;  \n\t\t\tИначе\n\t\t\t\tКонтрольОтобрано          = Макс(КонтрольОтобрано - СтрочкаЗаказа.Количество, 0);\n\t            Отобрано = СтрочкаЗаказа.Количество;\n\t\t\tКонецЕсли; \n\t\t\t\n\t\t\t//++Крутских Ситек 20.02.25++           \t\t\t\n\t\t\tЕсли ОбъектМодифицирован ИЛИ Отобрано <> СтрочкаЗаказа.Количество Тогда\t\t\t  \n\t\t\t//Если Отобрано <> СтрочкаЗаказа.Количество Тогда\n\t\t\t//--Крутских Ситек 20.02.25--\n\t\t\t\tНовСтр = ТаблицаИзмененныеСтроки.Добавить(); \n\t\t\t\tНовСтр.КодСтрокиКИС =  \t СтрочкаЗаказа.КодСтрокиКИС;\n\t\t\t\tНовСтр.НомерСтроки =  \t СтрочкаЗаказа.НомерСтроки;\n\t\t\t\tНовСтр.Номенклатура = \t СтрочкаЗаказа.Номенклатура;\n\t\t\t\tНовСтр.КоличествоДО = \t Отобрано;\n\t\t\t\tНовСтр.КоличествоПосле = СтрочкаЗаказа.Количество;\t\t\t\t\n\t\t\tКонецЕсли;  \n\t\t\t\n\t\t\t\n\t\t\tНомерСтроки = НомерСтроки + 1; \n\t\t\t\n\t\tКонецЦикла;\n\t\t\n\tКонецЦикла;\n\n\tТаблицаИзмененныеСтроки.Сортировать(\"НомерСтроки\");\n\t\n\tВозврат ТаблицаИзмененныеСтроки;\n\t\nКонецФункции\t\n   \n\nФункция ПолучитьКоличествоСпланировано(ЗаказНаОтгрузку, МассивПартий)\n\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст = \"ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t               |\tусЗаказНаОтгрузку.СтадииОтгрузки КАК СтадииОтгрузки\n\t               |ПОМЕСТИТЬ втСтадии\n\t               |ИЗ\n\t               |\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t               |ГДЕ\n\t               |\tусЗаказНаОтгрузку.Ссылка = &ЗаказНаОтгрузку\n\t               |;\n\t               |\n\t               |////////////////////////////////////////////////////////////////////////////////\n\t               |ВЫБРАТЬ\n\t               |\tвтСтадии.СтадииОтгрузки КАК Стадии,\n\t               |\tусИерархияЗон.Зона КАК Зона,\n\t               |\tвтСтадии.СтадииОтгрузки.ТребуетсяУпаковкаКонтрольСобранныхЗаказов КАК СтадииОтгрузкиТребуетсяУпаковкаКонтрольСобранныхЗаказов\n\t               |ПОМЕСТИТЬ втЗоныГотовКОтгрузке\n\t               |ИЗ\n\t               |\tвтСтадии КАК втСтадии\n\t               |\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.усИерархияЗон КАК усИерархияЗон\n\t               |\t\tПО втСтадии.СтадииОтгрузки.ПоследняяЗона = усИерархияЗон.Родитель\n\t               |\n\t               |ИНДЕКСИРОВАТЬ ПО\n\t               |\tЗона\n\t               |;\n\t               |\n\t               |////////////////////////////////////////////////////////////////////////////////\n\t               |ВЫБРАТЬ\n\t               |\tусПоложениеКонтейнеровОстатки.Ячейка КАК Ячейка,\n\t               |\tусПоложениеКонтейнеровОстатки.Контейнер КАК Контейнер\n\t               |ПОМЕСТИТЬ втКонтейнеры\n\t               |ИЗ\n\t               |\tРегистрНакопления.усПоложениеКонтейнеров.Остатки(, Контейнер.ДокументПривязки = &ЗаказНаОтгрузку) КАК усПоложениеКонтейнеровОстатки\n\t               |ГДЕ\n\t               |\tусПоложениеКонтейнеровОстатки.КоличествоОстаток = 1\n\t               |\n\t               |ИНДЕКСИРОВАТЬ ПО\n\t               |\tЯчейка\n\t               |;\n\t               |\n\t               |////////////////////////////////////////////////////////////////////////////////\n\t               |ВЫБРАТЬ\n\t               |\tвтКонтейнеры.Ячейка КАК Ячейка,\n\t               |\tвтКонтейнеры.Контейнер КАК Контейнер\n\t               |ПОМЕСТИТЬ втВложенныеКонтейнеры\n\t               |ИЗ\n\t               |\tвтКонтейнеры КАК втКонтейнеры\n\t               |ГДЕ\n\t               |\tвтКонтейнеры.Ячейка ССЫЛКА Справочник.усКонтейнеры\n\t               |\n\t               |ИНДЕКСИРОВАТЬ ПО\n\t               |\tЯчейка\n\t               |;\n\t               |\n\t               |////////////////////////////////////////////////////////////////////////////////\n\t               |ВЫБРАТЬ\n\t               |\tусПоложениеКонтейнеровОстатки.Ячейка КАК Ячейка,\n\t               |\tусПоложениеКонтейнеровОстатки.Контейнер КАК МастерКонтейнер\n\t               |ПОМЕСТИТЬ втМастерКонтейнеры\n\t               |ИЗ\n\t               |\tРегистрНакопления.усПоложениеКонтейнеров.Остатки(\n\t               |\t\t\t,\n\t               |\t\t\tКонтейнер В\n\t               |\t\t\t\t(ВЫБРАТЬ\n\t               |\t\t\t\t\tвтВложенныеКонтейнеры.Ячейка\n\t               |\t\t\t\tИЗ\n\t               |\t\t\t\t\tвтВложенныеКонтейнеры КАК втВложенныеКонтейнеры)) КАК усПоложениеКонтейнеровОстатки\n\t               |ГДЕ\n\t               |\tусПоложениеКонтейнеровОстатки.КоличествоОстаток = 1\n\t               |\n\t               |ИНДЕКСИРОВАТЬ ПО\n\t               |\tМастерКонтейнер\n\t               |;\n\t               |\n\t               |////////////////////////////////////////////////////////////////////////////////\n\t               |ВЫБРАТЬ\n\t               |\tвтКонтейнеры.Ячейка КАК Ячейка,\n\t               |\tNULL КАК МастерКонтейнер,\n\t               |\tвтКонтейнеры.Контейнер КАК Контейнер\n\t               |ПОМЕСТИТЬ втПоложениеКонтейнеров\n\t               |ИЗ\n\t               |\tвтКонтейнеры КАК втКонтейнеры\n\t               |ГДЕ\n\t               |\tвтКонтейнеры.Ячейка ССЫЛКА Справочник.усЯчейки\n\t               |\n\t               |ОБЪЕДИНИТЬ ВСЕ\n\t               |\n\t               |ВЫБРАТЬ\n\t               |\tвтМастерКонтейнеры.Ячейка,\n\t               |\tвтМастерКонтейнеры.МастерКонтейнер,\n\t               |\tвтВложенныеКонтейнеры.Контейнер\n\t               |ИЗ\n\t               |\tвтМастерКонтейнеры КАК втМастерКонтейнеры\n\t               |\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ втВложенныеКонтейнеры КАК втВложенныеКонтейнеры\n\t               |\t\tПО втМастерКонтейнеры.МастерКонтейнер = втВложенныеКонтейнеры.Ячейка\n\t               |\n\t               |ИНДЕКСИРОВАТЬ ПО\n\t               |\tКонтейнер\n\t               |;\n\t               |\n\t               |////////////////////////////////////////////////////////////////////////////////\n\t               |ВЫБРАТЬ\n\t               |\tусОстаткиТоваровОстатки.Контейнер КАК Контейнер,\n\t               |\tусАналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,\n\t               |\tусАналитикаУчетаНоменклатуры.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t               |\tусАналитикаУчетаНоменклатуры.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t               |\tусОстаткиТоваровОстатки.КоличествоОстаток КАК КоличествоОстаток\n\t               |ПОМЕСТИТЬ втСостав\n\t               |ИЗ\n\t               |\tРегистрНакопления.усОстаткиТоваров.Остатки(\n\t               |\t\t\t,\n\t               |\t\t\tКонтейнер В\n\t               |\t\t\t\t(ВЫБРАТЬ\n\t               |\t\t\t\t\tвтКонтейнеры.Контейнер\n\t               |\t\t\t\tИЗ\n\t               |\t\t\t\t\tвтКонтейнеры КАК втКонтейнеры)) КАК усОстаткиТоваровОстатки\n\t               |\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.усАналитикаУчетаНоменклатуры КАК усАналитикаУчетаНоменклатуры\n\t               |\t\tПО усОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры = усАналитикаУчетаНоменклатуры.КлючАналитики\n\t               |\n\t               |ИНДЕКСИРОВАТЬ ПО\n\t               |\tКонтейнер\n\t               |;\n\t               |\n\t               |////////////////////////////////////////////////////////////////////////////////\n\t               |ВЫБРАТЬ\n\t               |\tвтПоложениеКонтейнеров.Ячейка КАК Ячейка,\n\t               |\tвтПоложениеКонтейнеров.Ячейка.Зона КАК Зона,\n\t               |\tвтПоложениеКонтейнеров.МастерКонтейнер КАК МастерКонтейнер,\n\t               |\tвтПоложениеКонтейнеров.Контейнер КАК Контейнер,\n\t               |\tвтСостав.Номенклатура КАК Номенклатура,\n\t               |\tвтСостав.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t               |\tвтСостав.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t               |\tСУММА(втСостав.КоличествоОстаток) КАК Количество\n\t               |ПОМЕСТИТЬ втОстатки\n\t               |ИЗ\n\t               |\tвтПоложениеКонтейнеров КАК втПоложениеКонтейнеров\n\t               |\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ втСостав КАК втСостав\n\t               |\t\tПО втПоложениеКонтейнеров.Контейнер = втСостав.Контейнер\n\t               |\n\t               |СГРУППИРОВАТЬ ПО\n\t               |\tвтПоложениеКонтейнеров.Ячейка,\n\t               |\tвтПоложениеКонтейнеров.Ячейка.Зона,\n\t               |\tвтПоложениеКонтейнеров.МастерКонтейнер,\n\t               |\tвтПоложениеКонтейнеров.Контейнер,\n\t               |\tвтСостав.Номенклатура,\n\t               |\tвтСостав.СтатусНоменклатуры,\n\t               |\tвтСостав.ПартияНоменклатуры\n\t               |\n\t               |ИНДЕКСИРОВАТЬ ПО\n\t               |\tЗона\n\t               |;\n\t               |\n\t               |////////////////////////////////////////////////////////////////////////////////\n\t               |ВЫБРАТЬ\n\t               |\tвтОстатки.Номенклатура КАК Номенклатура,\n\t               |\tвтОстатки.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t               |\tвтОстатки.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t               |\tВЫБОР\n\t               |\t\tКОГДА втЗоныГотовКОтгрузке.Зона ЕСТЬ NULL\n\t               |\t\t\tТОГДА 0\n\t               |\t\tКОГДА втЗоныГотовКОтгрузке.СтадииОтгрузкиТребуетсяУпаковкаКонтрольСобранныхЗаказов\n\t               |\t\t\t\tИ НЕ втОстатки.Контейнер.Упакован\n\t               |\t\t\t\tИ НЕ ЕСТЬNULL(втОстатки.МастерКонтейнер.Упакован, ЛОЖЬ)\n\t               |\t\t\tТОГДА 0\n\t               |\t\tИНАЧЕ втОстатки.Количество\n\t               |\tКОНЕЦ КАК ГотовоКОтгрузке,\n\t               |\tВЫБОР\n\t               |\t\tКОГДА втОстатки.Контейнер.Упакован\n\t               |\t\t\t\tИЛИ ЕСТЬNULL(втОстатки.МастерКонтейнер.Упакован, ЛОЖЬ)\n\t               |\t\t\tТОГДА втОстатки.Количество\n\t               |\t\tИНАЧЕ 0\n\t               |\tКОНЕЦ КАК Упаковано,\n\t               |\tвтОстатки.Количество КАК Отобрано\n\t               |ПОМЕСТИТЬ втСостояниеПоОстаткам\n\t               |ИЗ\n\t               |\tвтОстатки КАК втОстатки\n\t               |\t\tЛЕВОЕ СОЕДИНЕНИЕ втЗоныГотовКОтгрузке КАК втЗоныГотовКОтгрузке\n\t               |\t\tПО втОстатки.Зона = втЗоныГотовКОтгрузке.Зона\n\t               |;\n\t               |\n\t               |////////////////////////////////////////////////////////////////////////////////\n\t               |ВЫБРАТЬ\n\t               |\tусКонтрольОтгрузкиОбороты.Номенклатура КАК Номенклатура,\n\t               |\tусКонтрольОтгрузкиОбороты.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t               |\tусКонтрольОтгрузкиОбороты.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t               |\tусКонтрольОтгрузкиОбороты.КоличествоОтгруженоОборот КАК Отгружено\n\t               |ПОМЕСТИТЬ втПлан\n\t               |ИЗ   \n\t\t\t\t   //++Крутских Ситек 11.02.25++\n\t               //|\tРегистрНакопления.усКонтрольОтгрузки.Обороты(&МинимальнаяДатаЗаказа, , , ЗаказНаОтгрузку = &ЗаказНаОтгрузку) КАК усКонтрольОтгрузкиОбороты\n\t\t\t\t   |\tРегистрНакопления.усКонтрольОтгрузки.Обороты(, , , ЗаказНаОтгрузку = &ЗаказНаОтгрузку) КАК усКонтрольОтгрузкиОбороты\t\t\t\t  \n\t\t\t\t   //--Крутских Ситек 11.02.2+--\n\t\t\t\t   |;\n\t               |\n\t               |////////////////////////////////////////////////////////////////////////////////\n\t               |ВЫБРАТЬ\n\t               |\tвтСостояние.Номенклатура КАК Номенклатура,\n\t               |\tвтСостояние.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t               |\tвтСостояние.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t               |\tСУММА(втСостояние.Отобрано + втСостояние.Отгружено) КАК Отобрано,\n\t               |\tСУММА(втСостояние.Отгружено) КАК Отгружено\n\t               |ИЗ\n\t               |\t(ВЫБРАТЬ\n\t               |\t\tвтСостояниеПоОстаткам.Номенклатура КАК Номенклатура,\n\t               |\t\tвтСостояниеПоОстаткам.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t               |\t\tЕСТЬNULL(усПартииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.усПартииНоменклатуры.ПустаяСсылка)) КАК ПартияНоменклатуры,\n\t               |\t\tвтСостояниеПоОстаткам.Отобрано КАК Отобрано,\n\t               |\t\t0 КАК Отгружено\n\t               |\tИЗ\n\t               |\t\tвтСостояниеПоОстаткам КАК втСостояниеПоОстаткам\n\t               |\t\t\tЛЕВОЕ СОЕДИНЕНИЕ Справочник.усПартииНоменклатуры КАК усПартииНоменклатуры\n\t               |\t\t\tПО втСостояниеПоОстаткам.ПартияНоменклатуры = усПартииНоменклатуры.Ссылка    \n\t\t\t\t   //++Крутских Ситек 12.02.25++\n\t\t\t\t   //|\t\t\t\tИ (усПартииНоменклатуры.Ссылка В (&МассивПартий))\n\t\t\t\t   //|\t\t\t\tИ (усПартииНоменклатуры.Ссылка В (&МассивПартий) ИЛИ усПартииНоменклатуры.Ссылка = Значение(Справочник.усПартииНоменклатуры.ПустаяСсылка))\n\t\t\t\t   //--Крутских Ситек 12.02.25--\n\t               |\t\n\t               |\tОБЪЕДИНИТЬ ВСЕ\n\t               |\t\n\t               |\tВЫБРАТЬ\n\t               |\t\tвтПлан.Номенклатура,\n\t               |\t\tвтПлан.СтатусНоменклатуры,\n\t               |\t\tвтПлан.ПартияНоменклатуры,\n\t               |\t\t0,\n\t               |\t\tвтПлан.Отгружено\n\t               |\tИЗ\n\t               |\t\tвтПлан КАК втПлан) КАК втСостояние\n\t               |\n\t               |СГРУППИРОВАТЬ ПО\n\t               |\tвтСостояние.Номенклатура,\n\t               |\tвтСостояние.СтатусНоменклатуры,\n\t               |\tвтСостояние.ПартияНоменклатуры\";\n\n\tЗапрос.УстановитьПараметр(\"ЗаказНаОтгрузку\",        ЗаказНаОтгрузку);\n\tЗапрос.УстановитьПараметр(\"МинимальнаяДатаЗаказа\",  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаказНаОтгрузку, \"Дата\"));\n\tЗапрос.УстановитьПараметр(\"МассивПартий\",        МассивПартий);\n\t\n\tВозврат Запрос.Выполнить().Выгрузить();\n\nКонецФункции\t \n\n#КонецОбласти",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\Бюро1440_ОбщегоНазначенияПовтИсп\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\Бюро1440_ОбщегоНазначенияПовтИсп\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/f11bee392359b792e7423167805f45b221dc0cc0/_bsl%5CResources%5C726598511%5CCommonModule%5C%D0%91%D1%8E%D1%80%D0%BE1440_%D0%9E%D0%B1%D1%89%D0%B5%D0%B3%D0%BE%D0%9D%D0%B0%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D1%8F%D0%9F%D0%BE%D0%B2%D1%82%D0%98%D1%81%D0%BF%5CCommonModule.obj.bsl",
            "size": 383,
            "truncated": false,
            "content": "#Область ПрограммныйИнтерфейс\n\nФункция ЗначениеНастройки(ИдентификаторНастройки) Экспорт\n\t \n\tВозврат Справочники.Бюро1440_Настройки.ЗначениеНастройки(ИдентификаторНастройки);\t\t \n\t \nКонецФункции\n \n#КонецОбласти",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\УправлениеСвойствами\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\УправлениеСвойствами\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/a59808be8eae30486709393d4c66df06ee8f5baf/_bsl%5CResources%5C726598511%5CCommonModule%5C%D0%A3%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%D0%A1%D0%B2%D0%BE%D0%B9%D1%81%D1%82%D0%B2%D0%B0%D0%BC%D0%B8%5CCommonModule.obj.bsl",
            "size": 4346,
            "truncated": false,
            "content": "&ИзменениеИКонтроль(\"СвойстваПоВидуДополнительныхРеквизитов\")\nФункция Бюро1440_СвойстваПоВидуДополнительныхРеквизитов(Свойства, ВидСвойств)\n\t\n\tСвойстваПоВиду = Новый Массив;\n\tСписокСвойств = Свойства.ВыгрузитьКолонку(\"Свойство\");\n\tВидыСвойствОбъектов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(СписокСвойств, \"ВидСвойств\");\n\tЕсли ВидСвойств = Перечисления.ВидыСвойств.ДополнительныеРеквизиты Тогда\n\t\tДля Каждого Свойство Из СписокСвойств Цикл\n\t\t\tВидСвойствОбъекта = ВидыСвойствОбъектов.Получить(Свойство);\n\t\t\tЕсли Не ЗначениеЗаполнено(ВидСвойствОбъекта) Тогда\n\t\t\t\tПродолжить;\n\t\t\tКонецЕсли;\n\t\t\tЕсли Не ЗначениеЗаполнено(ВидСвойствОбъекта.ВидСвойств)\n\t\t\t\tИли ВидСвойствОбъекта.ВидСвойств = ВидСвойств Тогда\n\t\t\t\tСвойстваПоВиду.Добавить(Свойство);\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\tИначеЕсли ВидСвойств = Перечисления.ВидыСвойств.Метки Тогда\n\t\tДля Каждого Свойство Из СписокСвойств Цикл\n\t\t\tВидСвойствОбъекта = ВидыСвойствОбъектов.Получить(Свойство);\n\t\t\tЕсли Не ЗначениеЗаполнено(ВидСвойствОбъекта) Тогда\n\t\t\t\tПродолжить;\n\t\t\tКонецЕсли;\n\t\t\tЕсли ВидСвойствОбъекта.ВидСвойств = ВидСвойств Тогда\n\t\t\t\tСвойстваПоВиду.Добавить(Свойство);\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\tКонецЕсли;\n\t\n\tВозврат СвойстваПоВиду;\n\t\nКонецФункции\n\n&После(\"ПриСозданииНаСервере\")\nПроцедура Бюро1440_ПриСозданииНаСервере(Форма, ДополнительныеПараметры = Неопределено) Экспорт\n\t\n\tЕсли Форма.ИмяФормы = \"Справочник.усНоменклатура.Форма.ФормаЭлемента\" Тогда\n\t\tДобавляемыеРеквизиты\t= Новый Массив;\n\t\t\n\t\tРеквизит_Бюро1440_ВестиУчетПоСрокамГодности = Новый РеквизитФормы(\"Бюро1440_ВестиУчетПоСрокамГодности\",\tНовый ОписаниеТипов(\"Булево\"),\t, \"Вести учет по срокам годности\");\n\t\t\n\t\tДобавляемыеРеквизиты.Добавить(Реквизит_Бюро1440_ВестиУчетПоСрокамГодности);\n\t\t\n\t\tФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);\n\t\t\n\t\tГруппаФормы = Форма.Элементы.Найти(\"ГруппаСрокиХранения\");\n\t\tЕсли ГруппаФормы <> Неопределено Тогда\n\t\t\tИмяЭлемента = \"Бюро1440_ВестиУчетПоСрокамГодности\";\n\t\t\tЕсли Форма.Элементы.Найти(ИмяЭлемента) = Неопределено Тогда\n\t\t\t\tЭлементФормы = Форма.Элементы.Добавить(ИмяЭлемента, Тип(\"ПолеФормы\"), ГруппаФормы);        \n\t\t\t\tЭлементФормы.Вид = ВидПоляФормы.ПолеВвода;\n\t\t\t\tЭлементФормы.ПутьКДанным = \"Бюро1440_ВестиУчетПоСрокамГодности\";\n\t\t\t\t//ЭлементФормы.МногострочныйРежим = Истина;\n\t\t\t\t//ЭлементФормы.Высота = 3;\n\t\t\tКонецЕсли;   \t\t\t\n\t\tКонецЕсли;\n\t\t\n\t\tФорма.Бюро1440_ВестиУчетПоСрокамГодности = Форма.Объект.Бюро1440_ВестиУчетПоСрокамГодности;\n\tКонецЕсли;\n\t\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\усАлгоритмыОтбора\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\усАлгоритмыОтбора\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/2265615467752e11638f61516059d09ca18a4573/_bsl%5CResources%5C726598511%5CCommonModule%5C%D1%83%D1%81%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC%D1%8B%D0%9E%D1%82%D0%B1%D0%BE%D1%80%D0%B0%5CCommonModule.obj.bsl",
            "size": 148302,
            "truncated": false,
            "content": "&ИзменениеИКонтроль(\"ОтобратьТовар\")\nФункция Бюро1440_ОтобратьТовар(Алгоритм, Документ, ПараметрыАналитикиУчета, Количество, Логи, НомерКонтейнера, НомерПартии, СрокГодности, ПриостановитьЗадачи)\n\n\tНоменклатура \t\t = ПараметрыАналитикиУчета.Номенклатура;\n\tСтатусНоменклатуры   = ПараметрыАналитикиУчета.СтатусНоменклатуры;\n\tПартияНоменклатуры\t = ПараметрыАналитикиУчета.ПартияНоменклатуры;\n\tУпаковкаНоменклатуры = ПараметрыАналитикиУчета.УпаковкаНоменклатуры;\n\tОрганизация \t\t = ПараметрыАналитикиУчета.Организация;\n\n\tСпланировано = 0;\n\n\tПланироватьПодпитку = Алгоритм.ПланироватьПодпитку;\n\tОтбиратьПлан \t\t= Алгоритм.УчитыватьПланПриход;\n\tЗона\t\t\t\t= Алгоритм.ОтбиратьВЗону;\n\n\tЕсли Не ЗначениеЗаполнено(Зона) Тогда\n\t\tЕсли ТипЗнч(Документ) = Тип(\"ДокументСсылка.усГруппаОтбора\") Тогда\n\t\t\tЗона = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, \"ЗонаСортировки\");\n\t\tИначеЕсли ТипЗнч(Документ) = Тип(\"ДокументСсылка.усВнутреннийЗаказ\") Тогда\n\t\t\tЗона = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, \"ЗонаКомплектации\");\n\t\tИначе\n\t\t\tсткДанныеСтадии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, Новый Структура(\"СтадииОтгрузки\", \"СтадииОтгрузки\"));\n\t\t\tЗона = ОпределитьЗонуОтбораПоСтадии(сткДанныеСтадии.СтадииОтгрузки, Алгоритм, Документ);\n\t\tКонецЕсли;\n\tКонецЕсли;\n\n\tВестиУчетТовараВУпаковках_2_0 = усРаботаСУпаковкамиНоменклатуры.ВестиУчетТовараВУпаковках_2_0(Номенклатура);\n\n\tЕсли ВестиУчетТовараВУпаковках_2_0 И ЗначениеЗаполнено(УпаковкаНоменклатуры) Тогда\n\t\tсткКратностьОтбора = ПолучитьДанныеУпаковкиНоменклатуры(УпаковкаНоменклатуры);\n\t\tЕсли ЗначениеЗаполнено(Алгоритм.КратностьОтбора) И сткКратностьОтбора.ТипГрузообработки <> Алгоритм.КратностьОтбора Тогда\n\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Тип грузообработки упаковки номенклатуры %1 в заказе не соответствует кратности отбора в алгоритме';\n\t\t\t\t\t|en='Cargo handling type of product packaging %1 in the order does not match the picking ratio in the algorithm'\"));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, УпаковкаНоменклатуры, Строка(УпаковкаНоменклатуры));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\t\tКонецЕсли;\n\t\t\tВозврат Спланировано;\n\t\tКонецЕсли;\n\tИначе\n\t\tсткКратностьОтбора = ПолучитьКратностьОтбора(Номенклатура, Алгоритм.КратностьОтбора);\n\tКонецЕсли;\n\n\t#Удаление \n\tЕсли Количество < сткКратностьОтбора.Коэффициент * (100 - сткКратностьОтбора.ПроцентОтклонения) / 100 Тогда\n\t#КонецУдаления\n\t#Вставка  \n\tЕсли ЗначениеЗаполнено(сткКратностьОтбора.УпаковкаНоменклатуры) И Количество < сткКратностьОтбора.Коэффициент * (100 - сткКратностьОтбора.ПроцентОтклонения) / 100 Тогда\n\t// -- Ситек Булдаков 09.03.24\n\t#КонецВставки\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Требуемое количество меньше разрешенной кратности отбора';\n\n\t\t\t\t|en='The required quantity is less than the permitted picking ratio.'\"));\n\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, УпаковкаНоменклатуры, Строка(УпаковкаНоменклатуры));\n\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\tКонецЕсли;\n\t\tВозврат Спланировано;\n\tКонецЕсли;\n\n\tсткДанныеНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура,\n\t\t\t\t\t\t\tНовый Структура(\"УчетПоСрокамГодности,СрокХранения,ЗапасГодности\", \"МодельУчета.ВестиУчетПоСрокамГодности\", \"СрокХранения\", \"ЗапасГодности\"));\n\n\t#Удаление // ++ Ситек Ситников А.В. 18.12.24 Убираем проверку партии по строку годности, будет вводиться на ТСД\n\tЕсли сткДанныеНоменклатуры.УчетПоСрокамГодности Тогда\n\t\tМинимальныйСрокГодности = усУправлениеОтгрузкой.МинимальныйСрокГодности(Документ, Номенклатура, СтатусНоменклатуры, УпаковкаНоменклатуры,\n\t\t\t\t\t\t\t\t\tНовый Структура(\"ПартияНоменклатуры, НомерПартии, СрокГодности\", ПартияНоменклатуры, НомерПартии, СрокГодности));\n\tИначе\n\t\tМинимальныйСрокГодности = Дата(1,1,1);\n\tКонецЕсли;\n    #КонецУдаления // -- Ситек Ситников А.В. 18.12.24 Убираем проверку партии по строку годности, будет вводиться на ТСД\n\t#Вставка // ++ Ситек Ситников А.В. 18.12.24 Убираем проверку партии по строку годности, будет вводиться на ТСД\n\tОтключитьКонтрольСрокаГодности = Константы.Бюро1440_ОтключаемКонтрольСрокаГодностиПрииПланированииОтбора.Получить();\n\tЕсли ОтключитьКонтрольСрокаГодности Тогда\n\t\tМинимальныйСрокГодности = Дата(1,1,1);\n\tИначе\n\t\tЕсли сткДанныеНоменклатуры.УчетПоСрокамГодности Тогда\n\t\t\tМинимальныйСрокГодности = усУправлениеОтгрузкой.МинимальныйСрокГодности(Документ, Номенклатура, СтатусНоменклатуры, УпаковкаНоменклатуры,\n\t\t\tНовый Структура(\"ПартияНоменклатуры, НомерПартии, СрокГодности\", ПартияНоменклатуры, НомерПартии, СрокГодности));\n\t\tИначе\n\t\t\tМинимальныйСрокГодности = Дата(1,1,1);\n\t\tКонецЕсли;\n\tКонецЕсли;\n\t#КонецВставки // -- Ситек Ситников А.В. 18.12.24 Убираем проверку партии по строку годности, будет вводиться на ТСД\n\n\tТипЗоны = ПолучитьТипЗоныОтбора(Алгоритм.ТипАлгоритмаОтбора);\n\n\t// Таблица значений, в которую будет получен результат\n\tДанныеКомпоновки = Неопределено;\n\t#Удаление \n    Результат = ПолучитьРезультатЗапросаОтбораСостава(Алгоритм, ТипЗоны, Документ, ПараметрыАналитикиУчета, МинимальныйСрокГодности, Количество,\n\t\t\t\t\t\t\tсткКратностьОтбора.Коэффициент * (100 - сткКратностьОтбора.ПроцентОтклонения) / 100, сткКратностьОтбора.ТипГрузообработки,\n\t\t\t\t\t\t\tНомерКонтейнера, НомерПартии, СрокГодности, ДанныеКомпоновки);\n\t#КонецУдаления\n\t#Вставка  \n\t// ++ Ситек Булдаков 15.03.24\t\n\tЕсли ЗначениеЗаполнено(сткКратностьОтбора.УпаковкаНоменклатуры) Тогда   \n\t\tКратностьОтбора\t= сткКратностьОтбора.Коэффициент * (100 - сткКратностьОтбора.ПроцентОтклонения) / 100;\n\tИначе\n\t\tКратностьОтбора\t= 0.000000001;\n\tКонецЕсли;\n\t\n\tРезультат = ПолучитьРезультатЗапросаОтбораСостава(Алгоритм, Документ, ПараметрыАналитикиУчета, МинимальныйСрокГодности, Количество,\n\t\tКратностьОтбора, сткКратностьОтбора.ТипГрузообработки, НомерКонтейнера, НомерПартии, СрокГодности);\n\t// -- Ситек Булдаков 15.03.24\n\t#КонецВставки\n\tЕсли Результат = Неопределено Тогда\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Не найдено подходящих остатков';\n\t\t\t\t|en='No suitable balances are found.'\"), Истина);\n\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\tКонецЕсли;\n\t\tВозврат Спланировано;\n\tКонецЕсли;\n\n\tЗадачаОбъект = Неопределено;\n\t\n#Область ОтборПоСвободнымОстаткамПланам\n    // 1 - Отбор по свободным остаткам и планам\n\tСтрокиОстатки = Новый Массив();\n\tСтрокиПланы   = Новый Массив();\n\n\t// Остатки\n\tСтрокаГруппировки = Результат.Строки.Найти(Ложь, \"ПланПриход\");\n\tЕсли СтрокаГруппировки <> Неопределено Тогда\n\t\tСтрокиОстатки = СтрокаГруппировки.Строки;\n\tКонецЕсли;\n\n\t// Планы\n\tСтрокаГруппировки = Результат.Строки.Найти(Истина, \"ПланПриход\");\n\tЕсли СтрокаГруппировки <> Неопределено Тогда\n\t\tСтрокиПланы = СтрокаГруппировки.Строки;\n\tКонецЕсли;\n\n\tКоличествоСтрокОстатки = СтрокиОстатки.Количество();\n\tКоличествоСтрокПланы   = СтрокиПланы.Количество();\n\n\tЕсли КоличествоСтрокОстатки ИЛИ КоличествоСтрокПланы Тогда\n\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Найдены подходящие остатки. %1. %2';\n\t\t\t\t|en='Founded suitable balances. %1. %2'\"));\n\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, Результат, НСтр(\"ru='Остатки';\n\t\t\t\t|en='Balance'\"));\n\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, ДанныеКомпоновки, НСтр(\"ru='Отладить запрос';\n\t\t\t\t|en='Debug request'\"));\n\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, 1);\n\t\tКонецЕсли;\n\n\t\t// 1 - остатки без планов прихода\n\t\t// 2 - планы прихода по зонам\n\t\tДля ИндексПроходаОстатки = 1 По 2 Цикл\n\n\t\t\tЕсли ИндексПроходаОстатки = 1 Тогда\n\t\t\t\tСтрокиОбработки = СтрокиОстатки;\n\t\t\tИначеЕсли ИндексПроходаОстатки = 2 Тогда\n\t\t\t\tСтрокиОбработки = СтрокиПланы;\n\t\t\tИначе\n\t\t\t\tПродолжить;\n\t\t\tКонецЕсли;\n\n\t\t\tЗадачаОбъект = Неопределено;\n\t\t\t// Обработка строк дерева значений\n\t\t\tДля Каждого текСтрокаРезультата Из СтрокиОбработки Цикл\n\n\t\t\t\tЕсли ВестиУчетТовараВУпаковках_2_0 И текСтрокаРезультата.УпаковкаНоменклатуры.Коэффициент > Количество Тогда\n\t\t\t\t\tПродолжить;\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tСвободноеКоличество = текСтрокаРезультата.Количество + ?(ОтбиратьПлан, текСтрокаРезультата.КоличествоПриход, 0);\n\n\t\t\t\t#Удаление \n\t\t\t\tЕсли СвободноеКоличество < сткКратностьОтбора.Коэффициент * (100 - сткКратностьОтбора.ПроцентОтклонения) / 100 Тогда\n\t\t\t\t#КонецУдаления\n\t\t\t\t#Вставка  \n\t\t\t\t// ++ Ситек Булдаков 15.03.24\n\t\t\t\tЕсли СвободноеКоличество < КратностьОтбора Тогда\n\t\t\t\t// -- Ситек Булдаков 15.03.24\n\t\t\t\t#КонецВставки\n\t\t\t\t\tПродолжить;\n\t\t\t\tКонецЕсли;\n\n\t\t\t\t#Удаление \n\t\t\t\tЕсли (Количество - Спланировано) < сткКратностьОтбора.Коэффициент Тогда\n\t\t\t\t\tПродолжить;\n\t\t\t\tКонецЕсли;\n\t\t\t\t#КонецУдаления\n\t\t\t\t#Вставка  \n\t\t\t\t// ++ Ситек Булдаков 09.03.24\n\t\t\t\tЕсли ЗначениеЗаполнено(сткКратностьОтбора.УпаковкаНоменклатуры) Тогда\n\t\t\t\t\tПроверочныйКоэффициент\t= сткКратностьОтбора.Коэффициент;\n\t\t\t\tИначе\n\t\t\t\t\tПроверочныйКоэффициент\t= 0;\n\t\t\t\tКонецЕсли; \n\t\t\t\tЕсли (Количество - Спланировано) < ПроверочныйКоэффициент Тогда\n\t\t\t\t\tПродолжить;\n\t\t\t\tКонецЕсли;\n\t\t\t\t// -- Ситек Булдаков 09.03.24\n\t\t\t\t#КонецВставки\n\n\t\t\t\tЕсли ПолучитьФункциональнуюОпцию(\"усИспользуетсяУчетПартийТоваров\") Тогда\n\t\t\t\t\tПартияНоменклатурыОтбор = текСтрокаРезультата.ПартияНоменклатуры;\n\t\t\t\tИначе\n\t\t\t\t\tПартияНоменклатурыОтбор = Неопределено;\n\t\t\t\tКонецЕсли;\n\t\t\t\tсткПараметрыАналитикиУчета = усУправлениеСкладом.ПолучитьПараметрыАналитикиУчета(ПараметрыАналитикиУчета.Номенклатура,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t текСтрокаРезультата.СтатусНоменклатуры,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ПартияНоменклатурыОтбор,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t текСтрокаРезультата.УпаковкаНоменклатуры,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t Организация);\n\t\t\t\tСоздатьЗадачуОтбораТовара(Алгоритм, ЗадачаОбъект, текСтрокаРезультата, Количество, Спланировано, СвободноеКоличество, сткКратностьОтбора, Документ, Зона, сткПараметрыАналитикиУчета, Логи, ПриостановитьЗадачи);\n\n\t\t\t\tЕсли Количество <= Спланировано Тогда\n\t\t\t\t\tПрервать;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЦикла;\n\n\t\t\tЕсли Количество - Спланировано > 0 И Логи <> Неопределено Тогда\n\t\t\t\tЕсли ИндексПроходаОстатки = 1 Тогда\n\t\t\t\t\tТекстЛога = НСтр(\"ru='Не удалось спланировать единиц в количестве [##Количество##]. Недостаточно фактического остатка';\n\t\t\t\t\t\t|en='Failed to plan [##Количество##] units. Insufficient actual balance'\");\n\t\t\t\tИначе\n\t\t\t\t\tТекстЛога = НСтр(\"ru='Не удалось спланировать единиц в количестве [##Количество##]. Недостаточно планового прихода';\n\t\t\t\t\t\t|en='Failed to plan [##Количество##] units. Insufficient planned receiving'\");\n\t\t\t\tКонецЕсли;\n\t\t\t\tТекстЛога = СтрЗаменить(ТекстЛога, \"[##Количество##]\", Количество - Спланировано);\n\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(ТекстЛога);\n\t\t\t\tусЛогированиеПроцессов.ДобавитьНастройкуРезультата(сткАнализа, 3);\n\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\t\tКонецЕсли;\n\n\t\t\tЕсли Не ЗадачаОбъект = Неопределено Тогда\n\t\t\t\tЗадачаОбъект.Статус = Перечисления.усСтатусыЗадач.Отменена;\n\t\t\t\tЗадачаОбъект.Записать(РежимЗаписиДокумента.Запись);\n\t\t\tКонецЕсли;\n\n\t\t\tЕсли Количество <= Спланировано Тогда\n\t\t\t\tПрервать;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\t\t\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tусЛогированиеПроцессов.ИзменитьУровень(Логи, -1);\n\t\tКонецЕсли;\n\n\tИначеЕсли Логи <> Неопределено Тогда\n\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Не найдено подходящих остатков. %1';\n\t\t\t|en='No suitable balances are found. %1'\"));\n\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, ДанныеКомпоновки, НСтр(\"ru='Отладить запрос';\n\t\t\t\t|en='Debug request'\"));\n\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\tКонецЕсли;\n\n#КонецОбласти\n\n#Область ПодпиткаПодЗаказ\n\t// 2 - Подпитка под заказ\n\tЕсли ПланироватьПодпитку И НЕ ЗначениеЗаполнено(НомерКонтейнера) Тогда\n\n\t\tЕсли Количество > Спланировано И Количество - Спланировано >= сткКратностьОтбора.Коэффициент * (100 - сткКратностьОтбора.ПроцентОтклонения) / 100 Тогда\n\t\t\t\n\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\tТекстЛога = НСтр(\"ru='Планирование подпитки под отбор единиц в количестве [##Количество##]';\n\t\t\t\t\t|en='Planning replenishment for picking of [##Количество##] units'\");\n\t\t\t\tТекстЛога = СтрЗаменить(ТекстЛога, \"[##Количество##]\", Количество - Спланировано);\n\t\t\t\t\n\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(ТекстЛога, Истина);\n\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, 1);\n\t\t\tКонецЕсли;\n\n\t\t\tЗоныПодпитки = ПолучитьЗоныОтбораДляПодпитки(Алгоритм, ТипЗоны, Номенклатура, Организация);\n\t\t\t\n\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Формирование зон отбора для подпитки. %1';\n\t\t\t\t\t|en='Formation of  picking areas for replenishment. %1'\"));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, ЗоныПодпитки, НСтр(\"ru='Зоны подпитки';\n\t\t\t\t\t|en='Replenishment areas'\"), Истина);\n\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, 1);\t\t\n\t\t\tКонецЕсли;\n\t\t\t\n\t\t\tЕсли ЗоныПодпитки.Количество() Тогда\n\n\t\t\t\tТаблицаПодпитки = Новый ТаблицаЗначений;\n\t\t\t\tТаблицаПодпитки.Колонки.Добавить(\"Ссылка\");\n\t\t\t\tТаблицаПодпитки.Колонки.Добавить(\"Зона\");\n\t\t\t\tТаблицаПодпитки.Колонки.Добавить(\"Ячейка\");\n\t\t\t\tТаблицаПодпитки.Колонки.Добавить(\"Контейнер\");\n\t\t\t\tЕсли усСервисныеФункцииВызовСервера.ИспользуютсяМастерКонтейнеры() Тогда\n\t\t\t\t\tТаблицаПодпитки.Колонки.Добавить(\"МастерКонтейнер\");\n\t\t\t\tКонецЕсли;\n\t\t\t\tТаблицаПодпитки.Колонки.Добавить(\"Номенклатура\");\n\t\t\t\tТаблицаПодпитки.Колонки.Добавить(\"СтатусНоменклатуры\");\n\t\t\t\tТаблицаПодпитки.Колонки.Добавить(\"ПартияНоменклатуры\");\n\t\t\t\tТаблицаПодпитки.Колонки.Добавить(\"УпаковкаНоменклатуры\");\n\t\t\t\tТаблицаПодпитки.Колонки.Добавить(\"Количество\");\n\t\t\t\tТаблицаПодпитки.Колонки.Добавить(\"КоличествоПриход\");\n\t\t\t\tТаблицаПодпитки.Колонки.Добавить(\"ПоследовательностьОбходаПриОтборе\");\n\t\t\t\tТаблицаПодпитки.Колонки.Добавить(\"ДатаПартии\");\n\t\t\t\tТаблицаПодпитки.Колонки.Добавить(\"ДатаПроизводства\");\n\t\t\t\tТаблицаПодпитки.Колонки.Добавить(\"СрокГодности\");\n\n\t\t\t\tсткПараметрыОтбора = Новый Структура(\"СрокГодности, МинимальныйСрокГодности, НомерПартии\", СрокГодности, МинимальныйСрокГодности, НомерПартии);\n\t\t\t\tРезультат = усАлгоритмыПодпитки.СпланироватьПодпиткуНоменклатурыПодЗаказ(ТаблицаПодпитки, Алгоритм, ТипЗоны, ЗоныПодпитки, ПараметрыАналитикиУчета, сткПараметрыОтбора,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t Количество - Спланировано, Документ, Логи, ПриостановитьЗадачи);\n\n\t\t\t\t// Обработка строк таблицы значений\n\t\t\t\tДля Каждого текСтрокаРезультата Из Результат Цикл\n\n\n\t\t\t\t\tСвободноеКоличество = текСтрокаРезультата.Количество + ?(ОтбиратьПлан, текСтрокаРезультата.КоличествоПриход, 0);\n\n\t\t\t\t\tЕсли СвободноеКоличество < сткКратностьОтбора.Коэффициент * (100 - сткКратностьОтбора.ПроцентОтклонения) / 100 Тогда\n\t\t\t\t\t\tПродолжить;\n\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\tЕсли (Количество - Спланировано) < сткКратностьОтбора.Коэффициент Тогда\n\t\t\t\t\t\tПродолжить;\n\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\tЕсли ПолучитьФункциональнуюОпцию(\"усИспользуетсяУчетПартийТоваров\") Тогда\n\t\t\t\t\t\tПартияНоменклатурыОтбор = текСтрокаРезультата.ПартияНоменклатуры;\n\t\t\t\t\tИначе\n\t\t\t\t\t\tПартияНоменклатурыОтбор = Неопределено;\n\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\tУпаковкаНоменклатурыОтбор = усРаботаСУпаковкамиНоменклатуры.ПолучитьУпаковкуРазагрегации(текСтрокаРезультата.Зона, текСтрокаРезультата.УпаковкаНоменклатуры, Организация);\n\n\t\t\t\t\tсткПараметрыАналитикиУчета = усУправлениеСкладом.ПолучитьПараметрыАналитикиУчета(ПараметрыАналитикиУчета.Номенклатура,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t текСтрокаРезультата.СтатусНоменклатуры,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ПартияНоменклатурыОтбор,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t УпаковкаНоменклатурыОтбор,\n                                                                                                     Организация);\n\n\t\t\t\t\tСоздатьЗадачуОтбораТовара(Алгоритм, ЗадачаОбъект, текСтрокаРезультата, Количество, Спланировано, СвободноеКоличество, сткКратностьОтбора,\n\t\t\t\t\t\t\t\t\t\t\t  Документ, Зона, сткПараметрыАналитикиУчета, Логи, ПриостановитьЗадачи);\n\n\t\t\t\t\tЕсли Количество <= Спланировано Тогда\n\t\t\t\t\t\tПрервать;\n\t\t\t\t\tКонецЕсли;\n\t\t\t\tКонецЦикла;\n\n\t\t\t\tЕсли Количество - Спланировано > 0 И Логи <> Неопределено Тогда\n\t\t\t\t\tТекстЛога = НСтр(\"ru='Не удалось спланировать единиц в количестве [##Количество##]';\n\t\t\t\t\t\t|en='Failed to plan [##Количество##] units'\");\n\t\t\t\t\tТекстЛога = СтрЗаменить(ТекстЛога, \"[##Количество##]\", Количество - Спланировано);\n\t\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(ТекстЛога);\n\t\t\t\t\tусЛогированиеПроцессов.ДобавитьНастройкуРезультата(сткАнализа, 3);\n\t\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tЕсли Не ЗадачаОбъект = Неопределено Тогда\n\t\t\t\t\tЗадачаОбъект.Статус = Перечисления.усСтатусыЗадач.Отменена;\n\t\t\t\t\tЗадачаОбъект.Записать(РежимЗаписиДокумента.Запись);\n\t\t\t\tКонецЕсли;\n\n\t\t\tИначеЕсли Логи <> Неопределено Тогда\n\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Не найдено ячеек для подпитки';\n\t\t\t\t\t|en='No storage bins found for replenishment'\"));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\t\tКонецЕсли;\n\n\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\tусЛогированиеПроцессов.ИзменитьУровень(Логи, -2);\n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\n\tКонецЕсли;\n#КонецОбласти\n\n\tВозврат Спланировано;\n\nКонецФункции\n\n&ИзменениеИКонтроль(\"СпланироватьОтборПоТаблице\")\nФункция Бюро1440_СпланироватьОтборПоТаблице(тбзПланирования, Логи, ПриостановитьЗадачи)\n\n\tтекНоменклатура = тбзПланирования[0].Номенклатура;\n\tПодбиратьПартии = Ложь;\n\t\n\tЕсли Логи <> Неопределено Тогда\n\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Номенклатура: %1. %2';\n\t\t\t|en='Products: %1. %2'\"));\n\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, текНоменклатура, Строка(текНоменклатура));\n\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, тбзПланирования, НСтр(\"ru='Таблица потребности';\n\t\t\t|en='Demand table'\"), Истина);\n\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, 1);\n\t\tПлановоеКоличествоПланирования = тбзПланирования.Итог(\"Количество\");\n\tКонецЕсли;\n\n\tВестиУчетТовараВУпаковках_2_0 = усРаботаСУпаковкамиНоменклатуры.ВестиУчетТовараВУпаковках_2_0(текНоменклатура);\n\n\t// нужно ли подбирать партии\n\tЕсли ОбщегоНазначения.ЗначениеРеквизитаОбъекта(текНоменклатура.МодельУчета, \"ВестиПартионныйУчет\") = Истина Тогда\n\n\t\tмсвЗаказыДляПодбораПартий = Новый Массив;\n\n\t\tДля Каждого СтрокаПланирования Из тбзПланирования Цикл\n\t\t\tЕсли Не ЗначениеЗаполнено(СтрокаПланирования.ПартияНоменклатуры) Тогда\n\t\t\t\tПодбиратьПартии = Истина;\n\t\t\t\tЕсли ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаПланирования.ЗаказНаОтгрузку, \"ОтбиратьОднуПартию\") Тогда\n\t\t\t\t\tЕсли мсвЗаказыДляПодбораПартий.Найти(СтрокаПланирования.ЗаказНаОтгрузку) = Неопределено Тогда\n\t\t\t\t\t\tмсвЗаказыДляПодбораПартий.Добавить(СтрокаПланирования.ЗаказНаОтгрузку);\n\t\t\t\t\tКонецЕсли;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\tКонецЕсли;\n\n\tЕсли ПодбиратьПартии Тогда\n\n\t\tсткДанныеНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(текНоменклатура, Новый Структура(\"УчетПоСрокамГодности, СрокХранения, ЗапасГодности\", \"МодельУчета.ВестиУчетПоСрокамГодности\", \"СрокХранения\", \"ЗапасГодности\"));\n\n\t\t// данные для подбора одной партии\n\t\tЕсли мсвЗаказыДляПодбораПартий.Количество() Тогда\n\t\t\tЗапрос = Новый Запрос;\n\t\t\tЗапрос.Текст =\n\t\t\t\"ВЫБРАТЬ\n\t\t\t|\tусКонтрольОтгрузкиОбороты.ЗаказНаОтгрузку КАК Заказ,\n\t\t\t|\tусКонтрольОтгрузкиОбороты.ПартияНоменклатуры КАК Партия,\n\t\t\t|\t0 КАК Рейтинг\n\t\t\t|ИЗ\n\t\t\t|\tРегистрНакопления.усКонтрольОтгрузки.Обороты(\n\t\t\t|\t\t\t&МинимальнаяДатаЗаказов\n\t\t\t|\t\t\t,\n\t\t\t|\t\t\t,\n\t\t\t|\t\t\t,\n\t\t\t|\t\t\tЗаказНаОтгрузку В(&мсвДокументы)\n\t\t\t|\t\t\t\tИ Номенклатура = &Номенклатура\n\t\t\t|\t\t\t\tИ ПартияНоменклатуры <> ЗНАЧЕНИЕ(Справочник.усПартииНоменклатуры.ПустаяСсылка)) КАК усКонтрольОтгрузкиОбороты\n\t\t\t|ГДЕ\n\t\t\t|\t(усКонтрольОтгрузкиОбороты.КоличествоСпланированоОборот > 0\n\t\t\t|\t\t\tИЛИ усКонтрольОтгрузкиОбороты.КоличествоОтгруженоОборот > 0)\n\t\t\t|\n\t\t\t|ОБЪЕДИНИТЬ ВСЕ\n\t\t\t|\n\t\t\t|ВЫБРАТЬ\n\t\t\t|\tусОстаткиТоваровОстатки.Контейнер.ДокументПривязки,\n\t\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры,\n\t\t\t|\t1\n\t\t\t|ИЗ\n\t\t\t|\tРегистрНакопления.усОстаткиТоваров.Остатки(\n\t\t\t|\t\t\t,\n\t\t\t|\t\t\tКлючАналитикиУчетаНоменклатуры.Номенклатура = &Номенклатура\n\t\t\t|\t\t\t\tИ Контейнер.ДокументПривязки В(&мсвДокументы)) КАК усОстаткиТоваровОстатки\n\t\t\t|ГДЕ\n\t\t\t|\tусОстаткиТоваровОстатки.КоличествоОстаток > 0\n\t\t\t|\n\t\t\t|УПОРЯДОЧИТЬ ПО\n\t\t\t|\tРейтинг\";\n\t\t\tЗапрос.УстановитьПараметр(\"мсвДокументы\", мсвЗаказыДляПодбораПартий);\n\t\t\tЗапрос.УстановитьПараметр(\"Номенклатура\", текНоменклатура);\n\t\t\tЗапрос.УстановитьПараметр(\"МинимальнаяДатаЗаказов\", усОбщегоНазначенияСервер.ПолучитьМинимальнуюДатуДокументов(мсвЗаказыДляПодбораПартий));\n\t\t\tтбзСпланированныеПартии = Запрос.Выполнить().Выгрузить();\n\t\tКонецЕсли;\n\n\t\t// Остатки не отсортированные\n\t\tЗапрос = Новый Запрос;\n\t\tЗапрос.Текст =\n\t\t\"ВЫБРАТЬ\n\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры.ДатаПартии КАК ДатаПартии,\n\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры.СрокГодности КАК СрокГодности,\n\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры.Код КАК НомерПартии,\n\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t\t|\tСУММА(усОстаткиТоваровОстатки.КоличествоОстаток) КАК КоличествоОстаток\n\t\t|ИЗ\n\t\t|\tРегистрНакопления.усОстаткиТоваров.Остатки(, КлючАналитикиУчетаНоменклатуры.Номенклатура = &Номенклатура) КАК усОстаткиТоваровОстатки\n\t\t|ГДЕ\n\t\t|\tусОстаткиТоваровОстатки.КоличествоОстаток > 0\n\t\t|\tИ усОстаткиТоваровОстатки.Контейнер.ДокументПривязки = НЕОПРЕДЕЛЕНО\n\t\t|\n\t\t|СГРУППИРОВАТЬ ПО\n\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.СтатусНоменклатуры,\n\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры,\n\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры.СрокГодности,\n\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры.Код,\n\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры.ДатаПартии,\n\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.УпаковкаНоменклатуры\";\n\t\tЗапрос.УстановитьПараметр(\"Номенклатура\", текНоменклатура);\n\n\t\tтбзОстатки = Запрос.Выполнить().Выгрузить();\n\n\t\t// Запрос для сортировки остатков под конкретную строку заказа\n\t\tИсходныйТекстЗапроса =\n\t\t\"ВЫБРАТЬ\n\t\t|\tтбОстатки.ПартияНоменклатуры,\n\t\t|\tтбОстатки.ДатаПартии,\n\t\t|\tтбОстатки.СрокГодности,\n\t\t|\tтбОстатки.НомерПартии,\n\t\t|\tтбОстатки.СтатусНоменклатуры,\n\t\t|\tтбОстатки.УпаковкаНоменклатуры,\n\t\t|\tтбОстатки.КоличествоОстаток\n\t\t|ПОМЕСТИТЬ втОстатки\n\t\t|ИЗ\n\t\t|\t&Остатки КАК тбОстатки\n\t\t|;\n\t\t|\n\t\t|////////////////////////////////////////////////////////////////////////////////\n\t\t|ВЫБРАТЬ\n\t\t|\tвтОстатки.ПартияНоменклатуры,\n\t\t|\tвтОстатки.ДатаПартии КАК ДатаПартии,\n\t\t|\tвтОстатки.СрокГодности КАК СрокГодности,\n\t\t|\tвтОстатки.НомерПартии,\n\t\t|\tвтОстатки.СтатусНоменклатуры,\n\t\t|\tвтОстатки.УпаковкаНоменклатуры,\n\t\t|\tвтОстатки.КоличествоОстаток КАК КоличествоОстаток,\n\t\t|\t0 КАК Рейтинг,\n\t\t|\tвтОстатки.КоличествоОстаток КАК КоличествоХватает,\n\t\t|\t0 КАК КоличествоНехватает\n\t\t|ИЗ\n\t\t|\tвтОстатки КАК втОстатки\n\t\t|ГДЕ\n\t\t|\tвтОстатки.КоличествоОстаток >= &текКоличество\n\t\t|\tИ втОстатки.СрокГодности >= &минСрок\n\t\t|\tИ втОстатки.СтатусНоменклатуры = &текСтатус\n\t\t|\tИ (&УпаковкаНоменклатуры = ЗНАЧЕНИЕ(Справочник.усУпаковкиНоменклатуры.ПустаяСсылка)\n\t\t|\t\t\tИЛИ &УпаковкаНоменклатуры = втОстатки.УпаковкаНоменклатуры)\n\t\t|\n\t\t|ОБЪЕДИНИТЬ ВСЕ\n\t\t|\n\t\t|ВЫБРАТЬ\n\t\t|\tвтОстатки.ПартияНоменклатуры,\n\t\t|\tДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),\n\t\t|\tДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),\n\t\t|\tвтОстатки.НомерПартии,\n\t\t|\tвтОстатки.СтатусНоменклатуры,\n\t\t|\tвтОстатки.УпаковкаНоменклатуры,\n\t\t|\tвтОстатки.КоличествоОстаток,\n\t\t|\t1,\n\t\t|\t0,\n\t\t|\tвтОстатки.КоличествоОстаток\n\t\t|ИЗ\n\t\t|\tвтОстатки КАК втОстатки\n\t\t|ГДЕ\n\t\t|\tвтОстатки.КоличествоОстаток < &текКоличество\n\t\t|\tИ втОстатки.КоличествоОстаток > 0\n\t\t|\tИ втОстатки.СрокГодности >= &минСрок\n\t\t|\tИ втОстатки.СтатусНоменклатуры = &текСтатус\n\t\t|\tИ (&УпаковкаНоменклатуры = ЗНАЧЕНИЕ(Справочник.усУпаковкиНоменклатуры.ПустаяСсылка)\n\t\t|\t\t\tИЛИ &УпаковкаНоменклатуры = втОстатки.УпаковкаНоменклатуры)\n\t\t|\n\t\t|УПОРЯДОЧИТЬ ПО\n\t\t|\tРейтинг,\n\t\t|\tСрокГодности,\n\t\t|\tДатаПартии,\n\t\t|\tКоличествоХватает,\n\t\t|\tКоличествоНехватает УБЫВ\";\n\n\t\tДля каждого стрПланирования Из тбзПланирования Цикл\n\n\t\t\tЕсли Не ЗначениеЗаполнено(стрПланирования.ПартияНоменклатуры) И мсвЗаказыДляПодбораПартий.Найти(стрПланирования.ЗаказНаОтгрузку) <> Неопределено Тогда\n\t\t\t\t// надо подбирать одну партию\n\n\t\t\t\t// Проверим ранее спланированные партии\n\t\t\t\tсткОтбор  = Новый Структура(\"Заказ\", стрПланирования.ЗаказНаОтгрузку);\n\t\t\t\tмсвСтрок  = тбзСпланированныеПартии.НайтиСтроки(сткОтбор);\n\t\t\t\tЕсли мсвСтрок.Количество() Тогда\n\t\t\t\t\tстрПланирования.ПартияНоменклатуры = мсвСтрок[0].Партия;\n\t\t\t\t\tПродолжить;\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tЗапросСортировка\t   = Новый Запрос;\n\t\t\t\tЗапросСортировка.Текст = ИсходныйТекстЗапроса;\n\t\t\t\tСтрокаВЗапросе \t\t   = \"И втОстатки.СрокГодности >= &минСрок\";\n\t\t\t\tСтрокаНаЗамену \t\t   = \"\";\n\t\t\t\tЕсли ЗначениеЗаполнено(стрПланирования.СрокГодности) Тогда\n\t\t\t\t\tСтрокаНаЗамену = СтрокаНаЗамену + \"\tИ втОстатки.СрокГодности = &минСрок\" + Символы.ПС ;\n\t\t\t\t\t#Удаление // ++ Ситек Ситников А.В. 18.12.24 Убираем проверку партии по строку годности, будет вводиться на ТСД\n\t\t\t\t\tЗапросСортировка.УстановитьПараметр(\"минСрок\", стрПланирования.СрокГодности);\n\t\t\t\t\t#КонецУдаления // -- Ситек Ситников А.В. 18.12.24 Убираем проверку партии по строку годности, будет вводиться на ТСД\n\t\t\t\t\t#Вставка // ++ Ситек Ситников А.В. 18.12.24 Убираем проверку партии по строку годности, будет вводиться на ТСД\n\t\t\t\t\tОтключитьКонтрольСрокаГодности = Константы.Бюро1440_ОтключаемКонтрольСрокаГодностиПрииПланированииОтбора.Получить();\n\t\t\t\t\tЕсли ОтключитьКонтрольСрокаГодности Тогда\n\t\t\t\t\t\tЗапросСортировка.УстановитьПараметр(\"минСрок\", Дата(1,1,1));\n\t\t\t\t\tИначе\n\t\t\t\t\t\tЗапросСортировка.УстановитьПараметр(\"минСрок\", стрПланирования.СрокГодности);\n\t\t\t\t\tКонецЕсли;\n\t\t\t\t\t#КонецВставки // -- Ситек Ситников А.В. 18.12.24 Убираем проверку партии по строку годности, будет вводиться на ТСД\n\t\t\t\tКонецЕсли;\n\t\t\t\tЕсли ЗначениеЗаполнено(стрПланирования.НомерПартии) Тогда\n\t\t\t\t\tСтрокаНаЗамену = СтрокаНаЗамену + \"\tИ втОстатки.НомерПартии = &текНомерПартии\" + Символы.ПС ;\n\t\t\t\t\tЗапросСортировка.УстановитьПараметр(\"текНомерПартии\", стрПланирования.НомерПартии);\n\t\t\t\tКонецЕсли;\n\n\t\t\t\t// Сортируем остатки\n\t\t\t\tЕсли НЕ СтрДлина(СтрокаНаЗамену) И НЕ сткДанныеНоменклатуры.УчетПоСрокамГодности Тогда\n\t\t\t\t\tСтрокаНаЗамену = \" \";\n\t\t\t\tКонецЕсли;\n\t\t\t\tЕсли СтрДлина(СтрокаНаЗамену) Тогда\n\t\t\t\t\tЗапросСортировка.Текст = СтрЗаменить(ЗапросСортировка.Текст, СтрокаВЗапросе, СтрокаНаЗамену);\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tЗапросСортировка.УстановитьПараметр(\"Остатки\",       тбзОстатки);\n\t\t\t\tЗапросСортировка.УстановитьПараметр(\"текКоличество\", стрПланирования.Количество);\n\t\t\t\tЗапросСортировка.УстановитьПараметр(\"текСтатус\",     стрПланирования.СтатусНоменклатуры);\n\t\t\t\tЗапросСортировка.УстановитьПараметр(\"УпаковкаНоменклатуры\", стрПланирования.УпаковкаНоменклатуры);\n\n\t\t\t\tЕсли сткДанныеНоменклатуры.УчетПоСрокамГодности Тогда\n\t\t\t\t\tстОтбор = Новый Структура(\"ПартияНоменклатуры, НомерПартии, СрокГодности\");\n\n\t\t\t\t\tЗаполнитьЗначенияСвойств(стОтбор, стрПланирования);\n\t\t\t\t\tМинимальныйСрокГодности = усУправлениеОтгрузкой.МинимальныйСрокГодности(стрПланирования.ЗаказНаОтгрузку, текНоменклатура, стрПланирования.СтатусНоменклатуры, стрПланирования.УпаковкаНоменклатуры, стОтбор);\n\t\t\t\t\t#Удаление // ++ Ситек Ситников А.В. 18.12.24 Убираем проверку партии по строку годности, будет вводиться на ТСД\n\t\t\t\t\tЗапросСортировка.УстановитьПараметр(\"минСрок\", МинимальныйСрокГодности);\n\t\t\t\t\t#КонецУдаления // -- Ситек Ситников А.В. 18.12.24 Убираем проверку партии по строку годности, будет вводиться на ТСД\n\t\t\t\t\t#Вставка // ++ Ситников А.В. 18.12.24 Убираем проверку партии по строку годности, будет вводиться на ТСД\n\t\t\t\t\tОтключитьКонтрольСрокаГодности = Константы.Бюро1440_ОтключаемКонтрольСрокаГодностиПрииПланированииОтбора.Получить();\n\t\t\t\t\tЕсли ОтключитьКонтрольСрокаГодности Тогда\n\t\t\t\t\t\tЗапросСортировка.УстановитьПараметр(\"минСрок\", Дата(1,1,1));\n\t\t\t\t\tИначе\n\t\t\t\t\t\tЗапросСортировка.УстановитьПараметр(\"минСрок\", МинимальныйСрокГодности);\n\t\t\t\t\tКонецЕсли;\n\t\t\t\t\t#КонецВставки // -- Ситек Ситников А.В.18.12.24 Убираем проверку партии по строку годности, будет вводиться на ТСД\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tВыборка = ЗапросСортировка.Выполнить().Выбрать();\n\t\t\t\tЕсли Выборка.Следующий() Тогда\n\t\t\t\t\tстрПланирования.ПартияНоменклатуры = Выборка.ПартияНоменклатуры;\n\n\t\t\t\t\tНоваяСтрока = тбзСпланированныеПартии.Добавить();\n\t\t\t\t\tНоваяСтрока.Заказ  = стрПланирования.ЗаказНаОтгрузку;\n\t\t\t\t\tНоваяСтрока.Партия = Выборка.ПартияНоменклатуры;\n\n\t\t\t\t\t// Уменьшим количество в остатках\n\t\t\t\t\tсткОтбор = Новый Структура(\"ПартияНоменклатуры, СтатусНоменклатуры, КоличествоОстаток\");\n\t\t\t\t\tЗаполнитьЗначенияСвойств(сткОтбор, Выборка);\n\t\t\t\t\tЕсли ВестиУчетТовараВУпаковках_2_0 Тогда\n\t\t\t\t\t\tсткОтбор.Вставить(\"УпаковкаНоменклатуры\", Выборка.УпаковкаНоменклатуры);\n\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\tмсвСтрок = тбзОстатки.НайтиСтроки(сткОтбор);\n\t\t\t\t\tмсвСтрок[0].КоличествоОстаток = мсвСтрок[0].КоличествоОстаток - Мин(мсвСтрок[0].КоличествоОстаток, стрПланирования.Количество);\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\t КонецЦикла;\n\tКонецЕсли;\n\n\t// Начало замера производительности\n\tВремяНачала = ОценкаПроизводительности.НачатьЗамерВремени();\n\n\t// Получим стратегию отбора контейнера\n\tтекСтратегия = ОпределитьСтратегиюОтбора(тбзПланирования[0].Номенклатура);\n\n\tЕсли ЗначениеЗаполнено(текСтратегия) Тогда\n\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Стратегия: %1';\n\t\t\t\t|en='Strategy: %1'\"));\n\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, текСтратегия, Строка(текСтратегия));\n\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, 1);\n\t\tКонецЕсли;\n\n\t\tтбзПланирования.Колонки.Добавить(\"ВнутреннийЗаказ\");\n\n\t\tсткПоиска = Новый Структура;\n\t\tсткПоиска.Вставить(\"ГруппаОтбора\");\n\t\tсткПоиска.Вставить(\"ЗаказНаОтгрузку\");\n\t\tсткПоиска.Вставить(\"Номенклатура\");\n\t\tсткПоиска.Вставить(\"СтатусНоменклатуры\");\n\t\tсткПоиска.Вставить(\"ПартияНоменклатуры\");\n\t\tсткПоиска.Вставить(\"НомерПартии\");\n\t\tсткПоиска.Вставить(\"СрокГодности\");\n\n\t\tЕсли ВестиУчетТовараВУпаковках_2_0 Тогда\n\t\t\tсткПоиска.Вставить(\"УпаковкаНоменклатуры\");\n\t\tКонецЕсли;\n\n\t\t// Получим список условий и алгоритмов по стратегии\n\t\tтекЗапросАлгоритмов = Новый Запрос;\n\t\tтекЗапросАлгоритмов.Текст =\n\t\t\"ВЫБРАТЬ\n\t\t|\tусСтратегииОтбораАлгоритмы.Условие КАК Условие,\n\t\t|\tусСтратегииОтбораАлгоритмы.Алгоритм КАК Алгоритм\n\t\t|ИЗ\n\t\t|\tСправочник.усСтратегииОтбора.Алгоритмы КАК усСтратегииОтбораАлгоритмы\n\t\t|ГДЕ\n\t\t|\tусСтратегииОтбораАлгоритмы.Ссылка = &Стратегия\n\t\t|\tИ усСтратегииОтбораАлгоритмы.Алгоритм.Активный\n\t\t|\n\t\t|УПОРЯДОЧИТЬ ПО\n\t\t|\tусСтратегииОтбораАлгоритмы.НомерСтроки\n\t\t|ИТОГИ ПО\n\t\t|\tУсловие\";\n\t\tтекЗапросАлгоритмов.УстановитьПараметр(\"Стратегия\", текСтратегия);\n\n\t\t// Обойдем все условия\n\t\tВыборкаУсловия = текЗапросАлгоритмов.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);\n\t\tПока ВыборкаУсловия.Следующий() Цикл\n\n\t\t\tЕсли тбзПланирования.Итог(\"Количество\") = 0 Тогда\n\t\t\t\tПрервать;\n\t\t\tКонецЕсли;\n\n\t\t\t// Проверим выполнение условия\n\t\t\tРезультатСостав = ПроверитьУсловие(ВыборкаУсловия.Условие, тбзПланирования);\n\t\t\t\n\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Условие: %1. %2';\n\t\t\t\t\t|en='Condition: %1. %2'\"));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, ВыборкаУсловия.Условие, Строка(ВыборкаУсловия.Условие));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, РезультатСостав, НСтр(\"ru='Результат состава';\n\t\t\t\t\t|en='Composition result'\"), Истина);\n\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, 1);\n\t\t\tКонецЕсли;\n\n\t\t\tЕсли РезультатСостав = Неопределено ИЛИ НЕ РезультатСостав.Количество() Тогда\n\t\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Товар не подходит под условие';\n\t\t\t\t\t\t|en='Goods do not match the condition'\"));\n\t\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, -1);\n\t\t\t\tКонецЕсли;\n\t\t\t\tПродолжить;\n\t\t\tКонецЕсли;\n\n\t\t\t// Обойдем все алгоритмы отбора по условию\n\t\t\tВыборкаАлгоритмы = ВыборкаУсловия.Выбрать();\n\t\t\tПока ВыборкаАлгоритмы.Следующий() Цикл\n\n\t\t\t\tЕсли РезультатСостав.Итог(\"Количество\") = 0 Тогда\n\t\t\t\t\tПрервать;\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tАлгоритм = ВыборкаАлгоритмы.Алгоритм;\n\n\t\t\t\tГрупповойОтбор = Алгоритм.ГрупповойОтбор;\n\n\t\t\t\tЕсли ГрупповойОтбор И ЗначениеЗаполнено(РезультатСостав[0].ГруппаОтбора) Тогда\n\n\t\t\t\t\tРезультатСоставПартияНоменклатуры = Справочники.усПартииНоменклатуры.ПустаяСсылка();\n\t\t\t\t\tЕсли ПолучитьФункциональнуюОпцию(\"усИспользуетсяУчетПартийТоваров\") Тогда\n\t\t\t\t\t\tРезультатСоставПартияНоменклатуры = РезультатСостав[0].ПартияНоменклатуры;\n\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\tсткПараметрыАналитикиУчета = усУправлениеСкладом.ПолучитьПараметрыАналитикиУчета(РезультатСостав[0].Номенклатура,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t РезультатСостав[0].СтатусНоменклатуры,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t РезультатСоставПартияНоменклатуры,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t РезультатСостав[0].УпаковкаНоменклатуры,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t РезультатСостав[0].Организация);\n\n\t\t\t\t\tКоличествоСпланировано  = СпланироватьОтбор(Алгоритм, РезультатСостав[0].ГруппаОтбора, сткПараметрыАналитикиУчета, РезультатСостав.Итог(\"Количество\"), Логи,,,, ПриостановитьЗадачи);\n\n\t\t\t\t\tЕсли КоличествоСпланировано > 0 Тогда\n\t\t\t\t\t\tДля Каждого текСтрока Из РезультатСостав Цикл\n\t\t\t\t\t\t\tтекКоличество = Мин(КоличествоСпланировано, текСтрока.Количество);\n\n\t\t\t\t\t\t\tтекСтрока.Количество   = текСтрока.Количество - текКоличество;\n\t\t\t\t\t\t\tКоличествоСпланировано = КоличествоСпланировано - текКоличество;\n\n\t\t\t\t\t\t\tЗаполнитьЗначенияСвойств(сткПоиска, текСтрока);\n\t\t\t\t\t\t\tмсвСтрокОсновнойТаблицы = тбзПланирования.НайтиСтроки(сткПоиска);\n\t\t\t\t\t\t\tЕсли мсвСтрокОсновнойТаблицы.Количество() Тогда\n\t\t\t\t\t\t\t\tмсвСтрокОсновнойТаблицы[0].Количество = мсвСтрокОсновнойТаблицы[0].Количество - текКоличество;\n\t\t\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\t\t\tЕсли КоличествоСпланировано = 0 Тогда\n\t\t\t\t\t\t\t\tПрервать;\n\t\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\t\tКонецЦикла;\n\t\t\t\t\tКонецЕсли;\n\n\t\t\t\tИначе\n\t\t\t\t\tДля Каждого текСтрока Из РезультатСостав Цикл\n\n\t\t\t\t\t\tЕсли ЗначениеЗаполнено(текСтрока.НомерКонтейнера) Тогда\n\t\t\t\t\t\t\tЗапросПлан = Новый Запрос;\n\t\t\t\t\t\t\tЗапросПлан.Текст =\n\t\t\t\t\t\t\t\"ВЫБРАТЬ\n\t\t\t\t\t\t\t|\tусКонтрольОтгрузкиОбороты.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,\n\t\t\t\t\t\t\t|\tусКонтрольОтгрузкиОбороты.Номенклатура КАК Номенклатура,\n\t\t\t\t\t\t\t|\tусКонтрольОтгрузкиОбороты.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t\t\t\t\t\t\t|\tусКонтрольОтгрузкиОбороты.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t\t\t\t\t\t\t|\tусКонтрольОтгрузкиОбороты.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t\t\t\t\t\t\t|\tусКонтрольОтгрузкиОбороты.НомерПартии КАК НомерПартии,\n\t\t\t\t\t\t\t|\tусКонтрольОтгрузкиОбороты.СрокГодности КАК СрокГодности,\n\t\t\t\t\t\t\t|\tусКонтрольОтгрузкиОбороты.НомерКонтейнера КАК НомерКонтейнера,\n\t\t\t\t\t\t\t|\tусКонтрольОтгрузкиОбороты.КоличествоЗапланированоОборот - усКонтрольОтгрузкиОбороты.КоличествоОтгруженоОборот КАК Количество\n\t\t\t\t\t\t\t|ПОМЕСТИТЬ втПлан\n\t\t\t\t\t\t\t|ИЗ\n\t\t\t\t\t\t\t|\tРегистрНакопления.усКонтрольОтгрузки.Обороты(\n\t\t\t\t\t\t\t|\t\t\t&МинимальнаяДатаЗаказа\n\t\t\t\t\t\t\t|\t\t\t,\n\t\t\t\t\t\t\t|\t\t\t,\n\t\t\t\t\t\t\t|\t\t\t,\n\t\t\t\t\t\t\t|\t\t\tЗаказНаОтгрузку = &ЗаказНаОтгрузку\n\t\t\t\t\t\t\t|\t\t\t\tИ Номенклатура = &Номенклатура\n\t\t\t\t\t\t\t|\t\t\t\tИ СтатусНоменклатуры В (&СтатусНоменклатуры, ЗНАЧЕНИЕ(Справочник.усСтатусыНоменклатуры.ПустаяСсылка))\n\t\t\t\t\t\t\t|\t\t\t\tИ ПартияНоменклатуры В (&ПартияНоменклатуры, ЗНАЧЕНИЕ(Справочник.усПартииНоменклатуры.ПустаяСсылка))\n\t\t\t\t\t\t\t|\t\t\t\tИ УпаковкаНоменклатуры В (&УпаковкаНоменклатуры, ЗНАЧЕНИЕ(Справочник.усУпаковкиНоменклатуры.ПустаяСсылка))\n\t\t\t\t\t\t\t|\t\t\t\tИ НомерПартии В (&НомерПартии, \"\"\"\")\n\t\t\t\t\t\t\t|\t\t\t\tИ СрокГодности В (&СрокГодности, ДАТАВРЕМЯ(1,1,1,0,0,0))) КАК усКонтрольОтгрузкиОбороты\n\t\t\t\t\t\t\t|ГДЕ\n\t\t\t\t\t\t\t|\tусКонтрольОтгрузкиОбороты.КоличествоЗапланированоОборот > 0\n\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t|ИНДЕКСИРОВАТЬ ПО\n\t\t\t\t\t\t\t|\tЗаказНаОтгрузку,\n\t\t\t\t\t\t\t|\tНоменклатура,\n\t\t\t\t\t\t\t|\tСтатусНоменклатуры,\n\t\t\t\t\t\t\t|\tПартияНоменклатуры,\n\t\t\t\t\t\t\t|\tУпаковкаНоменклатуры,\n\t\t\t\t\t\t\t|\tНомерПартии,\n\t\t\t\t\t\t\t|\tСрокГодности\n\t\t\t\t\t\t\t|;\n\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t|////////////////////////////////////////////////////////////////////////////////\n\t\t\t\t\t\t\t|ВЫБРАТЬ\n\t\t\t\t\t\t\t|\tвтПлан.НомерКонтейнера КАК НомерКонтейнера,\n\t\t\t\t\t\t\t|\tМАКСИМУМ(ВЫБОР\n\t\t\t\t\t\t\t|\t\t\tКОГДА усКонтрольОтгрузки.ЗаказНаОтгрузку ЕСТЬ NULL\n\t\t\t\t\t\t\t|\t\t\t\tТОГДА 0\n\t\t\t\t\t\t\t|\t\t\tИНАЧЕ 1\n\t\t\t\t\t\t\t|\t\tКОНЕЦ) КАК Спланировано,\n\t\t\t\t\t\t\t|\tМАКСИМУМ(втПлан.Количество) КАК Количество\n\t\t\t\t\t\t\t|ИЗ\n\t\t\t\t\t\t\t|\tвтПлан КАК втПлан\n\t\t\t\t\t\t\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.усКонтрольОтгрузки КАК усКонтрольОтгрузки\n\t\t\t\t\t\t\t|\t\tПО втПлан.ЗаказНаОтгрузку = усКонтрольОтгрузки.ЗаказНаОтгрузку\n\t\t\t\t\t\t\t|\t\t\tИ втПлан.Номенклатура = усКонтрольОтгрузки.Номенклатура\n\t\t\t\t\t\t\t|\t\t\tИ (втПлан.СтатусНоменклатуры В (усКонтрольОтгрузки.СтатусНоменклатуры, ЗНАЧЕНИЕ(Справочник.усСтатусыНоменклатуры.ПустаяСсылка)))\n\t\t\t\t\t\t\t|\t\t\tИ (втПлан.ПартияНоменклатуры В (усКонтрольОтгрузки.ПартияНоменклатуры, ЗНАЧЕНИЕ(Справочник.усПартииНоменклатуры.ПустаяСсылка)))\n\t\t\t\t\t\t\t|\t\t\tИ (втПлан.УпаковкаНоменклатуры В (усКонтрольОтгрузки.УпаковкаНоменклатуры, ЗНАЧЕНИЕ(Справочник.усУпаковкиНоменклатуры.ПустаяСсылка)))\n\t\t\t\t\t\t\t|\t\t\tИ (втПлан.НомерПартии В (усКонтрольОтгрузки.НомерПартии, \"\"\"\"))\n\t\t\t\t\t\t\t|\t\t\tИ (втПлан.СрокГодности В (усКонтрольОтгрузки.СрокГодности, ДАТАВРЕМЯ(1,1,1,0,0,0)))\n\t\t\t\t\t\t\t|\t\t\tИ (втПлан.НомерКонтейнера В (усКонтрольОтгрузки.НомерКонтейнера, \"\"\"\"))\n\t\t\t\t\t\t\t|\t\t\tИ (усКонтрольОтгрузки.КоличествоСпланировано <> 0)\n\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t|СГРУППИРОВАТЬ ПО\n\t\t\t\t\t\t\t|\tвтПлан.НомерКонтейнера\n\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t|УПОРЯДОЧИТЬ ПО\n\t\t\t\t\t\t\t|\tСпланировано,\n\t\t\t\t\t\t\t|\tКоличество УБЫВ\";\n\t\t\t\t\t\t\tЗапросПлан.УстановитьПараметр(\"ЗаказНаОтгрузку\",\tтекСтрока.ЗаказНаОтгрузку);\n\t\t\t\t\t\t\tЗапросПлан.УстановитьПараметр(\"Номенклатура\",\t\tтекСтрока.Номенклатура);\n\t\t\t\t\t\t\tЗапросПлан.УстановитьПараметр(\"СтатусНоменклатуры\",\tтекСтрока.СтатусНоменклатуры);\n\t\t\t\t\t\t\tЗапросПлан.УстановитьПараметр(\"ПартияНоменклатуры\",\tтекСтрока.ПартияНоменклатуры);\n\t\t\t\t\t\t\tЗапросПлан.УстановитьПараметр(\"УпаковкаНоменклатуры\", текСтрока.УпаковкаНоменклатуры);\n\t\t\t\t\t\t\tЗапросПлан.УстановитьПараметр(\"НомерПартии\",\t\tтекСтрока.НомерПартии);\n\t\t\t\t\t\t\tЗапросПлан.УстановитьПараметр(\"СрокГодности\",\t\tтекСтрока.СрокГодности);\n\t\t\t\t\t\t\tЗапросПлан.УстановитьПараметр(\"МинимальнаяДатаЗаказа\", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(текСтрока.ЗаказНаОтгрузку, \"Дата\"));\n\n\t\t\t\t\t\t\tКоличествоСпланировано = 0;\n\t\t\t\t\t\t\tКоличествоПлан  = текСтрока.Количество;\n\n\t\t\t\t\t\t\tВыборкаПлан = ЗапросПлан.Выполнить().Выбрать();\n\n\t\t\t\t\t\t\tПока ВыборкаПлан.Следующий() Цикл\n\n\t\t\t\t\t\t\t\tтекКоличество = Мин(ВыборкаПлан.Количество,КоличествоПлан);\n\n\t\t\t\t\t\t\t\tтекСтрокаПартияНоменклатуры = Справочники.усПартииНоменклатуры.ПустаяСсылка();\n\t\t\t\t\t\t\t\tЕсли ПолучитьФункциональнуюОпцию(\"усИспользуетсяУчетПартийТоваров\") Тогда\n\t\t\t\t\t\t\t\t\tтекСтрокаПартияНоменклатуры = текСтрока.ПартияНоменклатуры;\n\t\t\t\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\t\t\t\tтекСтрокаСрокГодности = '00010101';\n\t\t\t\t\t\t\t\tЕсли ПолучитьФункциональнуюОпцию(\"усИспользуетсяУчетСрокаГодностиТовара\") Тогда\n\t\t\t\t\t\t\t\t\tтекСтрокаСрокГодности = текСтрока.СрокГодности;\n\t\t\t\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\t\t\t\tсткПараметрыАналитикиУчета = усУправлениеСкладом.ПолучитьПараметрыАналитикиУчета(текСтрока.Номенклатура, текСтрока.СтатусНоменклатуры, текСтрокаПартияНоменклатуры, текСтрока.УпаковкаНоменклатуры, текСтрока.ЗаказНаОтгрузку.Организация);\n\t\t\t\t\t\t\t\tтекКоличествоСпланировано  = СпланироватьОтбор(Алгоритм, текСтрока.ЗаказНаОтгрузку, сткПараметрыАналитикиУчета, текКоличество, Логи, ВыборкаПлан.НомерКонтейнера, текСтрока.НомерПартии, текСтрокаСрокГодности, ПриостановитьЗадачи);\n\n\t\t\t\t\t\t\t\tКоличествоПлан = КоличествоПлан - текКоличествоСпланировано;\n\t\t\t\t\t\t\t\tКоличествоСпланировано = КоличествоСпланировано + текКоличествоСпланировано;\n\n\t\t\t\t\t\t\t\tЕсли КоличествоПлан=0 Тогда\n\t\t\t\t\t\t\t\t\tПрервать;\n\t\t\t\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\t\t\tКонецЦикла;\n\t\t\t\t\t\tИначе\n\t\t\t\t\t\t\tтекСтрокаПартияНоменклатуры = Справочники.усПартииНоменклатуры.ПустаяСсылка();\n\t\t\t\t\t\t\tЕсли ПолучитьФункциональнуюОпцию(\"усИспользуетсяУчетПартийТоваров\") Тогда\n\t\t\t\t\t\t\t\tтекСтрокаПартияНоменклатуры = текСтрока.ПартияНоменклатуры;\n\t\t\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\t\t\tтекСтрокаСрокГодности = '00010101';\n\t\t\t\t\t\t\tЕсли ПолучитьФункциональнуюОпцию(\"усИспользуетсяУчетСрокаГодностиТовара\") Тогда\n\t\t\t\t\t\t\t\tтекСтрокаСрокГодности = текСтрока.СрокГодности;\n\t\t\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\t\t\tсткПараметрыАналитикиУчета = усУправлениеСкладом.ПолучитьПараметрыАналитикиУчета(текСтрока.Номенклатура, текСтрока.СтатусНоменклатуры, текСтрокаПартияНоменклатуры, текСтрока.УпаковкаНоменклатуры, текСтрока.Организация);\n\t\t\t\t\t\t\tКоличествоСпланировано = СпланироватьОтбор(Алгоритм, текСтрока.ЗаказНаОтгрузку, сткПараметрыАналитикиУчета, текСтрока.Количество, Логи,, текСтрока.НомерПартии, текСтрокаСрокГодности, ПриостановитьЗадачи);\n\t\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\t\tЕсли КоличествоСпланировано > 0 Тогда\n\t\t\t\t\t\t\tтекСтрока.Количество = текСтрока.Количество - КоличествоСпланировано;\n\t\t\t\t\t\t\tЗаполнитьЗначенияСвойств(сткПоиска, текСтрока);\n\t\t\t\t\t\t\tмсвСтрокОсновнойТаблицы = тбзПланирования.НайтиСтроки(сткПоиска);\n\t\t\t\t\t\t\tЕсли мсвСтрокОсновнойТаблицы.Количество() Тогда\n\t\t\t\t\t\t\t\tмсвСтрокОсновнойТаблицы[0].Количество = мсвСтрокОсновнойТаблицы[0].Количество - КоличествоСпланировано;\n\t\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\tКонецЦикла;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЦикла;\n\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\tусЛогированиеПроцессов.ИзменитьУровень(Логи, -1);\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tусЛогированиеПроцессов.ИзменитьУровень(Логи, -1);\n\t\tКонецЕсли;\n\tИначе\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Стратегия планирования не указана';\n\t\t\t\t|en='Scheduling strategy is not specified'\"));\n\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\tКонецЕсли;\n\tКонецЕсли;\n\t\n\tЕсли Логи <> Неопределено Тогда\n\t\t// Находимся на строчке номенклатуры.\n\t\tФактическоеКоличествоПланирования = тбзПланирования.Итог(\"Количество\");\n\t\tРезультатПланирования = 2;\n\t\tЕсли ФактическоеКоличествоПланирования = 0 Тогда\n\t\t\tРезультатПланирования = 1;\n\t\tИначеЕсли ФактическоеКоличествоПланирования = ПлановоеКоличествоПланирования Тогда\n\t\t\tРезультатПланирования = 3;\n\t\tКонецЕсли;\n\t\tусЛогированиеПроцессов.ДобавитьНастройкуРезультата(Логи, РезультатПланирования);\n\t\tусЛогированиеПроцессов.ДобавитьНастройкуСвернутьУзел(Логи, (РезультатПланирования = 1));\n\t\tусЛогированиеПроцессов.ИзменитьУровень(Логи, -1);\n\tКонецЕсли;\n\n\t// Завершение замера производительности\n\tОценкаПроизводительности.ЗакончитьЗамерВремени(Справочники.КлючевыеОперации.ПланированиеОтбора,ВремяНачала, тбзПланирования.Количество());\n\n\tВозврат тбзПланирования.Итог(\"Количество\") = 0;\n\nКонецФункции\n\n&ИзменениеИКонтроль(\"СпланироватьОтборЗаказов\")\nПроцедура Бюро1440_СпланироватьОтборЗаказов(мсвЗаказов, Логи, ПриостановитьЗадачи)\n\n\tЕсли мсвЗаказов = Неопределено Тогда\n\t\tЗапрос = Новый Запрос;\n\t\tЗапрос.Текст =\n\t\t\"ВЫБРАТЬ ПЕРВЫЕ 10000\n\t\t|\tусЗаказНаОтгрузку.Ссылка КАК ЗаказНаОтгрузку,\n\t\t|\tусКонтрольноеВремяПоЗаказамНаОтгрузку.ВремяОкончанияОтбора КАК ВремяОкончанияОтбора\n\t\t|ИЗ\n\t\t|\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.усПланированиеОтбораВыполняется КАК усПланированиеОтбораВыполняется\n\t\t|\t\tПО усЗаказНаОтгрузку.Ссылка = усПланированиеОтбораВыполняется.ЗаказНаОтгрузку\n\t\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.усСтатусыЗаказовНаОтгрузку КАК усСтатусыЗаказовНаОтгрузку\n\t\t|\t\tПО усЗаказНаОтгрузку.Ссылка = усСтатусыЗаказовНаОтгрузку.ЗаказНаОтгрузку\n\t\t|\t\t\tИ (усСтатусыЗаказовНаОтгрузку.Статус = ЗНАЧЕНИЕ(Перечисление.усСтатусыЗаказовНаОтгрузку.КПланированию)\n\t\t|\t\t\t\t\tИ усСтатусыЗаказовНаОтгрузку.ДатаНачалаПланирования > ДАТАВРЕМЯ(1, 1, 1)\n\t\t|\t\t\t\tИЛИ усСтатусыЗаказовНаОтгрузку.Статус = ЗНАЧЕНИЕ(Перечисление.усСтатусыЗаказовНаОтгрузку.СпланированЧастично))\n\t\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.усКонтрольноеВремяПоЗаказамНаОтгрузку КАК усКонтрольноеВремяПоЗаказамНаОтгрузку\n\t\t|\t\tПО усЗаказНаОтгрузку.Ссылка = усКонтрольноеВремяПоЗаказамНаОтгрузку.ЗаказНаОтгрузку\n\t\t|ГДЕ\n\t\t|\tусПланированиеОтбораВыполняется.ЗаказНаОтгрузку ЕСТЬ NULL\n\t\t|\n\t\t|УПОРЯДОЧИТЬ ПО\n\t\t|\tВремяОкончанияОтбора\";\n\t\tмсвЗаказов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(\"ЗаказНаОтгрузку\");\n\tКонецЕсли;\n\n\tЕсли Логи <> Неопределено Тогда\n\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Планы по заказам: %1';\n\t\t|en='Plans for orders: %1'\"), Истина);\n\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, мсвЗаказов, НСтр(\"ru='Заказы на отгрузку';\n\t\t|en='Shipping orders'\"), Истина);\n\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, 1);\n\tКонецЕсли;\n\n\tЕсли мсвЗаказов.Количество() = 0 Тогда\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Нет заказов для планирования';\n\t\t\t|en='No orders to schedule'\"));\n\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\tКонецЕсли;\n\t\tВозврат;\n\tКонецЕсли;\n\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст =\n\t\"ВЫБРАТЬ\n\t|\tусЗаказНаОтгрузку.Ссылка КАК ЗаказНаОтгрузку\n\t|ИЗ\n\t|\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t|ГДЕ\n\t|\tусЗаказНаОтгрузку.Ссылка В(&Ссылка)\n\t|\n\t|ОБЪЕДИНИТЬ ВСЕ\n\t|\n\t|ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t|\tусЗаказНаОтгрузку.ГруппаОтбора\n\t|ИЗ\n\t|\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t|ГДЕ\n\t|\tусЗаказНаОтгрузку.Ссылка В(&Ссылка)\n\t|\tИ усЗаказНаОтгрузку.ГруппаОтбора <> ЗНАЧЕНИЕ(Документ.усГруппаОтбора.ПустаяСсылка)\";\n\tЗапрос.УстановитьПараметр(\"Ссылка\", мсвЗаказов);\n\tРезультат = Запрос.Выполнить();\n\n\tНачалоПланирования = ТекущаяУниверсальнаяДатаВМиллисекундах();\n\n\tНачатьТранзакцию();\n\tПопытка\n\t\tБлокировкаДанных = Новый БлокировкаДанных;\n\n\t\tЭлементБлокировки = БлокировкаДанных.Добавить(\"РегистрСведений.усПланированиеОтбораВыполняется\");\n\t\tЭлементБлокировки.Режим          = РежимБлокировкиДанных.Исключительный;\n\t\tЭлементБлокировки.ИсточникДанных = Результат;\n\t\tЭлементБлокировки.ИспользоватьИзИсточникаДанных(\"ЗаказНаОтгрузку\", \"ЗаказНаОтгрузку\");\n\n\t\tБлокировкаДанных.Заблокировать();\n\n\t\tЗапрос = Новый Запрос;\n\t\tЗапрос.Текст =\n\t\t\"ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t\t|\tусЗаказНаОтгрузку.Ссылка\n\t\t|ПОМЕСТИТЬ втПланируемыеЗаказы\n\t\t|ИЗ\n\t\t|\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.усПланированиеОтбораВыполняется КАК усПланированиеОтбораВыполняется\n\t\t|\t\tПО усЗаказНаОтгрузку.Ссылка = усПланированиеОтбораВыполняется.ЗаказНаОтгрузку\n\t\t|ГДЕ\n\t\t|\tусЗаказНаОтгрузку.Ссылка В(&Ссылка)\n\t\t|;\n\t\t|\n\t\t|////////////////////////////////////////////////////////////////////////////////\n\t\t|ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t\t|\tусЗаказНаОтгрузку.Ссылка,\n\t\t|\tусЗаказНаОтгрузку.ГруппаОтбора\n\t\t|ПОМЕСТИТЬ втПланируемыеЗаказыВГруппе\n\t\t|ИЗ\n\t\t|\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.усПланированиеОтбораВыполняется КАК усПланированиеОтбораВыполняется\n\t\t|\t\tПО усЗаказНаОтгрузку.Ссылка = усПланированиеОтбораВыполняется.ЗаказНаОтгрузку\n\t\t|ГДЕ\n\t\t|\tусЗаказНаОтгрузку.Ссылка В(&Ссылка)\n\t\t|\tИ усЗаказНаОтгрузку.ГруппаОтбора <> ЗНАЧЕНИЕ(Документ.усГруппаОтбора.ПустаяСсылка)\n\t\t|;\n\t\t|\n\t\t|////////////////////////////////////////////////////////////////////////////////\n\t\t|ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t\t|\tусЗаказНаОтгрузку.Ссылка,\n\t\t|\tусЗаказНаОтгрузку.ГруппаОтбора\n\t\t|ПОМЕСТИТЬ втПланируемыеГруппыОтбора\n\t\t|ИЗ\n\t\t|\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.усПланированиеОтбораВыполняется КАК усПланированиеОтбораВыполняется\n\t\t|\t\tПО усЗаказНаОтгрузку.ГруппаОтбора = усПланированиеОтбораВыполняется.ЗаказНаОтгрузку\n\t\t|ГДЕ\n\t\t|\tусЗаказНаОтгрузку.Ссылка В(&Ссылка)\n\t\t|;\n\t\t|\n\t\t|////////////////////////////////////////////////////////////////////////////////\n\t\t|ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t\t|\tусЗаказНаОтгрузку.Ссылка,\n\t\t|\tусЗаказНаОтгрузку.ГруппаОтбора,\n\t\t|\tвтПланируемыеЗаказы.Ссылка КАК ЗаказНаОтгрузкуЗаблокирован,\n\t\t|\tвтПланируемыеГруппыОтбора.ГруппаОтбора КАК ГруппаОтбораЗаблокирована,\n\t\t|\tвтПланируемыеЗаказыВГруппе.ГруппаОтбора КАК ЗаказВГруппеОтбораЗаблокирован\n\t\t|ИЗ\n\t\t|\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ втПланируемыеЗаказы КАК втПланируемыеЗаказы\n\t\t|\t\tПО усЗаказНаОтгрузку.Ссылка = втПланируемыеЗаказы.Ссылка\n\t\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ втПланируемыеГруппыОтбора КАК втПланируемыеГруппыОтбора\n\t\t|\t\tПО усЗаказНаОтгрузку.Ссылка = втПланируемыеГруппыОтбора.Ссылка\n\t\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ втПланируемыеЗаказыВГруппе КАК втПланируемыеЗаказыВГруппе\n\t\t|\t\tПО усЗаказНаОтгрузку.ГруппаОтбора = втПланируемыеЗаказыВГруппе.ГруппаОтбора\n\t\t|ГДЕ\n\t\t|\tусЗаказНаОтгрузку.Ссылка В(&Ссылка)\";\n\t\tЗапрос.УстановитьПараметр(\"Ссылка\", мсвЗаказов);\n\n\t\tВыборка = Запрос.Выполнить().Выбрать();\n\t\tмсвДляРегистрации = Новый Массив;\n\n\t\tПока Выборка.Следующий() Цикл\n\t\t\tЕсли ЗначениеЗаполнено(Выборка.ЗаказНаОтгрузкуЗаблокирован) Тогда\n\t\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='По документу %1 уже ведется планирование';\n\t\t\t\t\t|en='The %1 document scheduling is already in progress.'\"));\n\t\t\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, \n\t\t\t\t\tВыборка.ЗаказНаОтгрузкуЗаблокирован,\n\t\t\t\t\tСтрока(Выборка.ЗаказНаОтгрузкуЗаблокирован));\n\t\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\t\t\tКонецЕсли;\n\t\t\t\tОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(мсвЗаказов, Выборка.Ссылка);\n\n\t\t\tИначеЕсли ЗначениеЗаполнено(Выборка.ГруппаОтбораЗаблокирована) Тогда\n\t\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='По документу %1 уже ведется планирование';\n\t\t\t\t\t|en='The %1 document scheduling is already in progress.'\"));\n\t\t\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, \n\t\t\t\t\tВыборка.ГруппаОтбораЗаблокирована,\n\t\t\t\t\tСтрока(Выборка.ГруппаОтбораЗаблокирована));\n\t\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\t\t\tКонецЕсли;\n\t\t\t\tОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(мсвЗаказов, Выборка.Ссылка);\n\n\t\t\tИначеЕсли ЗначениеЗаполнено(Выборка.ЗаказВГруппеОтбораЗаблокирован) Тогда\n\t\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='По документу %1 уже ведется планирование';\n\t\t\t\t\t|en='The %1 document scheduling is already in progress.'\"));\n\t\t\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, \n\t\t\t\t\tВыборка.ЗаказВГруппеОтбораЗаблокирован,\n\t\t\t\t\tСтрока(Выборка.ЗаказВГруппеОтбораЗаблокирован));\n\t\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\t\t\tКонецЕсли;\n\t\t\t\tОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(мсвЗаказов, Выборка.Ссылка);\n\t\t\tИначе\n\t\t\t\tЕсли мсвДляРегистрации.Найти(Выборка.Ссылка) = Неопределено Тогда\n\t\t\t\t\tмсвДляРегистрации.Добавить(Выборка.Ссылка);\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tЕсли ЗначениеЗаполнено(Выборка.ГруппаОтбора) И мсвДляРегистрации.Найти(Выборка.ГруппаОтбора) = Неопределено Тогда\n\t\t\t\t\tмсвДляРегистрации.Добавить(Выборка.ГруппаОтбора);\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\n\t\tЕсли Не мсвДляРегистрации.Количество() Тогда\n\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Нет заказов для планирования';\n\t\t\t\t|en='No orders to schedule'\"));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\t\tКонецЕсли;\n\n\t\t\tОтменитьТранзакцию();\n\n\t\t\tВозврат;\n\t\tКонецЕсли;\n\n\t\tКоличествоПотоков = усСервисныеФункцииВызовСервераПовтИсп.ПолучитьЗначениеКонстанты(\"усКоличествоПотоковПланированияОтбора\");\n\t\tРазмерПорции      = усСервисныеФункцииВызовСервераПовтИсп.ПолучитьЗначениеКонстанты(\"усУвеличиватьКоличествоПотоковПланированияОтбора\");\n\n\t\tтекДата     = ТекущаяДатаСеанса();\n\t\tНомерСеанса = НомерСеансаИнформационнойБазы();\n\n\t\tЕсли Логи <> Неопределено ИЛИ КоличествоПотоков <= 1 Тогда\n\n\t\t\tДля Каждого текДокумент Из мсвДляРегистрации Цикл\n\t\t\t\tНаборЗаписей = РегистрыСведений.усПланированиеОтбораВыполняется.СоздатьНаборЗаписей();\n\t\t\t\tНаборЗаписей.Заполнить(Неопределено);\t\n\t\t\t\tНаборЗаписей.Отбор.ЗаказНаОтгрузку.Установить(текДокумент);\n\n\t\t\t\tЗапись = НаборЗаписей.Добавить();\n\t\t\t\tЗапись.ЗаказНаОтгрузку = текДокумент;\n\t\t\t\tЗапись.НомерСеанса     = НомерСеанса;\n\t\t\t\tЗапись.ДатаЗаписи      = текДата;\n\n\t\t\t\tНаборЗаписей.Записать();\n\n\t\t\t\tЕсли ТипЗнч(текДокумент) = Тип(\"ДокументСсылка.усЗаказНаОтгрузку\") Тогда\n\t\t\t\t\tусРаботаСоСтатусамиВызовСервера.УстановитьДатуНачалаПланированияЗаказаНаОтгрузку(текДокумент);\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЦикла;\n\t\tИначе\n\t\t\tмсвИдентификаторов = Новый Массив;\n\t\t\tмсвИдентификаторовФЗ = Новый Массив;\n\t\t\tДля Сч = 1 По КоличествоПотоков Цикл\n\t\t\t\tмсвИдентификаторов.Добавить(Новый УникальныйИдентификатор);\n\t\t\t\tмсвИдентификаторовФЗ.Добавить(Неопределено);\n\t\t\tКонецЦикла;\n\n\t\t\tДля Каждого текДокумент Из мсвДляРегистрации Цикл\n\t\t\t\tНаборЗаписей = РегистрыСведений.усПланированиеОтбораВыполняется.СоздатьНаборЗаписей();\n\t\t\t\tНаборЗаписей.Заполнить(Неопределено);\t\n\t\t\t\tНаборЗаписей.Отбор.ЗаказНаОтгрузку.Установить(текДокумент);\n\n\t\t\t\tДля Каждого текИдентификатор Из мсвИдентификаторов Цикл\n\t\t\t\t\tЗапись = НаборЗаписей.Добавить();\n\t\t\t\t\tЗапись.ЗаказНаОтгрузку       = текДокумент;\n\t\t\t\t\tЗапись.ИдентификаторЗадания = текИдентификатор;\n\t\t\t\t\tЗапись.ДатаЗаписи            = текДата;\n\t\t\t\t\tЗапись.НомерСеанса           = НомерСеанса;\n\t\t\t\tКонецЦикла;\n\n\t\t\t\tНаборЗаписей.Записать();\n\n\t\t\t\tЕсли ТипЗнч(текДокумент) = Тип(\"ДокументСсылка.усЗаказНаОтгрузку\") Тогда\n\t\t\t\t\tусРаботаСоСтатусамиВызовСервера.УстановитьДатуНачалаПланированияЗаказаНаОтгрузку(текДокумент);\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЦикла;\n\t\tКонецЕсли;\n\n\t\tЗафиксироватьТранзакцию();\n\tИсключение\n\t\tОтменитьТранзакцию();\n\t\tИнформацияОбОшибке = ИнформацияОбОшибке();\n\t\tОшибкаПодробноеПредставление = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);\n\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tОбщегоНазначения.СообщитьПользователю(ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке));\n\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Планирование отбора по заказам. Произошла критическая ошибка: %1';\n\t\t\t|en='Order picking planning. Critical error occurred: %1'\"),,, Истина);\n\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, \n\t\t\tОшибкаПодробноеПредставление,\n\t\t\tОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке));\n\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\tКонецЕсли;\n\n\t\tЗаписьЖурналаРегистрации(НСтр(\"ru='Планирование отбора по заказам';\n\t\t|en='Plan picking by orders'\", ОбщегоНазначения.КодОсновногоЯзыка()),\n\t\tУровеньЖурналаРегистрации.Ошибка,,, ОшибкаПодробноеПредставление);\n\t\tВозврат;\n\tКонецПопытки;\n\n\tЕсли Логи <> Неопределено Тогда\n\t\tусЛогированиеПроцессов.ИзменитьУровень(Логи, -1);\n\n\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Итоги по заказам: %1';\n\t\t|en='Totals by orders: %1 '\"), Истина);\n\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, мсвЗаказов, НСтр(\"ru='Заказы на отгрузку';\n\t\t|en='Shipping orders'\"), Истина);\n\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\tКонецЕсли;\n\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст =\n\t\"ВЫБРАТЬ\n\t|\tусЗаказНаОтгрузку.Ссылка КАК ЗаказНаОтгрузку,\n\t|\tВЫБОР\n\t|\t\tКОГДА усЗаказНаОтгрузку.ГруппаОтбора = ЗНАЧЕНИЕ(Документ.усГруппаОтбора.ПустаяСсылка)\n\t|\t\t\tТОГДА NULL\n\t|\t\tИНАЧЕ усЗаказНаОтгрузку.ГруппаОтбора\n\t|\tКОНЕЦ КАК ГруппаОтбора\n\t|ПОМЕСТИТЬ втЗаказыИсходные\n\t|ИЗ\n\t|\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t|ГДЕ\n\t|\tусЗаказНаОтгрузку.Ссылка В(&ЗаказНаОтгрузку)\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t|\tвтЗаказыИсходные.ГруппаОтбора КАК ГруппаОтбора\n\t|ПОМЕСТИТЬ втГруппыОтбора\n\t|ИЗ\n\t|\tвтЗаказыИсходные КАК втЗаказыИсходные\n\t|ГДЕ\n\t|\tНЕ втЗаказыИсходные.ГруппаОтбора ЕСТЬ NULL\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|\tГруппаОтбора\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tвтЗаказыИсходные.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку\n\t|ПОМЕСТИТЬ втЗаказы\n\t|ИЗ\n\t|\tвтЗаказыИсходные КАК втЗаказыИсходные\n\t|\n\t|ОБЪЕДИНИТЬ\n\t|\n\t|ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t|\tусЗаказНаОтгрузку.Ссылка\n\t|ИЗ\n\t|\tвтГруппыОтбора КАК втГруппыОтбора\n\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t|\t\tПО втГруппыОтбора.ГруппаОтбора = усЗаказНаОтгрузку.ГруппаОтбора\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|\tЗаказНаОтгрузку\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусКонтейнеры.Ссылка КАК Контейнер\n\t|ПОМЕСТИТЬ втКонтейнеры\n\t|ИЗ\n\t|\tСправочник.усКонтейнеры КАК усКонтейнеры\n\t|ГДЕ\n\t|\tВЫРАЗИТЬ(усКонтейнеры.ДокументПривязки КАК Документ.усЗаказНаОтгрузку) В\n\t|\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\tвтЗаказы.ЗаказНаОтгрузку\n\t|\t\t\tИЗ\n\t|\t\t\t\tвтЗаказы)\n\t|\n\t|ОБЪЕДИНИТЬ ВСЕ\n\t|\n\t|ВЫБРАТЬ\n\t|\tусКонтейнеры.Ссылка\n\t|ИЗ\n\t|\tСправочник.усКонтейнеры КАК усКонтейнеры\n\t|ГДЕ\n\t|\tВЫРАЗИТЬ(усКонтейнеры.ДокументПривязки КАК Документ.усГруппаОтбора) В\n\t|\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\tвтГруппыОтбора.ГруппаОтбора\n\t|\t\t\tИЗ\n\t|\t\t\t\tвтГруппыОтбора)\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусКонтрольОтгрузкиОбороты.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,\n\t|\tусКонтрольОтгрузкиОбороты.Номенклатура КАК Номенклатура,\n\t|\tусКонтрольОтгрузкиОбороты.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.СрокГодности КАК СрокГодности,\n\t|\tусКонтрольОтгрузкиОбороты.НомерПартии КАК НомерПартии,\n\t#Удаление\n\t|\tусКонтрольОтгрузкиОбороты.КоличествоСпланированоОборот + усКонтрольОтгрузкиОбороты.КоличествоОтгруженоОборот КАК КоличествоСпланировано\n\t#КонецУдаления\n\t#Вставка\n\t|\tусКонтрольОтгрузкиОбороты.КоличествоСкорректированоОборот + усКонтрольОтгрузкиОбороты.КоличествоСпланированоОборот + усКонтрольОтгрузкиОбороты.КоличествоОтгруженоОборот КАК КоличествоСпланировано\n\t#КонецВставки\n\t// Заказы:  КоличествоСпланировано + КоличествоОтгружено\n\t|ПОМЕСТИТЬ втКонтрольОтгрузкиСпланировано\n\t|ИЗ\n\t|\tРегистрНакопления.усКонтрольОтгрузки.Обороты(\n\t|\t\t\t&МинимальнаяДатаЗаказов\n\t|\t\t\t,\n\t|\t\t\t,\n\t|\t\t\t,\n\t|\t\t\tЗаказНаОтгрузку В\n\t|\t\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\t\tвтЗаказы.ЗаказНаОтгрузку\n\t|\t\t\t\tИЗ\n\t|\t\t\t\t\tвтЗаказы)) КАК усКонтрольОтгрузкиОбороты\n\t|ГДЕ\n\t#Удаление\n\t|\tусКонтрольОтгрузкиОбороты.КоличествоСпланированоОборот + усКонтрольОтгрузкиОбороты.КоличествоОтгруженоОборот <> 0\n\t#КонецУдаления\n\t#Вставка\n\t|\tусКонтрольОтгрузкиОбороты.КоличествоСкорректированоОборот + усКонтрольОтгрузкиОбороты.КоличествоСпланированоОборот + усКонтрольОтгрузкиОбороты.КоличествоОтгруженоОборот > 0\n\t#КонецВставки\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусКонтрольГруппыОтбораОбороты.Организация,\n\t|\tусКонтрольГруппыОтбораОбороты.ГруппаОтбора КАК ГруппаОтбора,\n\t|\tусКонтрольГруппыОтбораОбороты.Номенклатура КАК Номенклатура,\n\t|\tусКонтрольГруппыОтбораОбороты.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tусКонтрольГруппыОтбораОбороты.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tусКонтрольГруппыОтбораОбороты.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tусКонтрольГруппыОтбораОбороты.КоличествоНеОтобраноОборот КАК КоличествоСпланировано\n\t// Группы отбора: КоличествоСпланировано\n\t|ПОМЕСТИТЬ втКонтрольГруппыОтбораСпланировано\n\t|ИЗ\n\t|\tРегистрНакопления.усКонтрольГруппыОтбора.Обороты(\n\t|\t\t\t,\n\t|\t\t\t,\n\t|\t\t\t,\n\t|\t\t\tГруппаОтбора В\n\t|\t\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\t\tвтГруппыОтбора.ГруппаОтбора\n\t|\t\t\t\tИЗ\n\t|\t\t\t\t\tвтГруппыОтбора)) КАК усКонтрольГруппыОтбораОбороты\n\t|ГДЕ\n\t|\tусКонтрольГруппыОтбораОбороты.КоличествоНеОтобраноОборот > 0\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусОстаткиТоваровОстатки.Контейнер.ДокументПривязки КАК ДокументПривязки,\n\t|\tусОстаткиТоваровОстатки.Контейнер КАК Контейнер,\n\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,\n\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tусОстаткиТоваровОстатки.КоличествоОстаток КАК Отобрано\n\t// Заказы, ГруппыОтбора: Остатки товаров в контейнерах привязанных к заказам\n\t|ПОМЕСТИТЬ втОстатки\n\t|ИЗ\n\t|\tРегистрНакопления.усОстаткиТоваров.Остатки(\n\t|\t\t\t,\n\t|\t\t\tКонтейнер В\n\t|\t\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\t\tвтКонтейнеры.Контейнер\n\t|\t\t\t\tИЗ\n\t|\t\t\t\t\tвтКонтейнеры)) КАК усОстаткиТоваровОстатки\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусКонтрольОтгрузкиОбороты.Организация,\n\t|\tусКонтрольОтгрузкиОбороты.ЗаказНаОтгрузку,\n\t|\tусКонтрольОтгрузкиОбороты.Номенклатура,\n\t|\tусКонтрольОтгрузкиОбороты.СтатусНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.ПартияНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.УпаковкаНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.СрокГодности,\n\t|\tусКонтрольОтгрузкиОбороты.НомерПартии,\n\t|\tСУММА(усКонтрольОтгрузкиОбороты.КоличествоЗапланированоОборот) КАК КоличествоЗапланированоОстаток,\n\t|\tСУММА(усКонтрольОтгрузкиОбороты.КоличествоЗапланированоМинОборот) КАК КоличествоЗапланированоМинОстаток,\n\t|\tМАКСИМУМ(усКонтрольОтгрузкиОбороты.НомерКонтейнера) КАК НомерКонтейнера\n\t// Заказы: КоличествоЗапланировано\n\t|ПОМЕСТИТЬ втПлан\n\t|ИЗ\n\t|\tРегистрНакопления.усКонтрольОтгрузки.Обороты(\n\t|\t\t\t&МинимальнаяДатаЗаказов\n\t|\t\t\t,\n\t|\t\t\t,\n\t|\t\t\t,\n\t|\t\t\tЗаказНаОтгрузку В\n\t|\t\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\t\tвтЗаказы.ЗаказНаОтгрузку\n\t|\t\t\t\tИЗ\n\t|\t\t\t\t\tвтЗаказы)) КАК усКонтрольОтгрузкиОбороты\n\t|ГДЕ\n\t|\tусКонтрольОтгрузкиОбороты.КоличествоЗапланированоОборот > 0\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|\tусКонтрольОтгрузкиОбороты.Организация,\n\t|\tусКонтрольОтгрузкиОбороты.ЗаказНаОтгрузку,\n\t|\tусКонтрольОтгрузкиОбороты.Номенклатура,\n\t|\tусКонтрольОтгрузкиОбороты.СтатусНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.ПартияНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.УпаковкаНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.СрокГодности,\n\t|\tусКонтрольОтгрузкиОбороты.НомерПартии\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|\tусКонтрольОтгрузкиОбороты.ЗаказНаОтгрузку,\n\t|\tусКонтрольОтгрузкиОбороты.Номенклатура,\n\t|\tусКонтрольОтгрузкиОбороты.СтатусНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.ПартияНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.УпаковкаНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.СрокГодности,\n\t|\tусКонтрольОтгрузкиОбороты.НомерПартии\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tтбФакт.ЗаказНаОтгрузку,\n\t|\tтбФакт.Номенклатура,\n\t|\tтбФакт.СтатусНоменклатуры,\n\t|\tтбФакт.ПартияНоменклатуры,\n\t|\tтбФакт.УпаковкаНоменклатуры,\n\t|\tтбФакт.СрокГодности,\n\t|\tтбФакт.НомерПартии,\n\t|\tСУММА(тбФакт.КоличествоСпланировано) КАК КоличествоСпланировано\n\t// Заказы: КоличествоСпланировано (спланирован отбор + предв.план размещения под заказы + остаток в контейнере заказа)\n\t|ПОМЕСТИТЬ втФакт\n\t|ИЗ\n\t|\t(ВЫБРАТЬ\n\t|\t\tвтКонтрольОтгрузкиСпланировано.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,\n\t|\t\tвтКонтрольОтгрузкиСпланировано.Номенклатура КАК Номенклатура,\n\t|\t\tвтКонтрольОтгрузкиСпланировано.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\t\tвтКонтрольОтгрузкиСпланировано.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\t\tвтКонтрольОтгрузкиСпланировано.СрокГодности КАК СрокГодности,\n\t|\t\tвтКонтрольОтгрузкиСпланировано.НомерПартии КАК НомерПартии,\n\t|\t\tвтКонтрольОтгрузкиСпланировано.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\t\tвтКонтрольОтгрузкиСпланировано.КоличествоСпланировано КАК КоличествоСпланировано\n\t|\tИЗ\n\t|\t\tвтКонтрольОтгрузкиСпланировано КАК втКонтрольОтгрузкиСпланировано\n\t|\n\t|\tОБЪЕДИНИТЬ ВСЕ\n\t|\n\t|\tВЫБРАТЬ\n\t|\t\tвтЗаказы.ЗаказНаОтгрузку,\n\t|\t\tусПредварительныеПланыРазмещения.Номенклатура,\n\t|\t\tусПредварительныеПланыРазмещения.СтатусНоменклатуры,\n\t|\t\tусПредварительныеПланыРазмещения.ПартияНоменклатуры,\n\t|\t\tусПредварительныеПланыРазмещения.ПартияНоменклатуры.СрокГодности,\n\t|\t\tусПредварительныеПланыРазмещения.ПартияНоменклатуры.Код,\n\t|\t\tусПредварительныеПланыРазмещения.УпаковкаНоменклатуры,\n\t|\t\tусПредварительныеПланыРазмещения.Количество\n\t|\tИЗ\n\t|\t\tвтЗаказы КАК втЗаказы\n\t|\t\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.усПредварительныеПланыРазмещения КАК усПредварительныеПланыРазмещения\n\t|\t\t\tПО втЗаказы.ЗаказНаОтгрузку = усПредварительныеПланыРазмещения.ЗаказНаОтгрузку\n\t|\n\t|\tОБЪЕДИНИТЬ ВСЕ\n\t|\n\t|\tВЫБРАТЬ\n\t|\t\tвтОстатки.ДокументПривязки,\n\t|\t\tвтОстатки.Номенклатура,\n\t|\t\tвтОстатки.СтатусНоменклатуры,\n\t|\t\tвтОстатки.ПартияНоменклатуры,\n\t|\t\tвтОстатки.ПартияНоменклатуры.СрокГодности,\n\t|\t\tвтОстатки.ПартияНоменклатуры.Код,\n\t|\t\tвтОстатки.УпаковкаНоменклатуры,\n\t|\t\tвтОстатки.Отобрано\n\t|\tИЗ\n\t|\t\tвтОстатки КАК втОстатки\n\t|\tГДЕ\n\t|\t\tвтОстатки.ДокументПривязки ССЫЛКА Документ.усЗаказНаОтгрузку) КАК тбФакт\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|\tтбФакт.ЗаказНаОтгрузку,\n\t|\tтбФакт.Номенклатура,\n\t|\tтбФакт.СтатусНоменклатуры,\n\t|\tтбФакт.ПартияНоменклатуры,\n\t|\tтбФакт.УпаковкаНоменклатуры,\n\t|\tтбФакт.СрокГодности,\n\t|\tтбФакт.НомерПартии\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|\tтбФакт.ЗаказНаОтгрузку,\n\t|\tтбФакт.Номенклатура,\n\t|\tтбФакт.СтатусНоменклатуры,\n\t|\tтбФакт.ПартияНоменклатуры,\n\t|\tтбФакт.УпаковкаНоменклатуры,\n\t|\tтбФакт.СрокГодности,\n\t|\tтбФакт.НомерПартии\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tвтПлан.Организация,\n\t|\tвтПлан.ЗаказНаОтгрузку,\n\t|\tвтПлан.НомерКонтейнера,\n\t|\tвтПлан.Номенклатура,\n\t|\tвтПлан.СтатусНоменклатуры,\n\t|\tвтПлан.ПартияНоменклатуры,\n\t|\tвтПлан.УпаковкаНоменклатуры,\n\t|\tвтПлан.СрокГодности,\n\t|\tвтПлан.НомерПартии,\n\t|\tвтПлан.КоличествоЗапланированоОстаток,\n\t|\tвтПлан.КоличествоЗапланированоМинОстаток,\n\t|\tСУММА(ЕСТЬNULL(втФакт.КоличествоСпланировано, 0)) КАК КоличествоСпланировано,\n\t|\tусКлассификацияABCXYZНоменклатуры.Класс КАК КлассАВС\n\t// Заказы: Запланировано и Спланировано\n\t|ПОМЕСТИТЬ втИтог\n\t|ИЗ\n\t|\tвтПлан КАК втПлан\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ втФакт КАК втФакт\n\t|\t\tПО втПлан.ЗаказНаОтгрузку = втФакт.ЗаказНаОтгрузку\n\t|\t\t\tИ втПлан.Номенклатура = втФакт.Номенклатура\n\t|\t\t\tИ (втПлан.СтатусНоменклатуры В (втФакт.СтатусНоменклатуры, ЗНАЧЕНИЕ(Справочник.усСтатусыНоменклатуры.ПустаяСсылка)))\n\t|\t\t\tИ (втПлан.ПартияНоменклатуры В (втФакт.ПартияНоменклатуры, ЗНАЧЕНИЕ(Справочник.усПартииНоменклатуры.ПустаяСсылка)))\n\t|\t\t\tИ (втПлан.СрокГодности В (втФакт.СрокГодности, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)))\n\t|\t\t\tИ (втПлан.НомерПартии В (втФакт.НомерПартии, \"\"\"\"))\n\t|\t\t\tИ (втПлан.УпаковкаНоменклатуры В (втФакт.УпаковкаНоменклатуры, ЗНАЧЕНИЕ(Справочник.усУпаковкиНоменклатуры.ПустаяСсылка)))\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.усКлассификацияABCXYZНоменклатуры КАК усКлассификацияABCXYZНоменклатуры\n\t|\t\tПО втПлан.Номенклатура = усКлассификацияABCXYZНоменклатуры.Номенклатура\n\t|\t\t\tИ втПлан.Номенклатура.МодельУчета.ОсновнойВидКлассификатораABC = усКлассификацияABCXYZНоменклатуры.ВидКлассификатора\n\t|\t\t\tИ (усКлассификацияABCXYZНоменклатуры.ТипКлассификатора = ЗНАЧЕНИЕ(Перечисление.усТипыКлассификаторов.ABC))\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|\tвтПлан.Организация,\n\t|\tвтПлан.ЗаказНаОтгрузку,\n\t|\tвтПлан.Номенклатура,\n\t|\tвтПлан.СтатусНоменклатуры,\n\t|\tвтПлан.ПартияНоменклатуры,\n\t|\tвтПлан.УпаковкаНоменклатуры,\n\t|\tвтПлан.СрокГодности,\n\t|\tвтПлан.НомерПартии,\n\t|\tвтПлан.КоличествоЗапланированоОстаток,\n\t|\tвтПлан.КоличествоЗапланированоМинОстаток,\n\t|\tусКлассификацияABCXYZНоменклатуры.Класс,\n\t|\tвтПлан.НомерКонтейнера\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tвтИтог.Организация,\n\t|\tвтИтог.ЗаказНаОтгрузку.ГруппаОтбора КАК ГруппаОтбора,\n\t|\tвтИтог.ЗаказНаОтгрузку,\n\t|\tвтИтог.НомерКонтейнера,\n\t|\tвтИтог.Номенклатура КАК Номенклатура,\n\t|\tвтИтог.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tвтИтог.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tвтИтог.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tвтИтог.СрокГодности КАК СрокГодности,\n\t|\tвтИтог.НомерПартии КАК НомерПартии,\n\t|\tвтИтог.КоличествоЗапланированоОстаток - втИтог.КоличествоСпланировано КАК Количество\n\t// [10] Заказы: Количество к отбору (Запланировано - Спланировано), если Спланировано < ЗапланированоМин\n\t|ИЗ\n\t|\tвтИтог КАК втИтог\n\t|ГДЕ\n\t|\tвтИтог.КоличествоЗапланированоМинОстаток > втИтог.КоличествоСпланировано\n\t|\n\t|УПОРЯДОЧИТЬ ПО\n\t|\tОрганизация,\n\t|\tНоменклатура,\n\t|\tПартияНоменклатуры УБЫВ,\n\t|\tСтатусНоменклатуры УБЫВ,\n\t|\tУпаковкаНоменклатуры УБЫВ,\n\t|\tСрокГодности УБЫВ,\n\t|\tНомерПартии УБЫВ,\n\t|\tвтИтог.ЗаказНаОтгрузку.ВажностьЗадач.Порядок,\n\t|\tвтИтог.ЗаказНаОтгрузку.ДатаОтгрузки\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tПланыПоГруппе.ГруппаОтбора,\n\t|\tПланыПоГруппе.Номенклатура,\n\t|\tПланыПоГруппе.СтатусНоменклатуры,\n\t|\tПланыПоГруппе.ПартияНоменклатуры,\n\t|\tПланыПоГруппе.УпаковкаНоменклатуры,\n\t|\tСУММА(ПланыПоГруппе.КоличествоСпланировано) КАК КоличествоСпланировано,\n\t|\tПланыПоГруппе.ПартияНоменклатуры.СрокГодности,\n\t|\tПланыПоГруппе.ПартияНоменклатуры.Код\n\t// [11] ГруппыОтбора: Количество спланировано\n\t|ИЗ\n\t|\t(ВЫБРАТЬ\n\t|\t\tвтКонтрольГруппыОтбораСпланировано.ГруппаОтбора КАК ГруппаОтбора,\n\t|\t\tвтКонтрольГруппыОтбораСпланировано.Номенклатура КАК Номенклатура,\n\t|\t\tвтКонтрольГруппыОтбораСпланировано.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\t\tвтКонтрольГруппыОтбораСпланировано.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\t\tвтКонтрольГруппыОтбораСпланировано.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\t\tвтКонтрольГруппыОтбораСпланировано.КоличествоСпланировано КАК КоличествоСпланировано\n\t|\tИЗ\n\t|\t\tвтКонтрольГруппыОтбораСпланировано КАК втКонтрольГруппыОтбораСпланировано\n\t|\n\t|\tОБЪЕДИНИТЬ ВСЕ\n\t|\n\t|\tВЫБРАТЬ\n\t|\t\tвтОстатки.ДокументПривязки,\n\t|\t\tвтОстатки.Номенклатура,\n\t|\t\tвтОстатки.СтатусНоменклатуры,\n\t|\t\tвтОстатки.ПартияНоменклатуры,\n\t|\t\tвтОстатки.УпаковкаНоменклатуры,\n\t|\t\tвтОстатки.Отобрано\n\t|\tИЗ\n\t|\t\tвтОстатки КАК втОстатки\n\t|\tГДЕ\n\t|\t\tвтОстатки.ДокументПривязки ССЫЛКА Документ.усГруппаОтбора) КАК ПланыПоГруппе\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|\tПланыПоГруппе.ГруппаОтбора,\n\t|\tПланыПоГруппе.Номенклатура,\n\t|\tПланыПоГруппе.СтатусНоменклатуры,\n\t|\tПланыПоГруппе.ПартияНоменклатуры,\n\t|\tПланыПоГруппе.ПартияНоменклатуры.СрокГодности,\n\t|\tПланыПоГруппе.ПартияНоменклатуры.Код,\n\t|\tПланыПоГруппе.УпаковкаНоменклатуры\";\n\n\tЗапрос.УстановитьПараметр(\"ЗаказНаОтгрузку\", мсвЗаказов);\n\tЗапрос.УстановитьПараметр(\"МинимальнаяДатаЗаказов\", усОбщегоНазначенияСервер.ПолучитьМинимальнуюДатуДокументов(мсвЗаказов));\n\n\tРезультат = Запрос.ВыполнитьПакет();\n\n\tтбзСтрок         = Результат[10].Выгрузить();\n\tтбзПланыПоГруппе = Результат[11].Выгрузить();\n\n\tЕсли Логи <> Неопределено Тогда\n\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Определение потребности: %1';\n\t\t|en='Demand definition: %1'\"), Истина);\n\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, тбзСтрок, НСтр(\"ru='Таблица потребности';\n\t\t|en='Demand table'\"), Истина);\n\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, 1);\n\tКонецЕсли;\n\n\tЕсли тбзСтрок.Количество() = 0 Тогда\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Нет потребности для планирования';\n\t\t\t|en='No demand for planning'\"));\n\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\tКонецЕсли;\n\t\tДля Каждого текДокумент Из мсвДляРегистрации Цикл\n\t\t\tНаборЗаписей = РегистрыСведений.усПланированиеОтбораВыполняется.СоздатьНаборЗаписей();\n\t\t\tНаборЗаписей.Заполнить(Неопределено);\t\n\t\t\tНаборЗаписей.Отбор.ЗаказНаОтгрузку.Установить(текДокумент);\n\t\t\tНаборЗаписей.Записать();\n\t\tКонецЦикла;\n\t\tВозврат;\n\tКонецЕсли;\n\n\tмсвСтрокДляУдаления = Новый Массив;\n\n\tсткПоиска = Новый Структура(\"ГруппаОтбора, Номенклатура\");\n\tДля Каждого текПлан Из тбзПланыПоГруппе Цикл\n\t\tЗаполнитьЗначенияСвойств(сткПоиска, текПлан);\n\n\t\tмсвСтрок = тбзСтрок.НайтиСтроки(сткПоиска);\n\t\tДля Каждого текСтрока Из мсвСтрок Цикл\n\t\t\tЕсли (текСтрока.СтатусНоменклатуры = текПлан.СтатусНоменклатуры ИЛИ Не ЗначениеЗаполнено(текСтрока.СтатусНоменклатуры))\n\t\t\t\tИ (текСтрока.ПартияНоменклатуры = текПлан.ПартияНоменклатуры ИЛИ Не ЗначениеЗаполнено(текСтрока.ПартияНоменклатуры))\n\t\t\t\tИ (текСтрока.УпаковкаНоменклатуры = текПлан.УпаковкаНоменклатуры ИЛИ Не ЗначениеЗаполнено(текСтрока.УпаковкаНоменклатуры))\n\t\t\t\tИ (текСтрока.СрокГодности = текПлан.ПартияНоменклатурыСрокГодности ИЛИ Не ЗначениеЗаполнено(текСтрока.СрокГодности))\n\t\t\t\tИ (текСтрока.НомерПартии = текПлан.ПартияНоменклатурыКод ИЛИ Не ЗначениеЗаполнено(текСтрока.НомерПартии)) Тогда\n\n\t\t\t\tтекКоличество = Мин(текСтрока.Количество, текПлан.КоличествоСпланировано);\n\t\t\t\tЕсли текКоличество > 0 Тогда\n\t\t\t\t\tтекСтрока.Количество           = текСтрока.Количество - текКоличество;\n\t\t\t\t\tтекПлан.КоличествоСпланировано = текПлан.КоличествоСпланировано - текКоличество;\n\n\t\t\t\t\tЕсли текСтрока.Количество = 0 Тогда\n\t\t\t\t\t\tмсвСтрокДляУдаления.Добавить(текСтрока);\n\t\t\t\t\tКонецЕсли;\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tЕсли текПлан.КоличествоСпланировано = 0 Тогда\n\t\t\t\t\tПрервать;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\tКонецЦикла;\n\n\t// Удалим строки для которых полностью спланирован отбор в группе отбора\n\tДля Каждого текСтрока Из мсвСтрокДляУдаления Цикл\n\t\tтбзСтрок.Удалить(текСтрока);\n\tКонецЦикла;\n\n\tЕсли тбзСтрок.Количество() = 0 Тогда\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Нет потребности для планирования';\n\t\t\t|en='No demand for planning'\"));\n\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\tКонецЕсли;\n\t\tДля Каждого текДокумент Из мсвДляРегистрации Цикл\n\t\t\tНаборЗаписей = РегистрыСведений.усПланированиеОтбораВыполняется.СоздатьНаборЗаписей();\n\t\t\tНаборЗаписей.Заполнить(Неопределено);\t\n\t\t\tНаборЗаписей.Отбор.ЗаказНаОтгрузку.Установить(текДокумент);\n\t\t\tНаборЗаписей.Записать();\n\t\tКонецЦикла;\n\t\tВозврат;\n\tКонецЕсли;\n\n\t// Контроль того, что заказы не изменялись\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст =\n\t\"ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t|\tусЗаказНаОтгрузку.Ссылка\n\t|ПОМЕСТИТЬ втПланируемыеЗаказы\n\t|ИЗ\n\t|\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.усЗаказыНаОтгрузкуКПересчетуСтатуса КАК усЗаказыНаОтгрузкуКПересчетуСтатуса\n\t|\t\tПО усЗаказНаОтгрузку.Ссылка = усЗаказыНаОтгрузкуКПересчетуСтатуса.ЗаказНаОтгрузку\n\t|ГДЕ\n\t|\tусЗаказНаОтгрузку.Ссылка В(&Ссылка)\n\t|\tИ усЗаказыНаОтгрузкуКПересчетуСтатуса.ПоследняяРегистрация > &ПоследняяРегистрация\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t|\tусЗаказНаОтгрузку.Ссылка,\n\t|\tусЗаказНаОтгрузку.ГруппаОтбора\n\t|ПОМЕСТИТЬ втПланируемыеЗаказыВГруппе\n\t|ИЗ\n\t|\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.усЗаказыНаОтгрузкуКПересчетуСтатуса КАК усЗаказыНаОтгрузкуКПересчетуСтатуса\n\t|\t\tПО усЗаказНаОтгрузку.Ссылка = усЗаказыНаОтгрузкуКПересчетуСтатуса.ЗаказНаОтгрузку\n\t|ГДЕ\n\t|\tусЗаказНаОтгрузку.Ссылка В(&Ссылка)\n\t|\tИ усЗаказыНаОтгрузкуКПересчетуСтатуса.ПоследняяРегистрация > &ПоследняяРегистрация\n\t|\tИ усЗаказНаОтгрузку.ГруппаОтбора <> ЗНАЧЕНИЕ(Документ.усГруппаОтбора.ПустаяСсылка)\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t|\tусЗаказНаОтгрузку.Ссылка,\n\t|\tусЗаказНаОтгрузку.ГруппаОтбора\n\t|ПОМЕСТИТЬ втПланируемыеГруппыОтбора\n\t|ИЗ\n\t|\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.усГруппыОтбораКПересчетуСтатуса КАК усГруппыОтбораКПересчетуСтатуса\n\t|\t\tПО усЗаказНаОтгрузку.ГруппаОтбора = усГруппыОтбораКПересчетуСтатуса.ГруппаОтбора\n\t|ГДЕ\n\t|\tусЗаказНаОтгрузку.Ссылка В(&Ссылка)\n\t|\tИ усГруппыОтбораКПересчетуСтатуса.ПоследняяРегистрация > &ПоследняяРегистрация\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t|\tусЗаказНаОтгрузку.Ссылка,\n\t|\tусЗаказНаОтгрузку.ГруппаОтбора,\n\t|\tвтПланируемыеЗаказы.Ссылка КАК ЗаказНаОтгрузкуОбновлен,\n\t|\tвтПланируемыеГруппыОтбора.ГруппаОтбора КАК ГруппаОтбораЗаблокирована,\n\t|\tвтПланируемыеЗаказыВГруппе.ГруппаОтбора КАК ЗаказВГруппеОтбораОбновлен\n\t|ИЗ\n\t|\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ втПланируемыеЗаказы КАК втПланируемыеЗаказы\n\t|\t\tПО усЗаказНаОтгрузку.Ссылка = втПланируемыеЗаказы.Ссылка\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ втПланируемыеГруппыОтбора КАК втПланируемыеГруппыОтбора\n\t|\t\tПО усЗаказНаОтгрузку.Ссылка = втПланируемыеГруппыОтбора.Ссылка\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ втПланируемыеЗаказыВГруппе КАК втПланируемыеЗаказыВГруппе\n\t|\t\tПО усЗаказНаОтгрузку.ГруппаОтбора = втПланируемыеЗаказыВГруппе.ГруппаОтбора\n\t|ГДЕ\n\t|\tусЗаказНаОтгрузку.Ссылка В(&Ссылка)\";\n\tЗапрос.УстановитьПараметр(\"Ссылка\",               мсвЗаказов);\n\tЗапрос.УстановитьПараметр(\"ПоследняяРегистрация\", НачалоПланирования);\n\n\tВыборка = Запрос.Выполнить().Выбрать();\n\tмсвДляСнятияРегистрации = Новый Массив;\n\n\tПока Выборка.Следующий() Цикл\n\t\tЕстьОшибка = Истина;\n\n\t\tЕсли ЗначениеЗаполнено(Выборка.ЗаказНаОтгрузкуОбновлен) Тогда\n\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Состояние по документу %1 было обновлено в процессе определения потребности.';\n\t\t\t\t|en='State by the %1 document was updated upon identifying the demand.'\"));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, \n\t\t\t\tВыборка.ЗаказНаОтгрузкуОбновлен,\n\t\t\t\tСтрока(Выборка.ЗаказНаОтгрузкуОбновлен));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\t\n\t\t\tКонецЕсли;\n\t\t\tОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(мсвЗаказов, Выборка.Ссылка);\n\n\t\tИначеЕсли ЗначениеЗаполнено(Выборка.ГруппаОтбораЗаблокирована) Тогда\n\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Состояние по документу %1 было обновлено в процессе определения потребности.';\n\t\t\t\t|en='State by the %1 document was updated upon identifying the demand.'\"));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, \n\t\t\t\tВыборка.ГруппаОтбораЗаблокирована,\n\t\t\t\tСтрока(Выборка.ГруппаОтбораЗаблокирована));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\t\n\t\t\tКонецЕсли;\n\t\t\tОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(мсвЗаказов, Выборка.Ссылка);\n\n\t\tИначеЕсли ЗначениеЗаполнено(Выборка.ЗаказВГруппеОтбораОбновлен) Тогда\n\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Состояние по документу %1 было обновлено в процессе определения потребности.';\n\t\t\t\t|en='State by the %1 document was updated upon identifying the demand.'\"));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, \n\t\t\t\tВыборка.ЗаказВГруппеОтбораОбновлен,\n\t\t\t\tСтрока(Выборка.ЗаказВГруппеОтбораОбновлен));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\t\n\t\t\tКонецЕсли;\n\t\t\tОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(мсвЗаказов, Выборка.Ссылка);\n\t\tИначе\n\t\t\tЕстьОшибка = Ложь;\n\t\tКонецЕсли;\n\n\t\tЕсли ЕстьОшибка Тогда\n\t\t\tЕсли мсвДляСнятияРегистрации.Найти(Выборка.Ссылка) = Неопределено Тогда\n\t\t\t\tмсвДляСнятияРегистрации.Добавить(Выборка.Ссылка);\n\t\t\tКонецЕсли;\n\n\t\t\tЕсли ЗначениеЗаполнено(Выборка.ГруппаОтбора) И мсвДляСнятияРегистрации.Найти(Выборка.ГруппаОтбора) = Неопределено Тогда\n\t\t\t\tмсвДляСнятияРегистрации.Добавить(Выборка.ГруппаОтбора);\n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\n\tКонецЦикла;\n\n\tДля Каждого текДокумент Из мсвДляСнятияРегистрации Цикл\n\t\tНаборЗаписей = РегистрыСведений.усПланированиеОтбораВыполняется.СоздатьНаборЗаписей();\n\t\tНаборЗаписей.Заполнить(Неопределено);\t\n\t\tНаборЗаписей.Отбор.ЗаказНаОтгрузку.Установить(текДокумент);\n\t\tНаборЗаписей.Записать();\n\tКонецЦикла;\n\n\tмсвСтрокДляУдаления.Очистить();\n\tДля Каждого текСтрока Из тбзСтрок Цикл\n\t\tЕсли мсвДляСнятияРегистрации.Найти(текСтрока.ЗаказНаОтгрузку) <> Неопределено Тогда\n\t\t\tмсвСтрокДляУдаления.Добавить(текСтрока);\n\t\tКонецЕсли;\n\tКонецЦикла;\n\n\t// удалим строки в которых были изменены заказы\n\tДля Каждого текСтрока Из мсвСтрокДляУдаления Цикл\n\t\tтбзСтрок.Удалить(текСтрока);\n\tКонецЦикла;\n\n\tЕсли тбзСтрок.Количество() = 0 Тогда\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Нет потребности для планирования';\n\t\t\t|en='No demand for planning'\"));\n\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\tКонецЕсли;\n\t\tДля Каждого текДокумент Из мсвДляРегистрации Цикл\n\t\t\tНаборЗаписей = РегистрыСведений.усПланированиеОтбораВыполняется.СоздатьНаборЗаписей();\n\t\t\tНаборЗаписей.Заполнить(Неопределено);\t\n\t\t\tНаборЗаписей.Отбор.ЗаказНаОтгрузку.Установить(текДокумент);\n\t\t\tНаборЗаписей.Записать();\n\t\tКонецЦикла;\n\t\tВозврат;\n\tКонецЕсли;\n\n\tЕсли Логи <> Неопределено Тогда\n\t\tусЛогированиеПроцессов.ИзменитьУровень(Логи, -1);\n\n\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Итоги по потребности: %1';\n\t\t|en='Totals by demand: %1'\"), Истина);\n\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, тбзСтрок, НСтр(\"ru='Таблица потребности';\n\t\t|en='Demand table'\"), Истина);\n\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\tКонецЕсли;\n\n\tсткПоиска.Вставить(\"СтатусНоменклатуры\");\n\tсткПоиска.Вставить(\"ПартияНоменклатуры\");\n\tсткПоиска.Вставить(\"УпаковкаНоменклатуры\");\n\tсткПоиска.Вставить(\"НомерПартии\");\n\tсткПоиска.Вставить(\"СрокГодности\");\n\n\tмсвТаблицПланирования = Новый Массив; // таблицы планирования отбора\n\n\tЕсли ЗначениеЗаполнено(РазмерПорции) Тогда\n\t\tКоличествоПотоковИтог = Мин(Окр(тбзСтрок.Количество() / РазмерПорции + 0.4999), КоличествоПотоков);\n\tИначе\n\t\tКоличествоПотоковИтог = КоличествоПотоков;\n\tКонецЕсли;\n\n\tтбзСтрок.Колонки.Добавить(\"Обработана\", Новый ОписаниеТипов(\"Булево\"));\n\tДля Каждого текСтрока Из тбзСтрок Цикл\n\t\tЕсли текСтрока.Обработана Тогда\n\t\t\tПродолжить;\n\t\tКонецЕсли;\n\n\t\tЗаполнитьЗначенияСвойств(сткПоиска, текСтрока);\n\t\tНайденныеСтроки = тбзСтрок.НайтиСтроки(сткПоиска);\n\t\tДля Каждого НайденнаяСтрока Из НайденныеСтроки Цикл\n\t\t\tНайденнаяСтрока.Обработана = Истина;\n\t\tКонецЦикла;\n\t\tмсвТаблицПланирования.Добавить(тбзСтрок.Скопировать(НайденныеСтроки));\n\tКонецЦикла;\n\n\tЕсли Логи <> Неопределено ИЛИ КоличествоПотоковИтог <= 1 Тогда\n\t\tЕсли Логи = Неопределено И КоличествоПотоков > 1 Тогда\n\t\t\tДля Сч = КоличествоПотоковИтог По КоличествоПотоков - 1 Цикл\n\t\t\t\tНаборЗаписей = РегистрыСведений.усПланированиеОтбораВыполняется.СоздатьНаборЗаписей();\n\t\t\t\tНаборЗаписей.Заполнить(Неопределено);\t\n\t\t\t\tНаборЗаписей.Отбор.ИдентификаторЗадания.Установить(мсвИдентификаторов[Сч]);\n\t\t\t\tНаборЗаписей.Записать();\n\t\t\tКонецЦикла;\n\t\tКонецЕсли;\n\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Планирование';\n\t\t\t|en='Planning'\"), Истина);\n\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, 1);\n\t\tКонецЕсли;\n\n\t\tДля Каждого текТаблица Из мсвТаблицПланирования Цикл\n\t\t\tСпланироватьОтборПоТаблице(текТаблица, Логи, ПриостановитьЗадачи);\n\t\tКонецЦикла;\n\n\t\tВыполнитьУкладку(мсвЗаказов);\n\n\t\tДля Каждого текДокумент Из мсвДляРегистрации Цикл\n\t\t\tНаборЗаписей = РегистрыСведений.усПланированиеОтбораВыполняется.СоздатьНаборЗаписей();\n\t\t\tНаборЗаписей.Заполнить(Неопределено);\n\t\t\tНаборЗаписей.Отбор.ЗаказНаОтгрузку.Установить(текДокумент);\n\t\t\tНаборЗаписей.Записать();\n\t\tКонецЦикла;\n\n\tИначе\n\t\tмсвЗадач = Новый Массив(КоличествоПотоковИтог);\n\t\tДля Сч = 0 По КоличествоПотоковИтог - 1 Цикл\n\t\t\tмсвЗадач[Сч] = Новый Массив;\n\t\tКонецЦикла;\n\n\t\tНомерПакета = 0;\n\t\tДля Каждого текТаблица Из мсвТаблицПланирования Цикл\n\t\t\tмсвЗадач[НомерПакета].Добавить(текТаблица);\n\n\t\t\tЕсли НомерПакета = КоличествоПотоковИтог - 1 Тогда\n\t\t\t\tНомерПакета = 0;\n\t\t\tИначе\n\t\t\t\tНомерПакета = НомерПакета + 1;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\n\t\tДля Сч = 0 По КоличествоПотоковИтог - 1 Цикл\n\t\t\tЕсли мсвЗадач[Сч].Количество() > 0 Тогда\n\t\t\t\tмсвПараметров = Новый Массив;\n\t\t\t\tмсвПараметров.Добавить(мсвЗадач[Сч]);\n\t\t\t\tмсвПараметров.Добавить(мсвИдентификаторов[Сч]);\n\n\t\t\t\tмсвИдентификаторовФЗ[Сч] = усУправлениеФоновымиЗадачамиВызовСервера.ВыполнитьФоновоеЗадание(\"усАлгоритмыОтбора.СпланироватьПакетЗадач\", мсвПараметров, мсвИдентификаторов[Сч]);\n\t\t\tИначе\n\t\t\t\tНаборЗаписей = РегистрыСведений.усПланированиеОтбораВыполняется.СоздатьНаборЗаписей();\n\t\t\t\tНаборЗаписей.Заполнить(Неопределено);\n\t\t\t\tНаборЗаписей.Отбор.ИдентификаторЗадания.Установить(мсвИдентификаторов[Сч]);\n\t\t\t\tНаборЗаписей.Записать();\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\t\tДля Сч = КоличествоПотоковИтог По КоличествоПотоков - 1 Цикл\n\t\t\tНаборЗаписей = РегистрыСведений.усПланированиеОтбораВыполняется.СоздатьНаборЗаписей();\n\t\t\tНаборЗаписей.Заполнить(Неопределено);\n\t\t\tНаборЗаписей.Отбор.ИдентификаторЗадания.Установить(мсвИдентификаторов[Сч]);\n\t\t\tНаборЗаписей.Записать();\n\t\tКонецЦикла;\n\t\tмсвПараметров = Новый Массив;\n\t\tмсвПараметров.Добавить(мсвИдентификаторовФЗ);\n\t\tмсвПараметров.Добавить(мсвЗаказов);\n\t\tмсвПараметров.Добавить(мсвИдентификаторов);\n\n\t\tусУправлениеФоновымиЗадачамиВызовСервера.ВыполнитьФоновоеЗадание(\"усАлгоритмыОтбора.ПроверкаВыполненияОтбора\", мсвПараметров);\n\tКонецЕсли;\n\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\усАлгоритмыРазмещения\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\усАлгоритмыРазмещения\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/d03b28517e2cb545f2d2dc2d081d5f1d28b04285/_bsl%5CResources%5C726598511%5CCommonModule%5C%D1%83%D1%81%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC%D1%8B%D0%A0%D0%B0%D0%B7%D0%BC%D0%B5%D1%89%D0%B5%D0%BD%D0%B8%D1%8F%5CCommonModule.obj.bsl",
            "size": 31651,
            "truncated": false,
            "content": "&ИзменениеИКонтроль(\"РазместитьСтрокуСостава\")\nФункция Бюро1440_РазместитьСтрокуСостава(текАлгоритм, ДокументОснование, текСостав, ТипЗадачи, ЗадачаОбъект, ЗадачаТоварОбъект, Логи, ПлановоеВремя, ИсключаемыеКонтейнера, СозданныеЗадачи)\n\n\tЕсли Логи <> Неопределено Тогда\n\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Планирование номенклатуры %1';\n\t\t\t|en='Products scheduling %1'\"));\n\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, текСостав.Номенклатура, Строка(текСостав.Номенклатура));\n\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, 1);\n\tКонецЕсли;\n\n\tЕсли СозданныеЗадачи = Неопределено Тогда\n\t\tСозданныеЗадачи = Новый Массив;\n\tКонецЕсли;\n\n\tПланированиеУспешно = Ложь;\n\n\tЕсли усРаботаСУпаковкамиНоменклатуры.ВестиУчетТовараВУпаковках_2_0(текСостав.Номенклатура) Тогда\n\t\tсткДанныеЕХ = ПолучитьДанныеУпаковкиНоменклатуры(текСостав.УпаковкаНоменклатуры);\n\tИначе\n\t\tсткДанныеЕХ = усСервисныеФункцииВызовСервера.ПолучитьДанныеЕХ(текСостав.Номенклатура, текСостав.Количество);\n\t\tтекСостав.УпаковкаНоменклатуры = сткДанныеЕХ.Упаковка;\n\tКонецЕсли;\n\t\n\t// Таблица значений, в которую будет получен результат\n\tРезультат = ПолучитьРезультатЗапросаРазмещенияСостава(текАлгоритм, текСостав, сткДанныеЕХ, Логи);\n\t#Вставка  \n\t// ++ Ситек Булдаков 09.01.24\n\tЕсли Результат <> Неопределено И текАлгоритм.Бюро1440_РазмещатьПоПоклажедателю Тогда\n\t\tУстановитьПривилегированныйРежим(Истина);\n\t\tНеПодходящиеСтрокиПоПоклажедателю\t= Новый Массив;\n\t\tДля каждого СтрокаРезультата Из Результат Цикл\n\t\t\tЕсли СтрокаРезультата.Зона.Склад <> текСостав.ПартияНоменклатуры.Поклажедатель Тогда\n\t\t\t\tНеПодходящиеСтрокиПоПоклажедателю.Добавить(СтрокаРезультата);\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\t\t\n\t\tДля каждого СтрокаРезультата Из НеПодходящиеСтрокиПоПоклажедателю Цикл\n\t\t\tРезультат.Удалить(СтрокаРезультата);\n\t\tКонецЦикла;\n\t\tУстановитьПривилегированныйРежим(Ложь);\n\tКонецЕсли;\n\t// -- Ситек Булдаков 09.01.24\n\t#КонецВставки\n\n\tЕсли Результат = Неопределено Тогда\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Не найдено подходящих контейнеров';\n\t\t\t\t|en='No suitable containers found'\"));\n\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, -1);\n\t\tКонецЕсли;\n\t\tВозврат Ложь;\n\tКонецЕсли;\n\n\tсоотЗон = Новый Соответствие;\n\tЕсли Результат.Количество() Тогда\n\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Найдены подходящие контейнеры. %1';\n\t\t\t\t|en='Suitable containers have been found. %1'\"));\n\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, Результат, НСтр(\"ru='Таблица контейнеров';\n\t\t\t\t|en='Container Table'\"));\n\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, 1);\n\t\tКонецЕсли;\n\n\t\tЕсли ЗадачаТоварОбъект <> Неопределено Тогда\n\t\t\tЗадачаСоставОбъект = ЗадачаТоварОбъект;\n\t\tИначе\n\t\t\tЗадачаСоставОбъект = СоздатьРазмещениеТовара(ДокументОснование, текСостав, ПлановоеВремя, ТипЗадачи, ЗадачаОбъект);\t\n\t\tКонецЕсли;\n\n\t\t// Подготовим данные для проведения\n\t\tЕсли усРаботаСУпаковкамиНоменклатуры.ВестиУчетТовараВУпаковках_2_0(текСостав.Номенклатура) Тогда\n\t\t\tКлючАналитики = усУправлениеСкладом.ЗначениеКлючаАналитики(текСостав.Номенклатура, текСостав.СтатусНоменклатуры, текСостав.ПартияНоменклатуры, текСостав.УпаковкаНоменклатуры);\n\t\tИначе\n\t\t\tКлючАналитики = усУправлениеСкладом.ЗначениеКлючаАналитики(текСостав.Номенклатура, текСостав.СтатусНоменклатуры, текСостав.ПартияНоменклатуры, Справочники.усУпаковкиНоменклатуры.ПустаяСсылка());\n\t\tКонецЕсли;\n\n\t\tсткТаблицПроведения = Новый Структура;\n\t\tНовоеДействие       = усПроведениеДокумента.ПолучитьНовоеДействиеПоПеремещениюТовара(ЗадачаСоставОбъект, сткТаблицПроведения);\n\t\tИспользуютсяМастерКонтейнеры = усСервисныеФункцииВызовСервера.ИспользуютсяМастерКонтейнеры();\n\t\t\n\t\tНомерСтроки = 0;\n\t\tДля Каждого текСтрокаРезультата Из Результат Цикл\n\n\t\t\tЕсли ИсключаемыеКонтейнера <> Неопределено И ИсключаемыеКонтейнера.Найти(текСтрокаРезультата.Контейнер) <> Неопределено Тогда\n\t\t\t\tПродолжить;\n\t\t\tКонецЕсли;\n\n\t\t\tтекКоличествоНовыхКонтейнеров = соотЗон.Получить(текСтрокаРезультата.Зона);\n\t\t\tЕсли текКоличествоНовыхКонтейнеров = Неопределено Тогда\n\t\t\t\tсоотЗон.Вставить(текСтрокаРезультата.Зона, текСтрокаРезультата.КоличествоНовыхКонтейнеров);\n\t\t\t\tтекКоличествоНовыхКонтейнеров = текСтрокаРезультата.КоличествоНовыхКонтейнеров;\n\t\t\tКонецЕсли;\n\n\t\t\tЕсли НЕ текСтрокаРезультата.КонтейнерСТоваром И текКоличествоНовыхКонтейнеров <= 0 Тогда\n\t\t\t\tПродолжить;\n\t\t\tКонецЕсли;\n\t\t\t\n\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Планирование в контейнер %1';\n\t\t\t\t\t|en='Scheduling to the %1 container'\"));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, текСтрокаРезультата.Контейнер, \n\t\t\t\t\tСтрока(текСтрокаРезультата.Контейнер));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, 1);\n\t\t\tКонецЕсли;\n\n\t\t\tНомерСтроки = НомерСтроки + 1;\n\n\t\t\tДля Каждого текТаблица Из сткТаблицПроведения Цикл\n\t\t\t\tтекТаблица.Значение.Очистить();\n\t\t\tКонецЦикла;\n\n\t\t\tЕсли ЗначениеЗаполнено(сткДанныеЕХ.Упаковка) Тогда\n\t\t\t\tтекКоличествоУпаковок = (Мин(Цел(текСтрокаРезультата.КоличествоСвободное / сткДанныеЕХ.Кратность), Цел(текСостав.Количество / сткДанныеЕХ.Кратность)));\n\t\t\t\tЕсли текКоличествоУпаковок = 0 Тогда\n\n\t\t\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Контейнер %1 заполнен';\n\t\t\t\t\t\t\t|en='Container %1 is filled'\"));\n\t\t\t\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, текСтрокаРезультата.Контейнер, \n\t\t\t\t\t\t\tСтрока(текСтрокаРезультата.Контейнер));\n\t\t\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, -1);\n\t\t\t\t\tКонецЕсли;\n\t\t\t\t\tПродолжить;\n\t\t\t\tКонецЕсли;\n\t\t\t\tтекКоличество = текКоличествоУпаковок * сткДанныеЕХ.Кратность;\n\t\t\tИначе\n\t\t\t\tтекКоличество         = Мин(текСтрокаРезультата.КоличествоСвободное, текСостав.Количество);\n\t\t\t\tтекКоличествоУпаковок = текКоличество;\n\t\t\tКонецЕсли;\n\n\t\t\tНовоеДействие.Количество                = текКоличество;\n\t\t\tЗадачаСоставОбъект.Количество           = текКоличество;\n\t\t\tЗадачаСоставОбъект.КоличествоУпаковок   = текКоличествоУпаковок;\n\t\t\tЗадачаСоставОбъект.УпаковкаНоменклатуры = сткДанныеЕХ.Упаковка;\n\t\t\tЗадачаСоставОбъект.КонечнаяЗона         = текСтрокаРезультата.Зона;\n\t\t\tЗадачаСоставОбъект.КонечнаяЯчейка       = текСтрокаРезультата.Ячейка;\n\t\t\tЕсли ИспользуютсяМастерКонтейнеры И ЗначениеЗаполнено(текСтрокаРезультата.МастерКонтейнер) Тогда\n\t\t\t\tЗадачаСоставОбъект.КонечныйМастерКонтейнер = текСтрокаРезультата.МастерКонтейнер;\n\t\t\tКонецЕсли;\n\t\t\tЗадачаСоставОбъект.КонечныйКонтейнер    = текСтрокаРезультата.Контейнер;\n\t\t\tЗадачаСоставОбъект.АлгоритмПланирования = текАлгоритм;\n\n\t\t\t// Подготовим таблицу движений\n\t\t\tусПроведениеДокумента.ДобавитьПланРасходТовара(сткТаблицПроведения, НовоеДействие.Дата, ЗадачаСоставОбъект.НачальнаяЯчейка, ЗадачаСоставОбъект.НачальныйКонтейнер, КлючАналитики, текКоличество);\n\t\t\tусПроведениеДокумента.ДобавитьПланПриходТовара(сткТаблицПроведения, НовоеДействие.Дата, текСтрокаРезультата.Ячейка, текСтрокаРезультата.Контейнер, КлючАналитики, текКоличество, ЗадачаСоставОбъект.Организация);\n\n\t\t\tТекстОшибки = \"\";\n\t\t\tПланированиеУспешно = усПроведениеДокумента.ЗаписатьДействиеПоПеремещениюТовара(сткТаблицПроведения, ЗадачаСоставОбъект, НовоеДействие,, ТекстОшибки);\n\t\t\tЕсли ПланированиеУспешно Тогда\n\t\t\t\tЕсли НЕ текСтрокаРезультата.КонтейнерСТоваром Тогда\n\t\t\t\t\tсоотЗон.Вставить(текСтрокаРезультата.Зона, текКоличествоНовыхКонтейнеров - 1);\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tЕсли ЗадачаОбъект <> Неопределено И Не ЗадачаОбъект.ЕстьПодчиненныеЗадачи Тогда\n\t\t\t\t\tЗадачаОбъект.ЕстьПодчиненныеЗадачи = Истина;\n\t\t\t\t\tЗадачаОбъект.Записать(РежимЗаписиДокумента.Запись);\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\t\tТекстЛога = НСтр(\"ru='Спланировано единиц в количестве [##Количество##]. Создана задача %1';\n\t\t\t\t\t\t|en='Planned units in quantity [##Количество##]. Task created %1'\");\n\t\t\t\t\tТекстЛога = СтрЗаменить(ТекстЛога, \"[##Количество##]\", текКоличество);\n\t\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(ТекстЛога, Истина);\n\t\t\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, ЗадачаСоставОбъект.Ссылка, Строка(ЗадачаСоставОбъект.Ссылка));\n\t\t\t\t\tусЛогированиеПроцессов.ДобавитьНастройкуРезультата(сткАнализа, 1);\n\t\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tСозданныеЗадачи.Добавить(ЗадачаСоставОбъект.Ссылка);\n\n\t\t\t\tтекСостав.Количество = текСостав.Количество - текКоличество;\n\n\t\t\t\tЕсли текСостав.Количество = 0 Тогда\n\t\t\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\t\t\tусЛогированиеПроцессов.ИзменитьУровень(Логи, -1);\n\t\t\t\t\tКонецЕсли;\n\t\t\t\t\tПрервать;\n\n\t\t\t\tИначеЕсли НомерСтроки < Результат.Количество() Тогда\n\t\t\t\t\tЗадачаСоставОбъект = СоздатьРазмещениеТовара(ДокументОснование, текСостав, ПлановоеВремя, ТипЗадачи, ЗадачаОбъект);\n\t\t\t\t\tНовоеДействие      = усПроведениеДокумента.ПолучитьНовоеДействиеПоПеремещениюТовара(ЗадачаСоставОбъект, сткТаблицПроведения);\n\t\t\t\tКонецЕсли;\n\t\t\tИначе\n\t\t\t\tЕсли Логи <> Неопределено И ЗначениеЗаполнено(ТекстОшибки) Тогда\n\t\t\t\t\tОбщегоНазначения.СообщитьПользователю(ТекстОшибки);\n\t\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(ТекстОшибки,,, Истина);\n\t\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tЗадачаСоставОбъект.Количество = 0;\n\t\t\tКонецЕсли;\n\n\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\tусЛогированиеПроцессов.ИзменитьУровень(Логи, -1);\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\n\t\tЕсли ЗадачаСоставОбъект.Количество = 0 Тогда\n\t\t\tЗадачаСоставОбъект.Статус = Перечисления.усСтатусыЗадач.Отменена;\n\t\t\tЗадачаСоставОбъект.АлгоритмПланирования = Неопределено;\n\t\t\tЗадачаСоставОбъект.Записать(РежимЗаписиДокумента.Запись);\n\t\tКонецЕсли;\n\t\t\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tусЛогированиеПроцессов.ИзменитьУровень(Логи, -1);\n\t\tКонецЕсли;\n\n\tИначеЕсли Логи <> Неопределено Тогда\n\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Не найдено подходящих контейнеров';\n\t\t\t\t|en='No suitable containers found'\"));\n\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\tКонецЕсли;\n\t\n\tЕсли Логи <> Неопределено Тогда\n\t\tусЛогированиеПроцессов.ИзменитьУровень(Логи, -1);\t\n\tКонецЕсли;\n\n\tВозврат ПланированиеУспешно;\n\nКонецФункции\n\n&ИзменениеИКонтроль(\"РазместитьВесьКонтейнерЦеликом\")\nФункция Бюро1440_РазместитьВесьКонтейнерЦеликом(Алгоритм, Приемка, текСостав, ЗадачаОбъект, Комментировать, ДопланироватьЗадачу, ИсключаемыеЯчейки)\n\n\tЕсли ТипЗнч(ДокументОснование) = Тип(\"ДокументСсылка.усПриемка\") \n\t\tИ Алгоритм.ТипАлгоритмаРазмещения = Перечисления.усТипыАлгоритмовРазмещения.КроссДокинг Тогда\n\t\tВозврат КроссДокинг(Алгоритм, ДокументОснование, текСостав, ЗадачаОбъект, Логи, ДопланироватьЗадачу);\n\tКонецЕсли;\n\n\tПланированиеУспешно = Ложь;\n\n\tтекАлгоритм = Алгоритм;\n\n\tЕсли Алгоритм.ВариантРазмещенияКонтейнера = Перечисления.усВариантыРазмещенияКонтейнеров.РазмещениеКонтейнераПоСоставуОстатокЦеликом Тогда\n\t\t// размещение остатка целиком\n\t\tЕсли ЗначениеЗаполнено(Алгоритм.АлгоритмРазмещенияОстатка) Тогда\n\t\t\tтекАлгоритм = Алгоритм.АлгоритмРазмещенияОстатка;\n\t\tКонецЕсли;\n\tКонецЕсли;\n\t\n\tРезультат = ПолучитьРезультатЗапросаРазмещенияЦеликом(текАлгоритм, текСостав, Логи);\n\t#Вставка  \n\t// ++ Ситек Булдаков 09.01.24\n\tЕсли Результат <> Неопределено И текАлгоритм.Бюро1440_РазмещатьПоПоклажедателю Тогда\n\t\tУстановитьПривилегированныйРежим(Истина);\n\t\tНеПодходящиеСтрокиПоПоклажедателю\t= Новый Массив;\n\t\tДля каждого СтрокаРезультата Из Результат Цикл\n\t\t\tЕсли СтрокаРезультата.Зона.Склад <> текСостав.ПартияНоменклатуры.Поклажедатель Тогда\n\t\t\t\tНеПодходящиеСтрокиПоПоклажедателю.Добавить(СтрокаРезультата);\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\t\t\n\t\tДля каждого СтрокаРезультата Из НеПодходящиеСтрокиПоПоклажедателю Цикл\n\t\t\tРезультат.Удалить(СтрокаРезультата);\n\t\tКонецЦикла;\n\t\tУстановитьПривилегированныйРежим(Ложь);\n\tКонецЕсли;\n\t// -- Ситек Булдаков 09.01.24\n\t#КонецВставки\n\n\tЕсли Результат = Неопределено Тогда\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Не найдено подходящих ячеек';\n\t\t\t\t|en='Acceptable storage bins are not found'\"), Истина);\n\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\tКонецЕсли;\n\t\tВозврат Ложь;\n\tКонецЕсли;\n\n\tЕсли Результат.Количество() Тогда\n\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Найдены подходящие ячейки. %1';\n\t\t\t\t|en='Suitable storage bins have been found. %1'\"));\n\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, Результат, НСтр(\"ru='Таблица ячеек';\n\t\t\t\t|en='Storage bins table'\"));\n\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, 1);\n\t\tКонецЕсли;\n\n\t\t// Подготовим данные для проведения\n\t\tсткРазмерыКонтейнера     = усУправлениеСкладом.ПолучитьРазмерКонтейнера(ЗадачаОбъект.Контейнер);\n\t\tсткДанныеНачальнойЯчейки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(текСостав.Ячейка, Новый Структура(\"БлокЯчеек, ТипЗоны, НеКонтролироватьВместимость, НеКонтролироватьГрузоподъемность\", \"БлокЯчеек\", \"Зона.ТипЗоны\", \"ТипЯчейки.НеКонтролироватьВместимость\", \"ТипЯчейки.НеКонтролироватьГрузоподъемность\"));\n\t\tсткТаблицПроведения      = Новый Структура;\n\t\tНовоеДействие            = усПроведениеДокумента.ПолучитьНовоеДействиеПоПеремещениюКонтейнера(ЗадачаОбъект, сткТаблицПроведения);\n\t\tИспользуютсяМастерКонтейнеры = усСервисныеФункцииВызовСервера.ИспользуютсяМастерКонтейнеры();\n\t\t\n\t\tДля Каждого текСтрокаРезультата Из Результат Цикл\n\n\t\t\tЕсли ИсключаемыеЯчейки <> Неопределено И ИсключаемыеЯчейки.Найти(текСтрокаРезультата.Ячейка) <> Неопределено Тогда\n\t\t\t\tПродолжить;\n\t\t\tКонецЕсли;\n\n\t\t\tДля Каждого текТаблица Из сткТаблицПроведения Цикл\n\t\t\t\tтекТаблица.Значение.Очистить();\n\t\t\tКонецЦикла;\n\n\t\t\tЗадачаОбъект.КонечнаяЗона   \t  = текСтрокаРезультата.Зона;\n\t\t\tЗадачаОбъект.КонечнаяЯчейка \t  = текСтрокаРезультата.Ячейка;\n\t\t\tЗадачаОбъект.АлгоритмПланирования = текАлгоритм;\n\t\t\tЕсли ИспользуютсяМастерКонтейнеры И ЗначениеЗаполнено(текСтрокаРезультата.МастерКонтейнер) Тогда\n\t\t\t\tЗадачаОбъект.КонечныйМастерКонтейнер = текСтрокаРезультата.МастерКонтейнер;\n\t\t\tКонецЕсли;\n\t\t\t\n\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Планирование в ячейку %1';\n\t\t\t\t\t|en='Scheduling to the %1 storage bin'\"));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, текСтрокаРезультата.Ячейка, Строка(текСтрокаРезультата.Ячейка));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, 1);\n\t\t\tКонецЕсли;\n\n\t\t\t// Подготовим таблицу движений\n\t\t\tЕсли Не ДопланироватьЗадачу Тогда\n\t\t\t\tусПроведениеДокумента.ДобавитьПланРасходКонтейнера(сткТаблицПроведения, НовоеДействие.Дата, ЗадачаОбъект.ТекущаяЯчейка, ЗадачаОбъект.ТекущийМастерКонтейнер, ЗадачаОбъект.Контейнер, сткДанныеНачальнойЯчейки, сткРазмерыКонтейнера);\n\t\t\tКонецЕсли;\n\t\t\tЕсли ИспользуютсяМастерКонтейнеры И Не текСостав.ЭтоМастерКонтейнер Тогда\n\t\t\t\tусПроведениеДокумента.ДобавитьПланПриходКонтейнера(сткТаблицПроведения, НовоеДействие.Дата, текСтрокаРезультата.Ячейка, текСтрокаРезультата.МастерКонтейнер, ЗадачаОбъект.Контейнер,, сткРазмерыКонтейнера);\n\t\t\tИначе\n\t\t\t\tусПроведениеДокумента.ДобавитьПланПриходКонтейнера(сткТаблицПроведения, НовоеДействие.Дата, текСтрокаРезультата.Ячейка, Неопределено, ЗадачаОбъект.Контейнер,, сткРазмерыКонтейнера);\n\t\t\tКонецЕсли;\n\t\t\t\n\t\t\tТекстОшибки = \"\";\n\t\t\tПланированиеУспешно = усПроведениеДокумента.ЗаписатьДействиеПоПеремещениюКонтейнера(сткТаблицПроведения, ЗадачаОбъект, НовоеДействие,, ТекстОшибки);\n\t\t\tЕсли ПланированиеУспешно Тогда\n\t\t\t    Если Логи <> Неопределено Тогда\n\t\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Планирование в ячейку %1 успешно завершено';\n\t\t\t\t\t\t|en='Scheduling to the %1 storage bin completed successfully.'\"));\n\t\t\t\t\tусЛогированиеПроцессов.ДобавитьПараметрВСтроку(сткАнализа, текСтрокаРезультата.Ячейка, Строка(текСтрокаРезультата.Ячейка));\n\t\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, -1);\n\t\t\t\tКонецЕсли;\n\t\t\t\tПрервать;\n\t\t\tИначе\n\t\t\t\tЕсли Логи <> Неопределено И ЗначениеЗаполнено(ТекстОшибки) Тогда\n\t\t\t\t\tОбщегоНазначения.СообщитьПользователю(ТекстОшибки);\n\t\t\t\t\tТекстЛога = НСтр(\"ru='Произошла ошибка: [##Ошибка##]';\n\t\t\t\t\t\t|en='Error occurred: [##Ошибка##]'\");\n\t\t\t\t\tТекстЛога = СтрЗаменить(ТекстЛога, \"[##Ошибка##]\", ТекстОшибки);\n\t\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(ТекстЛога,,, Истина);\n\t\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа, -1);\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\n\t\tЕсли НЕ ПланированиеУспешно Тогда\n\t\t\tЗадачаОбъект.КонечнаяЗона   = Справочники.усЗоны.ПустаяСсылка();\n\t\t\tЗадачаОбъект.КонечнаяЯчейка = Справочники.усЯчейки.ПустаяСсылка();\n\t\t\tЕсли ИспользуютсяМастерКонтейнеры Тогда\n\t\t\t\tЗадачаОбъект.КонечныйМастерКонтейнер = Справочники.усКонтейнеры.ПустаяСсылка();\n\t\t\tКонецЕсли;\n\t\t\tЗадачаОбъект.Статус \t\t= Перечисления.усСтатусыЗадач.Отменена;\n\t\t\tЗадачаОбъект.АлгоритмПланирования = Неопределено;\n\t\t\tЗадачаОбъект.Записать(РежимЗаписиДокумента.Запись);\n\n\t\t\tЕсли Логи <> Неопределено Тогда\n\t\t\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Не удалось спланировать ни в одну из найденных ячеек';\n\t\t\t\t\t|en='Failed to schedule to any of the found storage bins'\"));\n\t\t\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\n\t\t\n\t\tЕсли Логи <> Неопределено Тогда\n\t\t\tусЛогированиеПроцессов.ИзменитьУровень(Логи, -1);\n\t\tКонецЕсли;\n\n\tИначеЕсли Логи <> Неопределено Тогда\n\t\tсткАнализа = усЛогированиеПроцессов.СоздатьСтруктуруАнализа(НСтр(\"ru='Не найдено подходящих ячеек';\n\t\t\t\t|en='Acceptable storage bins are not found'\"), Истина);\n\t\tусЛогированиеПроцессов.ДобавитьСтрокуАнализаСтруктурой(Логи, сткАнализа);\n\tКонецЕсли;\n\n\tВозврат ПланированиеУспешно;\n\nКонецФункции",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\усПроведениеДокумента\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\усПроведениеДокумента\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/130ca9f6aac8041f477aaef53b145c066ba03c90/_bsl%5CResources%5C726598511%5CCommonModule%5C%D1%83%D1%81%D0%9F%D1%80%D0%BE%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%D0%94%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CCommonModule.obj.bsl",
            "size": 68213,
            "truncated": false,
            "content": "&ИзменениеИКонтроль(\"СписатьЗаписатьОбъектыЦМТПриПересчете\")\nПроцедура Бюро1440_СписатьЗаписатьОбъектыЦМТПриПересчете(сткТаблицПроведения, Задача, ТаблицаОбъектыЦМТ, Дата, ЗафиксироватьРасхождения, СписанныеКонтейнеры)\n\n\tВестиУчетОбъектовЦМТ = ПолучитьФункциональнуюОпцию(\"усУчетТоваровПоКодамЦМТ\");\n\n\tЕсли НЕ ВестиУчетОбъектовЦМТ ИЛИ НЕ ЗначениеЗаполнено(ТаблицаОбъектыЦМТ) Тогда\n\t\tВозврат;\n\tКонецЕсли;\n\n\tЗона = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Задача.Ссылка, \"Ячейка.Зона\");\n\tЕсли НЕ ЗначениеЗаполнено(Зона) Тогда\n\t\tЗона = Справочники.усЗоны.ПустаяСсылка();\n\tКонецЕсли;\n\t\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст =\n\t\"ВЫБРАТЬ\n\t|\tВТ.ШтрихкодКИЗ КАК ШтрихкодКИЗ,\n\t|\tВТ.ШтрихкодТранспортнойУпаковки КАК ШтрихкодТранспортнойУпаковки,\n\t|\tВТ.Контейнер КАК Контейнер,\n\t|\tВТ.Объект КАК Объект,\n\t|\tВТ.ТранспортнаяУпаковка КАК ТранспортнаяУпаковка,\n\t|\tВТ.Номенклатура КАК Номенклатура,\n\t|\tВТ.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tВТ.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tВТ.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tВТ.КоличествоПлан КАК КоличествоПлан,\n\t|\tВТ.КоличествоФакт КАК КоличествоФакт,\n\t|\tВТ.Организация КАК Организация\n\t|ПОМЕСТИТЬ ВТИсходныеКодыЦМТ\n\t|ИЗ\n\t|\t&ТаблицаКодыЦМТ КАК ВТ\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|\tОбъект\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусСтатусыОбъектовЦМТСрезПоследних.Объект КАК Объект,\n\t|\tусСтатусыОбъектовЦМТСрезПоследних.Статус КАК Статус\n\t|ПОМЕСТИТЬ втСтатусыОбъектовЦМТ\n\t|ИЗ\n\t|\tРегистрСведений.усСтатусыОбъектовЦМТ.СрезПоследних(\n\t|\t\t\t\t,\n\t|\t\t\t\tОбъект В\n\t|\t\t\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\t\t\tВТ.Объект\n\t|\t\t\t\t\tИЗ\n\t|\t\t\t\t\t\tВТИсходныеКодыЦМТ КАК ВТ)) КАК усСтатусыОбъектовЦМТСрезПоследних\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tВТИсходныеКодыЦМТ.Контейнер КАК Контейнер,\n\t|\tВТИсходныеКодыЦМТ.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tВТИсходныеКодыЦМТ.ТранспортнаяУпаковка КАК ТранспортнаяУпаковка,\n\t|\tВТИсходныеКодыЦМТ.Объект КАК Объект,\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоПлан) КАК КоличествоПлан,\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоФакт) КАК КоличествоФакт\n\t|ИЗ\n\t|\tВТИсходныеКодыЦМТ КАК ВТИсходныеКодыЦМТ\n\t|ГДЕ\n\t|\tВТИсходныеКодыЦМТ.ТранспортнаяУпаковка <> НЕОПРЕДЕЛЕНО\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|\tВТИсходныеКодыЦМТ.ТранспортнаяУпаковка,\n\t|\tВТИсходныеКодыЦМТ.Объект,\n\t|\tВТИсходныеКодыЦМТ.УпаковкаНоменклатуры,\n\t|\tВТИсходныеКодыЦМТ.Контейнер\n\t|\n\t|ИМЕЮЩИЕ\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоПлан) > 0 И\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоФакт) = 0\n\t|ИТОГИ ПО\n\t|\tТранспортнаяУпаковка\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tВТИсходныеКодыЦМТ.Контейнер КАК Контейнер,\n\t|\tВТИсходныеКодыЦМТ.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tВТИсходныеКодыЦМТ.Объект КАК Объект,\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоПлан) КАК КоличествоПлан,\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоФакт) КАК КоличествоФакт\n\t|ИЗ\n\t|\tВТИсходныеКодыЦМТ КАК ВТИсходныеКодыЦМТ\n\t|ГДЕ\n\t|\tВТИсходныеКодыЦМТ.ТранспортнаяУпаковка = НЕОПРЕДЕЛЕНО\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|\tВТИсходныеКодыЦМТ.Объект,\n\t|\tВТИсходныеКодыЦМТ.Контейнер,\n\t|\tВТИсходныеКодыЦМТ.УпаковкаНоменклатуры\n\t|\n\t|ИМЕЮЩИЕ\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоПлан) > 0 И\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоФакт) = 0\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tВТИсходныеКодыЦМТ.Контейнер КАК Контейнер,\n\t|\tВТИсходныеКодыЦМТ.ТранспортнаяУпаковка КАК ТранспортнаяУпаковка,\n\t|\tВТИсходныеКодыЦМТ.Объект КАК Объект,\n\t|\tВТИсходныеКодыЦМТ.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоПлан) КАК КоличествоПлан,\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоФакт) КАК КоличествоФакт\n\t|ИЗ\n\t|\tВТИсходныеКодыЦМТ КАК ВТИсходныеКодыЦМТ\n\t|ГДЕ\n\t|\tВТИсходныеКодыЦМТ.ТранспортнаяУпаковка <> НЕОПРЕДЕЛЕНО\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|\tВТИсходныеКодыЦМТ.ТранспортнаяУпаковка,\n\t|\tВТИсходныеКодыЦМТ.Объект,\n\t|\tВТИсходныеКодыЦМТ.УпаковкаНоменклатуры,\n\t|\tВТИсходныеКодыЦМТ.Контейнер\n\t|\n\t|ИМЕЮЩИЕ\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоПлан) = 0 И\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоФакт) > 0\n\t|ИТОГИ ПО\n\t|\tТранспортнаяУпаковка\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tВТИсходныеКодыЦМТ.Контейнер КАК Контейнер,\n\t|\tВТИсходныеКодыЦМТ.Объект КАК Объект,\n\t|\tВТИсходныеКодыЦМТ.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоПлан) КАК КоличествоПлан,\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоФакт) КАК КоличествоФакт\n\t|ИЗ\n\t|\tВТИсходныеКодыЦМТ КАК ВТИсходныеКодыЦМТ\n\t|ГДЕ\n\t|\tВТИсходныеКодыЦМТ.ТранспортнаяУпаковка = НЕОПРЕДЕЛЕНО\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|\tВТИсходныеКодыЦМТ.Контейнер,\n\t|\tВТИсходныеКодыЦМТ.Объект,\n\t|\tВТИсходныеКодыЦМТ.УпаковкаНоменклатуры\n\t|\n\t|ИМЕЮЩИЕ\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоПлан) = 0 И\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоФакт) > 0\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tВТИсходныеКодыЦМТ.Контейнер КАК Контейнер,\n\t|\tВТИсходныеКодыЦМТ.ТранспортнаяУпаковка КАК ТранспортнаяУпаковка,\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоПлан) КАК КоличествоПлан,\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоФакт) КАК КоличествоФакт\n\t|ИЗ\n\t|\tВТИсходныеКодыЦМТ КАК ВТИсходныеКодыЦМТ\n\t|ГДЕ\n\t|\tВТИсходныеКодыЦМТ.ТранспортнаяУпаковка <> НЕОПРЕДЕЛЕНО\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|\tВТИсходныеКодыЦМТ.Контейнер,\n\t|\tВТИсходныеКодыЦМТ.ТранспортнаяУпаковка\n\t|\n\t|ИМЕЮЩИЕ\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоПлан) > 0 И\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоФакт) = 0\n\t|ИТОГИ ПО\n\t|\tКонтейнер\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tВТИсходныеКодыЦМТ.Контейнер КАК Контейнер,\n\t|\tВТИсходныеКодыЦМТ.ТранспортнаяУпаковка КАК ТранспортнаяУпаковка,\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоПлан) КАК КоличествоПлан,\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоФакт) КАК КоличествоФакт\n\t|ИЗ\n\t|\tВТИсходныеКодыЦМТ КАК ВТИсходныеКодыЦМТ\n\t|ГДЕ\n\t|\tВТИсходныеКодыЦМТ.ТранспортнаяУпаковка <> НЕОПРЕДЕЛЕНО\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|\tВТИсходныеКодыЦМТ.Контейнер,\n\t|\tВТИсходныеКодыЦМТ.ТранспортнаяУпаковка\n\t|\n\t|ИМЕЮЩИЕ\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоПлан) = 0 И\n\t|\tСУММА(ВТИсходныеКодыЦМТ.КоличествоФакт) > 0\n\t|ИТОГИ ПО\n\t|\tКонтейнер\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tВТИсходныеКодыЦМТ.Контейнер КАК Контейнер,\n\t|\tВТИсходныеКодыЦМТ.Объект КАК Объект,\n\t|\tВТИсходныеКодыЦМТ.ТранспортнаяУпаковка КАК ТранспортнаяУпаковка,\n\t|\tВТИсходныеКодыЦМТ.Номенклатура КАК Номенклатура,\n\t|\tВТИсходныеКодыЦМТ.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tВТИсходныеКодыЦМТ.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tВТИсходныеКодыЦМТ.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tЕСТЬNULL(втСтатусыОбъектовЦМТ.Статус, ЗНАЧЕНИЕ(Справочник.усСтатусыНоменклатуры.Кондиция)) КАК ТекущийСтатусНоменклатуры,\n\t|\tВТИсходныеКодыЦМТ.Организация КАК Организация,\n\t|\tВТИсходныеКодыЦМТ.КоличествоПлан КАК КоличествоПлан,\n\t|\tВТИсходныеКодыЦМТ.КоличествоФакт КАК КоличествоФакт\n\t|ИЗ\n\t|\tВТИсходныеКодыЦМТ КАК ВТИсходныеКодыЦМТ\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ втСтатусыОбъектовЦМТ КАК втСтатусыОбъектовЦМТ\n\t|\t\tПО ВТИсходныеКодыЦМТ.Объект = втСтатусыОбъектовЦМТ.Объект\n\t|ГДЕ\n\t|\tВТИсходныеКодыЦМТ.КоличествоПлан = 0\n\t|\tИ ВТИсходныеКодыЦМТ.КоличествоФакт > 0\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tВТИсходныеКодыЦМТ.Контейнер КАК Контейнер,\n\t|\tВТИсходныеКодыЦМТ.Объект КАК Объект,\n\t|\tВТИсходныеКодыЦМТ.ТранспортнаяУпаковка КАК ТранспортнаяУпаковка,\n\t|\tВТИсходныеКодыЦМТ.Номенклатура КАК Номенклатура,\n\t|\tВТИсходныеКодыЦМТ.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tВТИсходныеКодыЦМТ.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tВТИсходныеКодыЦМТ.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tВТИсходныеКодыЦМТ.Организация КАК Организация,\n\t|\tВТИсходныеКодыЦМТ.КоличествоПлан КАК КоличествоПлан,\n\t|\tВТИсходныеКодыЦМТ.КоличествоФакт КАК КоличествоФакт\n\t|ИЗ\n\t|\tВТИсходныеКодыЦМТ КАК ВТИсходныеКодыЦМТ\n\t|ГДЕ\n\t|\tВТИсходныеКодыЦМТ.КоличествоПлан > 0\n\t|\tИ ВТИсходныеКодыЦМТ.КоличествоФакт = 0\";\n\n\tЗапрос.УстановитьПараметр(\"ТаблицаКодыЦМТ\", ТаблицаОбъектыЦМТ);\n\tРезультатЗапроса = Запрос.ВыполнитьПакет();\n\n\t// 2 - объекты выбывающие с ТУ\n\t// 3 - объекты выбывающие без ТУ\n\t// 4 - объекты прибывающие с ТУ\n\t// 5 - объекты прибывающие без ТУ\n\t// 6 - ТУ выбывающие из контейнера\n\t// 7 - ТУ прибывающие в контейнер\n\t// 8 - записанные объекты (излишки)\n\t// 9 - списанные объекты (недостачи)\n\n\t// 2 - Списание объектов из транспортных упаковок\n\tтбзОбъектыСписанныеИзТУ = Новый ТаблицаЗначений;\n\tтбзОбъектыСписанныеИзТУ.Колонки.Добавить(\"Объект\");\n\tтбзОбъектыСписанныеИзТУ.Колонки.Добавить(\"ТранспортнаяУпаковка\");\n\n\tВыборкаТУСписать = РезультатЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);\n\tПока ВыборкаТУСписать.Следующий() Цикл\n\t\tВыборкаТУОбъектыСписать = ВыборкаТУСписать.Выбрать();\n\n\t\tПока ВыборкаТУОбъектыСписать.Следующий() Цикл\n\t\t\t// Контроль наличия объекта ЦМТ в составе транспортной упаковки\n\t\t\tНовыйКонтроль = сткТаблицПроведения.усКонтрольСоставаТранспортныхУпаковокЦМТ.Добавить();\n\t\t\tНовыйКонтроль.Объект \t\t\t   = ВыборкаТУОбъектыСписать.Объект;\n\t\t\tНовыйКонтроль.ТранспортнаяУпаковка = ВыборкаТУОбъектыСписать.ТранспортнаяУпаковка;\n\n\t\t\t// Списание объекта из состава транспортной упаковки\n\t\t\tНовоеДвижение = сткТаблицПроведения.усСоставТранспортныхУпаковокЦМТ.Добавить();\n\t\t\tНовоеДвижение.ВидДвижения\t\t   \t= ВидДвиженияНакопления.Расход;\n\t\t\tНовоеДвижение.Период\t\t\t   \t= Дата;\n\t\t\tНовоеДвижение.Активность\t\t    = Истина;\n\t\t\tНовоеДвижение.ТранспортнаяУпаковка \t= ВыборкаТУОбъектыСписать.ТранспортнаяУпаковка;\n\t\t\tНовоеДвижение.Объект        \t   \t= ВыборкаТУОбъектыСписать.Объект;\n\t\t\tНовоеДвижение.Количество       \t   \t= 1;\n\n\t\t\t// Списанный состав объектов из ТУ\n\t\t\tНоваяСтрока = тбзОбъектыСписанныеИзТУ.Добавить();\n\t\t\tНоваяСтрока.Объект = ВыборкаТУОбъектыСписать.Объект;\n\t\t\tНоваяСтрока.ТранспортнаяУпаковка = ВыборкаТУОбъектыСписать.ТранспортнаяУпаковка;\n\t\tКонецЦикла;\n\tКонецЦикла;\n\n\t// 3 - Списание объектов без транспортных упаковок\n\tВыборкаОбъектыСписать = РезультатЗапроса[3].Выбрать();\n\tПока ВыборкаОбъектыСписать.Следующий() Цикл\n\n\t\t// Контроль наличия объекта ЦМТ, без транспортной упаковки, в контейнере\n\t\tНовыйКонтроль = сткТаблицПроведения.усКонтрольПоложенияОбъектовЦМТ.Добавить();\n\t\tНовыйКонтроль.Объект \t= ВыборкаОбъектыСписать.Объект;\n\t\tНовыйКонтроль.Контейнер = ВыборкаОбъектыСписать.Контейнер;\n\n\t\t// Выбытие объекта без упаковки из контейнера\n\t\tНовоеДвижение = сткТаблицПроведения.усПоложениеОбъектовЦМТ.Добавить();\n\t\tНовоеДвижение.ВидДвижения\t\t  \t= ВидДвиженияНакопления.Расход;\n\t\tНовоеДвижение.Период\t\t\t   \t= Дата;\n\t\tНовоеДвижение.Активность\t\t    = Истина;\n\t    НовоеДвижение.Контейнер        \t   \t= ВыборкаОбъектыСписать.Контейнер;\n\t\tНовоеДвижение.Объект \t\t\t   \t= ВыборкаОбъектыСписать.Объект;\n\t\tНовоеДвижение.Количество       \t   \t= 1;\n\tКонецЦикла;\n\n\t// 4 - Запись объектов в транспортные упаковки\n\tВыборкаТУЗаписать = РезультатЗапроса[4].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);\n\tПока ВыборкаТУЗаписать.Следующий() Цикл\n\n\t\tЗаписываемаяТранспортнаяУпаковка = ВыборкаТУЗаписать.ТранспортнаяУпаковка;\n\n\t\tВыборкаТУОбъектыЗаписать = ВыборкаТУЗаписать.Выбрать();\n\t\tПока ВыборкаТУОбъектыЗаписать.Следующий() Цикл\n\n\t\t\tЗаполняемыйКонтейнер = ВыборкаТУОбъектыЗаписать.Контейнер;\n\t\t\tЗаписываемыйОбъект \t = ВыборкаТУОбъектыЗаписать.Объект;\n\n\t\t\t// Приход объекта ЦМТ в транспортную упаковку\n\t\t\tНовоеДвижение = сткТаблицПроведения.усСоставТранспортныхУпаковокЦМТ.Добавить();\n\t\t\tНовоеДвижение.ВидДвижения \t\t\t= ВидДвиженияНакопления.Приход;\n\t\t\tНовоеДвижение.Период           \t\t= Дата;\n\t\t\tНовоеДвижение.Активность       \t\t= Истина;\n\t\t\tНовоеДвижение.ТранспортнаяУпаковка \t= ЗаписываемаяТранспортнаяУпаковка;\n\t\t\tНовоеДвижение.Объект        \t   \t= ЗаписываемыйОбъект;\n\t\t\tНовоеДвижение.Количество       \t   \t= 1;\n\n\t\t\tТекущееРасположениеОбъектаЦМТ = усЦифроваяМаркировкаТоваровСервер.ПолучитьПоложениеОбъектаЦМТ(ЗаписываемыйОбъект);\n\t\t\tНайденнаяЯчейка\t\t\t\t  = ТекущееРасположениеОбъектаЦМТ.Ячейка;\n\t\t\tНайденныйКонтейнер \t\t\t  = ТекущееРасположениеОбъектаЦМТ.Контейнер;\n\t\t\tНайденнаяТранспортнаяУпаковка = ТекущееРасположениеОбъектаЦМТ.ТранспортнаяУпаковкаЦМТ;\n\n\t\t\t#Удаление \n\t\t\tЕсли ЗначениеЗаполнено(НайденныйКонтейнер) Тогда\n\t\t\t#КонецУдаления\n\t\t\t#Вставка  \n\t\t\t// ++ Ситек Булдаков 21.03.24 \n\t\t\tЭтоНедостача\t= Ложь;\n\t\t\tЕсли ЗначениеЗаполнено(Задача.Бюро1440_ЯчейкаНедостач) Тогда\n\t\t\t\tКонтейнерНедостач\t= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Задача.Бюро1440_ЯчейкаНедостач, \"Контейнер\");\n\t\t\t\tЕсли КонтейнерНедостач = ЗаполняемыйКонтейнер Тогда\n\t\t\t\t\tЭтоНедостача\t= Истина;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\t\tЕсли ЗначениеЗаполнено(НайденныйКонтейнер) И НЕ ЭтоНедостача Тогда\n\t\t\t// -- Ситек Булдаков 21.03.24\n\t\t\t#КонецВставки\n\t\t\t\t// Объект ЦМТ числится в другом контейнере на складе. Спишем его\n\n\t\t\t\tРеквизитыОбъектаЦМТ = усЦифроваяМаркировкаТоваровСервер.ПолучитьРеквизитыОбъектаЦМТ(ЗаписываемыйОбъект, Дата);\n\t\t\t\tКлючАналитики = усУправлениеСкладом.ЗначениеКлючаАналитики(РеквизитыОбъектаЦМТ.Номенклатура, РеквизитыОбъектаЦМТ.СтатусНоменклатуры, РеквизитыОбъектаЦМТ.ПартияНоменклатуры, РеквизитыОбъектаЦМТ.УпаковкаНоменклатуры);\n\t\t\t\t\n\t\t\t\tКонтейнерСписанВРамкахЗадачи = СписанныеКонтейнеры.Найти(НайденныйКонтейнер) <> Неопределено;\n\t\t\t\tЕсли НайденныйКонтейнер <> ЗаполняемыйКонтейнер Тогда\n\t\t\t\t\tЕсли (Задача.Ячейка <> НайденнаяЯчейка И Задача.ТипЗадачи = Перечисления.усТипыЗадачПересчета.ИнвентаризацияКонтейнеров) \n\t\t\t\t\t\t ИЛИ (Не КонтейнерСписанВРамкахЗадачи И Задача.ТипЗадачи = Перечисления.усТипыЗадачПересчета.ИнвентаризацияСоставаКонтейнеров)\n\t\t\t\t\t\t ИЛИ (Задача.ТипЗадачи <> Перечисления.усТипыЗадачПересчета.ИнвентаризацияКонтейнеров\n\t\t\t\t\t\t \t\tИ Задача.ТипЗадачи <> Перечисления.усТипыЗадачПересчета.ИнвентаризацияСоставаКонтейнеров) Тогда\n\t\t\t\t\t\n\t\t\t\t\t\t// Движения по регистру остатки товаров\n\t\t\t\t\t\t// Расход номенклатуры из найденного контейнера\n\t\t\t\t\t\tНовоеДвижение = сткТаблицПроведения.усОстаткиТоваров.Добавить();\n\t\t\t\t\t\tНовоеДвижение.ВидДвижения  \t   \t   = ВидДвиженияНакопления.Расход;\n\t\t\t\t\t\tНовоеДвижение.Период        \t   = Дата;\n\t\t\t\t\t\tНовоеДвижение.Активность\t\t   = Истина;\n\t\t\t\t\t\tНовоеДвижение.Контейнер     \t   = НайденныйКонтейнер;\n\t\t\t\t\t\tНовоеДвижение.КлючАналитикиУчетаНоменклатуры = КлючАналитики;\n\t\t\t\t\t\tНовоеДвижение.Организация\t\t   = РеквизитыОбъектаЦМТ.Организация;\n\t\t\t\t\t\tНовоеДвижение.Количество    \t   = 1;\n\t\n\t\t\t\t\t\tЕсли ПолучитьФункциональнуюОпцию(\"усИспользуетсяУчетТовараВУпаковках\") Тогда\n\t\t\t\t\t\t\tНовоеДвижение = сткТаблицПроведения.усОстаткиТоваровВУпаковках.Добавить();\n\t\t\t\t\t\t\tНовоеДвижение.ВидДвижения  \t   \t   = ВидДвиженияНакопления.Расход;\n\t\t\t\t\t\t\tНовоеДвижение.Период        \t   = Дата;\n\t\t\t\t\t\t\tНовоеДвижение.Активность\t\t   = Истина;\n\t\t\t\t\t\t\tНовоеДвижение.Контейнер     \t   = НайденныйКонтейнер;\n\t\t\t\t\t\t\tНовоеДвижение.КлючАналитикиУчетаНоменклатуры = КлючАналитики;\n\t\t\t\t\t\t\tНовоеДвижение.УпаковкаНоменклатуры = ВыборкаТУОбъектыЗаписать.УпаковкаНоменклатуры;\n\t\t\t\t\t\t\tНовоеДвижение.Организация\t\t   = РеквизитыОбъектаЦМТ.Организация;\n\t\t\t\t\t\t\tНовоеДвижение.Количество    \t   = 1 / ?(ВыборкаТУОбъектыЗаписать.УпаковкаНоменклатуры.Коэффициент = 0, 1, ВыборкаТУОбъектыЗаписать.УпаковкаНоменклатуры.Коэффициент);\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\tКонецЕсли;\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tЕсли НЕ ЗначениеЗаполнено(НайденнаяТранспортнаяУпаковка) Тогда\n\t\t\t\t\t// Объект ЦМТ числится без транспортной упаковки\n\n\t\t\t\t\t// Запишем расхождения\n\t\t\t\t\tЕсли ЗафиксироватьРасхождения Тогда\n\t\t\t\t\t\tНовоеДвижение = сткТаблицПроведения.усРасхожденияОстатковОбъектовЦМТ.Добавить();\n\t\t\t\t\t\tНовоеДвижение.ВидДвижения \t\t\t= ВидДвиженияНакопления.Приход;\n\t\t\t\t\t\tНовоеДвижение.Период           \t\t= Дата;\n\t\t\t\t\t\tНовоеДвижение.Активность       \t\t= Истина;\n\t\t\t\t\t\tНовоеДвижение.КлючАналитикиУчетаНоменклатуры = КлючАналитики;\n\t\t\t\t\t\tНовоеДвижение.Объект\t\t   \t\t= ЗаписываемыйОбъект;\n\t\t\t\t\t\tНовоеДвижение.ТранспортнаяУпаковка \t= Справочники.усТранспортныеУпаковкиЦМТ.ПустаяСсылка();\n\t\t\t\t\t\tНовоеДвижение.Организация \t\t\t= РеквизитыОбъектаЦМТ.Организация;\n\t\t\t\t\t\tНовоеДвижение.Зона \t\t\t\t\t= ТекущееРасположениеОбъектаЦМТ.Зона;\n\t\t\t\t\t\tНовоеДвижение.Недостача\t\t   \t\t= 1;\n\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\tЕсли НайденныйКонтейнер <> ЗаполняемыйКонтейнер Тогда\n\t\t\t\t\t\t// Блокировка контейнера\n\t\t\t\t\t\tНайденныйКонтейнерОбъект \t\t\t\t   = НайденныйКонтейнер.ПолучитьОбъект();\n\t\t\t\t\t\tНайденныйКонтейнерОбъект.Состояние \t\t   = Перечисления.усСостоянияКонтейнеров.Заблокирован;\n\t\t\t\t\t\tНайденныйКонтейнерОбъект.ПричинаБлокировки = Справочники.усПричиныБлокировкиКонтейнеров.ДублированиеЦифровыхМарокТоваров;\n\t\t\t\t\t\tНайденныйКонтейнерОбъект.Записать();\n\n\t\t\t\t\t\tТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(\"ru='Контейнер %1 заблокирован по причине дублирования с контейнером %2 цифровой марки %3';\n\t\t\t\t\t\t\t|en='The %1 container is locked due to duplication with the %2 container of the %3 digital mark'\"),\n\t\t\t\t\t\tНайденныйКонтейнер, ЗаполняемыйКонтейнер, ЗаписываемыйОбъект);\n\n\t\t\t\t\t\tЗаписьЖурналаРегистрации(НСтр(\"ru='Блокировка контейнера';\n\t\t\t\t\t\t\t|en='Container lock'\", ОбщегоНазначения.КодОсновногоЯзыка()),\n\t\t\t\t\t\t\t\t\t\t\t\t УровеньЖурналаРегистрации.Ошибка, Задача.Метаданные(), НайденныйКонтейнер, ТекстПредупреждения);\n\t\t\t\t\tКонецЕсли;\n\n\t\t\t\tИначе\n\t\t\t\t\t// Объект ЦМТ числится в транспортной упаковке\n\t\t\t\t\tмсвСоставТекущейУпаковки = усЦифроваяМаркировкаТоваровСервер.ПолучитьСоставТранспортнойУпаковки(НайденнаяТранспортнаяУпаковка);\n\n\t\t\t\t\tЕсли НайденнаяТранспортнаяУпаковка <> ЗаписываемаяТранспортнаяУпаковка Тогда\n\n\t\t\t\t\t\t// Расход объекта ЦМТ из транспортной упаковки в найденном контейнере\n\t\t\t\t\t\tНовоеДвижение = сткТаблицПроведения.усСоставТранспортныхУпаковокЦМТ.Добавить();\n\t\t\t\t\t\tНовоеДвижение.ВидДвижения \t\t\t= ВидДвиженияНакопления.Расход;\n\t\t\t\t\t\tНовоеДвижение.Период           \t\t= Дата;\n\t\t\t\t\t\tНовоеДвижение.Активность       \t\t= Истина;\n\t\t\t\t\t\tНовоеДвижение.ТранспортнаяУпаковка \t= НайденнаяТранспортнаяУпаковка;\n\t\t\t\t\t\tНовоеДвижение.Объект        \t   \t= ЗаписываемыйОбъект;\n\t\t\t\t\t\tНовоеДвижение.Количество       \t   \t= 1;\n\n\t\t\t\t\t\t// Запишем расхождения\n\t\t\t\t\t\tЕсли ЗафиксироватьРасхождения Тогда\n\t\t\t\t\t\t\tНовоеДвижение = сткТаблицПроведения.усРасхожденияОстатковОбъектовЦМТ.Добавить();\n\t\t\t\t\t\t\tНовоеДвижение.ВидДвижения \t\t\t= ВидДвиженияНакопления.Приход;\n\t\t\t\t\t\t\tНовоеДвижение.Период           \t\t= Дата;\n\t\t\t\t\t\t\tНовоеДвижение.Активность       \t\t= Истина;\n\t\t\t\t\t\t\tНовоеДвижение.КлючАналитикиУчетаНоменклатуры = КлючАналитики;\n\t\t\t\t\t\t\tНовоеДвижение.Объект\t\t   \t\t= ЗаписываемыйОбъект;\n\t\t\t\t\t\t\tНовоеДвижение.ТранспортнаяУпаковка \t= НайденнаяТранспортнаяУпаковка;\n\t\t\t\t\t\t\tНовоеДвижение.Организация \t\t\t= РеквизитыОбъектаЦМТ.Организация;\n\t\t\t\t\t\t\tНовоеДвижение.Зона \t\t\t\t\t= ТекущееРасположениеОбъектаЦМТ.Зона;\n\t\t\t\t\t\t\tНовоеДвижение.Недостача\t\t   \t\t= 1;\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\tЕсли НайденныйКонтейнер <> ЗаполняемыйКонтейнер Тогда\n\t\t\t\t\t\t// Блокировка контейнера\n\t\t\t\t\t\tТекущееРасположениеОбъектаЦМТОбъект \t\t\t\t  = НайденныйКонтейнер.ПолучитьОбъект();\n\t\t\t\t\t\tТекущееРасположениеОбъектаЦМТОбъект.Состояние \t\t  = Перечисления.усСостоянияКонтейнеров.Заблокирован;\n\t\t\t\t\t\tТекущееРасположениеОбъектаЦМТОбъект.ПричинаБлокировки = Справочники.усПричиныБлокировкиКонтейнеров.ДублированиеЦифровыхМарокТоваров;\n\t\t\t\t\t\tТекущееРасположениеОбъектаЦМТОбъект.Записать();\n\n\t\t\t\t\t\tТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(\"ru='Контейнер %1 заблокирован по причине дублирования с контейнером %2 цифровой марки %3 в транспортной упаковка %4';\n\t\t\t\t\t\t\t|en='The %1 container is locked due to duplication with the %2 container of the %3 digital mark in the %4 transport packaging'\"),\n\t\t\t\t\t\tНайденныйКонтейнер, ЗаполняемыйКонтейнер, ЗаписываемыйОбъект);\n\n\t\t\t\t\t\tЗаписьЖурналаРегистрации(НСтр(\"ru='Блокировка контейнера';\n\t\t\t\t\t\t\t|en='Container lock'\", ОбщегоНазначения.КодОсновногоЯзыка()),\n\t\t\t\t\t\t\t\t\t\t\t\t УровеньЖурналаРегистрации.Ошибка, Задача.Метаданные(), НайденныйКонтейнер, ТекстПредупреждения);\n\t\t\t\t\tКонецЕсли;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\n\t\tКонецЦикла;\n\tКонецЦикла;\n\n\t// 5 - Запись объектов без транспортных упаковок\n\tВыборкаОбъектыЗаписать = РезультатЗапроса[5].Выбрать();\n\tПока ВыборкаОбъектыЗаписать.Следующий() Цикл\n\n\t\tЗаполняемыйКонтейнер = ВыборкаОбъектыЗаписать.Контейнер;\n\t\tЗаписываемыйОбъект = ВыборкаОбъектыЗаписать.Объект;\n\n\t\t// Запись объекта без транспортной упаковки в контейнер\n\t\tНовоеДвижение = сткТаблицПроведения.усПоложениеОбъектовЦМТ.Добавить();\n\t\tНовоеДвижение.ВидДвижения\t\t  \t= ВидДвиженияНакопления.Приход;\n\t\tНовоеДвижение.Период\t\t\t   \t= Дата;\n\t\tНовоеДвижение.Активность\t\t    = Истина;\n\t    НовоеДвижение.Контейнер        \t   \t= ЗаполняемыйКонтейнер;\n\t\tНовоеДвижение.Объект \t\t\t   \t= ВыборкаОбъектыЗаписать.Объект;\n\t\tНовоеДвижение.Количество       \t   \t= 1;\n\n\t\tТекущееРасположениеОбъектаЦМТ = усЦифроваяМаркировкаТоваровСервер.ПолучитьПоложениеОбъектаЦМТ(ЗаписываемыйОбъект);\n\t\tНайденнаяЯчейка\t\t\t\t  = ТекущееРасположениеОбъектаЦМТ.Ячейка;\n\t\tНайденныйКонтейнер \t\t\t  = ТекущееРасположениеОбъектаЦМТ.Контейнер;\n\t\tНайденнаяТранспортнаяУпаковка = ТекущееРасположениеОбъектаЦМТ.ТранспортнаяУпаковкаЦМТ;\n\n\t\t#Удаление\n\t\tЕсли ЗначениеЗаполнено(НайденныйКонтейнер) Тогда\n\t\t#КонецУдаления\n\t\t#Вставка  \n\t\t// ++ Ситек Булдаков 21.03.24 \n\t\tЭтоНедостача\t= Ложь;\n\t\tЕсли ЗначениеЗаполнено(Задача.Бюро1440_ЯчейкаНедостач) Тогда\n\t\t\tКонтейнерНедостач\t= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Задача.Бюро1440_ЯчейкаНедостач, \"Контейнер\");\n\t\t\tЕсли КонтейнерНедостач = ЗаполняемыйКонтейнер Тогда\n\t\t\t\tЭтоНедостача\t= Истина;\n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\n\t\tЕсли ЗначениеЗаполнено(НайденныйКонтейнер) И НЕ ЭтоНедостача Тогда\n\t\t// -- Ситек Булдаков 21.03.24\n\t\t#КонецВставки\n\t\t\t// Объект ЦМТ числится в другом контейнере на складе. Спишем его\n\n\t\t\tРеквизитыОбъектаЦМТ = усЦифроваяМаркировкаТоваровСервер.ПолучитьРеквизитыОбъектаЦМТ(ЗаписываемыйОбъект, Дата);\n\t\t\tКлючАналитики = усУправлениеСкладом.ЗначениеКлючаАналитики(РеквизитыОбъектаЦМТ.Номенклатура, РеквизитыОбъектаЦМТ.СтатусНоменклатуры, РеквизитыОбъектаЦМТ.ПартияНоменклатуры, РеквизитыОбъектаЦМТ.УпаковкаНоменклатуры);\n\t\t\t\n\t\t\tКонтейнерСписанВРамкахЗадачи = СписанныеКонтейнеры.Найти(НайденныйКонтейнер) <> Неопределено;\n\t\t\tЕсли НайденныйКонтейнер <> ЗаполняемыйКонтейнер Тогда\n\t\t\t\t\tЕсли (Задача.Ячейка <> НайденнаяЯчейка И Задача.ТипЗадачи = Перечисления.усТипыЗадачПересчета.ИнвентаризацияКонтейнеров) \n\t\t\t\t\t\t ИЛИ (Не КонтейнерСписанВРамкахЗадачи И Задача.ТипЗадачи = Перечисления.усТипыЗадачПересчета.ИнвентаризацияСоставаКонтейнеров)\n\t\t\t\t\t\t ИЛИ (Задача.ТипЗадачи <> Перечисления.усТипыЗадачПересчета.ИнвентаризацияКонтейнеров\n\t\t\t\t\t\t \t\tИ Задача.ТипЗадачи <> Перечисления.усТипыЗадачПересчета.ИнвентаризацияСоставаКонтейнеров) Тогда\t\t \t\n\t\t\t\t\t\n\t\t\t\t\t// Движения по регистру остатки товаров\n\t\t\t\t\t// Расход номенклатуры из найденного контейнера\n\t\t\t\t\tНовоеДвижение = сткТаблицПроведения.усОстаткиТоваров.Добавить();\n\t\t\t\t\tНовоеДвижение.ВидДвижения  \t   \t   = ВидДвиженияНакопления.Расход;\n\t\t\t\t\tНовоеДвижение.Период        \t   = Дата;\n\t\t\t\t\tНовоеДвижение.Активность\t\t   = Истина;\n\t\t\t\t\tНовоеДвижение.Контейнер     \t   = НайденныйКонтейнер;\n\t\t\t\t\tНовоеДвижение.КлючАналитикиУчетаНоменклатуры = КлючАналитики;\n\t\t\t\t\tНовоеДвижение.Организация\t\t   = РеквизитыОбъектаЦМТ.Организация;\n\t\t\t\t\tНовоеДвижение.Количество    \t   = 1;\n\t\n\t\t\t\t\tЕсли ПолучитьФункциональнуюОпцию(\"усИспользуетсяУчетТовараВУпаковках\") Тогда\n\t\t\t\t\t\tНовоеДвижение = сткТаблицПроведения.усОстаткиТоваровВУпаковках.Добавить();\n\t\t\t\t\t\tНовоеДвижение.ВидДвижения  \t   \t   = ВидДвиженияНакопления.Расход;\n\t\t\t\t\t\tНовоеДвижение.Период        \t   = Дата;\n\t\t\t\t\t\tНовоеДвижение.Активность\t\t   = Истина;\n\t\t\t\t\t\tНовоеДвижение.Контейнер     \t   = НайденныйКонтейнер;\n\t\t\t\t\t\tНовоеДвижение.КлючАналитикиУчетаНоменклатуры = КлючАналитики;\n\t\t\t\t\t\tНовоеДвижение.УпаковкаНоменклатуры = ВыборкаОбъектыЗаписать.УпаковкаНоменклатуры;\n\t\t\t\t\t\tНовоеДвижение.Организация\t\t   = РеквизитыОбъектаЦМТ.Организация;\n\t\t\t\t\t\tНовоеДвижение.Количество    \t   = 1 / ?(ВыборкаОбъектыЗаписать.УпаковкаНоменклатуры.Коэффициент = 0, 1, ВыборкаОбъектыЗаписать.УпаковкаНоменклатуры.Коэффициент);\n\t\t\t\t\tКонецЕсли;\n\t\n\t\t\t\t\t// Списание объекта ЦМТ из найденного контейнера или транспортной упаковки\n\t\t\t\t\tЕсли ЗначениеЗаполнено(НайденнаяТранспортнаяУпаковка) Тогда\n\t\t\t\t\t\tНовоеДвижение = сткТаблицПроведения.усСоставТранспортныхУпаковокЦМТ.Добавить();\n\t\t\t\t\t\tНовоеДвижение.ВидДвижения \t\t\t= ВидДвиженияНакопления.Расход;\n\t\t\t\t\t\tНовоеДвижение.Период           \t\t= Дата;\n\t\t\t\t\t\tНовоеДвижение.Активность       \t\t= Истина;\n\t\t\t\t\t\tНовоеДвижение.ТранспортнаяУпаковка \t= НайденнаяТранспортнаяУпаковка;\n\t\t\t\t\t\tНовоеДвижение.Объект        \t   \t= ЗаписываемыйОбъект;\n\t\t\t\t\t\tНовоеДвижение.Количество       \t   \t= 1;\n\t\t\t\t\tИначе\n\t\t\t\t\t\tНовоеДвижение = сткТаблицПроведения.усПоложениеОбъектовЦМТ.Добавить();\n\t\t\t\t\t\tНовоеДвижение.ВидДвижения\t\t  \t= ВидДвиженияНакопления.Расход;\n\t\t\t\t\t\tНовоеДвижение.Период\t\t\t   \t= Дата;\n\t\t\t\t\t\tНовоеДвижение.Активность\t\t    = Истина;\n\t\t\t\t\t    НовоеДвижение.Контейнер        \t   \t= НайденныйКонтейнер;\n\t\t\t\t\t\tНовоеДвижение.Объект \t\t\t   \t= ВыборкаОбъектыЗаписать.Объект;\n\t\t\t\t\t\tНовоеДвижение.Количество       \t   \t= 1;\n\t\t\t\t\tКонецЕсли;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\n\t\t\tЕсли НЕ ЗначениеЗаполнено(НайденнаяТранспортнаяУпаковка) Тогда\n\t\t\t\t// Объект ЦМТ числится без транспортной упаковки\n\n\t\t\t\t// Запишем расхождения\n\t\t\t\tЕсли ЗафиксироватьРасхождения Тогда\n\t\t\t\t\tНовоеДвижение = сткТаблицПроведения.усРасхожденияОстатковОбъектовЦМТ.Добавить();\n\t\t\t\t\tНовоеДвижение.ВидДвижения \t\t\t= ВидДвиженияНакопления.Приход;\n\t\t\t\t\tНовоеДвижение.Период           \t\t= Дата;\n\t\t\t\t\tНовоеДвижение.Активность       \t\t= Истина;\n\t\t\t\t\tНовоеДвижение.КлючАналитикиУчетаНоменклатуры = КлючАналитики;\n\t\t\t\t\tНовоеДвижение.Объект\t\t   \t\t= ЗаписываемыйОбъект;\n\t\t\t\t\tНовоеДвижение.ТранспортнаяУпаковка \t= Справочники.усТранспортныеУпаковкиЦМТ.ПустаяСсылка();\n\t\t\t\t\tНовоеДвижение.Организация \t\t\t= РеквизитыОбъектаЦМТ.Организация;\n\t\t\t\t\tНовоеДвижение.Зона \t\t\t\t\t= ТекущееРасположениеОбъектаЦМТ.Зона;\n\t\t\t\t\tНовоеДвижение.Недостача\t\t   \t\t= 1;\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tЕсли НайденныйКонтейнер <> ЗаполняемыйКонтейнер Тогда\n\t\t\t\t\t// Блокировка контейнера\n\t\t\t\t\tНайденныйКонтейнерОбъект \t\t\t\t   = НайденныйКонтейнер.ПолучитьОбъект();\n\t\t\t\t\tНайденныйКонтейнерОбъект.Состояние \t\t   = Перечисления.усСостоянияКонтейнеров.Заблокирован;\n\t\t\t\t\tНайденныйКонтейнерОбъект.ПричинаБлокировки = Справочники.усПричиныБлокировкиКонтейнеров.ДублированиеЦифровыхМарокТоваров;\n\t\t\t\t\tНайденныйКонтейнерОбъект.Записать();\n\n\t\t\t\t\tТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(\"ru='Контейнер %1 заблокирован по причине дублирования с контейнером %2 цифровой марки %3';\n\t\t\t\t\t\t\t|en='The %1 container is locked due to duplication with the %2 container of the %3 digital mark'\"),\n\t\t\t\t\tНайденныйКонтейнер, ЗаполняемыйКонтейнер, ЗаписываемыйОбъект);\n\n\t\t\t\t\tЗаписьЖурналаРегистрации(НСтр(\"ru='Блокировка контейнера';\n\t\t\t\t\t\t\t|en='Container lock'\", ОбщегоНазначения.КодОсновногоЯзыка()),\n\t\t\t\t\t\t\t\t\t\t\t УровеньЖурналаРегистрации.Ошибка, Задача.Метаданные(), НайденныйКонтейнер, ТекстПредупреждения);\n\t\t\t\tКонецЕсли;\n\t\t\tИначе\n\t\t\t\t// Объект ЦМТ числится в транспортной упаковке\n\t\t\t\tмсвСоставТекущейУпаковки = усЦифроваяМаркировкаТоваровСервер.ПолучитьСоставТранспортнойУпаковки(НайденнаяТранспортнаяУпаковка);\n\n\t\t\t\t// Расход объекта ЦМТ из транспортной упаковки в найденном контейнере\n\t\t\t\tНовоеДвижение = сткТаблицПроведения.усСоставТранспортныхУпаковокЦМТ.Добавить();\n\t\t\t\tНовоеДвижение.ВидДвижения \t\t\t= ВидДвиженияНакопления.Расход;\n\t\t\t\tНовоеДвижение.Период           \t\t= Дата;\n\t\t\t\tНовоеДвижение.Активность       \t\t= Истина;\n\t\t\t\tНовоеДвижение.ТранспортнаяУпаковка \t= НайденнаяТранспортнаяУпаковка;\n\t\t\t\tНовоеДвижение.Объект        \t   \t= ЗаписываемыйОбъект;\n\t\t\t\tНовоеДвижение.Количество       \t   \t= 1;\n\n\t\t\t\t// Запишем расхождения\n\t\t\t\tЕсли ЗафиксироватьРасхождения Тогда\n\t\t\t\t\tНовоеДвижение = сткТаблицПроведения.усРасхожденияОстатковОбъектовЦМТ.Добавить();\n\t\t\t\t\tНовоеДвижение.ВидДвижения \t\t\t= ВидДвиженияНакопления.Приход;\n\t\t\t\t\tНовоеДвижение.Период           \t\t= Дата;\n\t\t\t\t\tНовоеДвижение.Активность       \t\t= Истина;\n\t\t\t\t\tНовоеДвижение.КлючАналитикиУчетаНоменклатуры = КлючАналитики;\n\t\t\t\t\tНовоеДвижение.Объект\t\t   \t\t= ЗаписываемыйОбъект;\n\t\t\t\t\tНовоеДвижение.ТранспортнаяУпаковка \t= НайденнаяТранспортнаяУпаковка;\n\t\t\t\t\tНовоеДвижение.Организация \t\t\t= РеквизитыОбъектаЦМТ.Организация;\n\t\t\t\t\tНовоеДвижение.Зона \t\t\t\t\t= ТекущееРасположениеОбъектаЦМТ.Зона;\n\t\t\t\t\tНовоеДвижение.Недостача\t\t   \t\t= 1;\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tЕсли НайденныйКонтейнер <> ЗаполняемыйКонтейнер Тогда\n\t\t\t\t\t// Блокировка контейнера\n\t\t\t\t\tТекущееРасположениеОбъектаЦМТОбъект \t\t\t\t  = НайденныйКонтейнер.ПолучитьОбъект();\n\t\t\t\t\tТекущееРасположениеОбъектаЦМТОбъект.Состояние \t\t  = Перечисления.усСостоянияКонтейнеров.Заблокирован;\n\t\t\t\t\tТекущееРасположениеОбъектаЦМТОбъект.ПричинаБлокировки = Справочники.усПричиныБлокировкиКонтейнеров.ДублированиеЦифровыхМарокТоваров;\n\t\t\t\t\tТекущееРасположениеОбъектаЦМТОбъект.Записать();\n\n\t\t\t\t\tТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(\"ru='Контейнер %1 заблокирован по причине дублирования с контейнером %2 цифровой марки %3 в транспортной упаковка %4';\n\t\t\t\t\t\t\t|en='The %1 container is locked due to duplication with the %2 container of the %3 digital mark in the %4 transport packaging'\"),\n\t\t\t\t\tНайденныйКонтейнер, ЗаполняемыйКонтейнер, ЗаписываемыйОбъект);\n\n\t\t\t\t\tЗаписьЖурналаРегистрации(НСтр(\"ru='Блокировка контейнера';\n\t\t\t\t\t\t\t|en='Container lock'\", ОбщегоНазначения.КодОсновногоЯзыка()),\n\t\t\t\t\t\t\t\t\t\t\t УровеньЖурналаРегистрации.Ошибка, Задача.Метаданные(), НайденныйКонтейнер, ТекстПредупреждения);\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\n\tКонецЦикла;\n\n\t// 6 - Списание транспортных упаковок объектов из контейнеров\n\tВыборкаТУСписать = РезультатЗапроса[6].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);\n\tПока ВыборкаТУСписать.Следующий() Цикл\n\n\t\tВыборкаТУКонтейнерСписать = ВыборкаТУСписать.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);\n\t\tПока ВыборкаТУКонтейнерСписать.Следующий() Цикл\n\t\t    // Контроль наличия начальной транспортной упаковки ЦМТ в контейнере\n\t\t\tНовыйКонтроль = сткТаблицПроведения.усКонтрольПоложенияТранспортныхУпаковокЦМТ.Добавить();\n\t\t\tНовыйКонтроль.ТранспортнаяУпаковка = ВыборкаТУКонтейнерСписать.ТранспортнаяУпаковка;\n\t\t\tНовыйКонтроль.Контейнер        \t   = ВыборкаТУКонтейнерСписать.Контейнер;\n\n\t\t\t// Списание транспортной упаковки из контейнера\n\t\t\tНовоеДвижение = сткТаблицПроведения.усПоложениеТранспортныхУпаковокЦМТ.Добавить();\n\t\t\tНовоеДвижение.ВидДвижения\t\t  \t= ВидДвиженияНакопления.Расход;\n\t\t\tНовоеДвижение.Период\t\t\t   \t= Дата;\n\t\t\tНовоеДвижение.Активность\t\t    = Истина;\n\t\t\tНовоеДвижение.ТранспортнаяУпаковка \t= ВыборкаТУКонтейнерСписать.ТранспортнаяУпаковка;\n\t\t\tНовоеДвижение.Контейнер        \t   \t= ВыборкаТУКонтейнерСписать.Контейнер;\n\t\t\tНовоеДвижение.Количество       \t   \t= 1;\n\t\tКонецЦикла;\n\tКонецЦикла;\n\n\t// 7 - Запись транспортных упаковок объектов в контейнеры\n\tВыборкаТУЗаписать = РезультатЗапроса[7].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);\n\tПока ВыборкаТУЗаписать.Следующий() Цикл\n\n\t\tВыборкаТУКонтейнерЗаписать = ВыборкаТУЗаписать.Выбрать();\n\t\tПока ВыборкаТУКонтейнерЗаписать.Следующий() Цикл\n\n\t\t\tЗаполняемаяТранспортнаяУпаковка = ВыборкаТУКонтейнерЗаписать.ТранспортнаяУпаковка;\n\t\t\tЗаполняемыйКонтейнер = ВыборкаТУКонтейнерЗаписать.Контейнер;\n\n\t\t\tТекущееРасположениеУпаковки = усЦифроваяМаркировкаТоваровСервер.ПолучитьПоложениеТранспортнойУпаковки(ЗаполняемаяТранспортнаяУпаковка);\n\t\t\tНайденныйКонтейнер = ТекущееРасположениеУпаковки.Контейнер;\n\n\t\t\tЕсли НайденныйКонтейнер <> ЗаполняемыйКонтейнер Тогда\n\t\t\t\t// Транспортная упаковка не числится в текущем контейнере.\n\t\t\t\t// Оприходуем транспортную упаковку в текущий контейнер.\n\t\t\t\tНовоеДвижение = сткТаблицПроведения.усПоложениеТранспортныхУпаковокЦМТ.Добавить();\n\t\t\t\tНовоеДвижение.ВидДвижения  \t\t   = ВидДвиженияНакопления.Приход;\n\t\t\t\tНовоеДвижение.Период        \t   = Дата;\n\t\t\t\tНовоеДвижение.Активность\t\t   = Истина;\n\t\t\t\tНовоеДвижение.ТранспортнаяУпаковка = ЗаполняемаяТранспортнаяУпаковка;\n\t\t\t\tНовоеДвижение.Контейнер     \t   = ЗаполняемыйКонтейнер;\n\t\t\t\tНовоеДвижение.Количество    \t   = 1;\n\n\t\t\t\tмсвСоставТекущейУпаковки = усЦифроваяМаркировкаТоваровСервер.ПолучитьСоставТранспортнойУпаковки(ЗаполняемаяТранспортнаяУпаковка);\n\n\t\t\t\tЕсли ЗначениеЗаполнено(НайденныйКонтейнер) И мсвСоставТекущейУпаковки.Количество() > 0 Тогда\n\t\t\t\t\t// Транспортная упаковка расположена в другом контейнере и не пустая.\n\t\t\t\t\t// Уберем расположение упаковки в найденном контейнере.\n\t\t\t\t\tНовоеДвижение = сткТаблицПроведения.усПоложениеТранспортныхУпаковокЦМТ.Добавить();\n\t\t\t\t\tНовоеДвижение.ВидДвижения  \t\t   = ВидДвиженияНакопления.Расход;\n\t\t\t\t\tНовоеДвижение.Период        \t   = Дата;\n\t\t\t\t\tНовоеДвижение.Активность\t\t   = Истина;\n\t\t\t\t\tНовоеДвижение.ТранспортнаяУпаковка = ЗаполняемаяТранспортнаяУпаковка;\n\t\t\t\t\tНовоеДвижение.Контейнер     \t   = НайденныйКонтейнер;\n\t\t\t\t\tНовоеДвижение.Количество    \t   = 1;\n\n\t\t\t\t\t// Списываем состав транспортной упаковки из текущего контейнера\n\t\t\t\t\tДля каждого ТекущаяСтрокаСоставаТУ Из мсвСоставТекущейУпаковки Цикл\n\t\t\t\t\t\tКлючАналитики = усУправлениеСкладом.ЗначениеКлючаАналитики(ТекущаяСтрокаСоставаТУ.Номенклатура, ТекущаяСтрокаСоставаТУ.СтатусНоменклатуры, ТекущаяСтрокаСоставаТУ.ПартияНоменклатуры, ТекущаяСтрокаСоставаТУ.УпаковкаНоменклатуры);\n\n\t\t\t\t\t\t// Запишем расхождения\n\t\t\t\t\t\tЕсли ЗафиксироватьРасхождения Тогда\n\t\t\t\t\t\t\tНовоеДвижение = сткТаблицПроведения.усРасхожденияОстатковОбъектовЦМТ.Добавить();\n\t\t\t\t\t\t\tНовоеДвижение.ВидДвижения \t\t\t= ВидДвиженияНакопления.Приход;\n\t\t\t\t\t\t\tНовоеДвижение.Период           \t\t= Дата;\n\t\t\t\t\t\t\tНовоеДвижение.Активность       \t\t= Истина;\n\t\t\t\t\t\t\tНовоеДвижение.КлючАналитикиУчетаНоменклатуры = КлючАналитики;\n\t\t\t\t\t\t\tНовоеДвижение.Объект\t\t   \t\t= ТекущаяСтрокаСоставаТУ.Объект;\n\t\t\t\t\t\t\tНовоеДвижение.ТранспортнаяУпаковка \t= ТекущаяСтрокаСоставаТУ.ТранспортнаяУпаковка;\n\t\t\t\t\t\t\tНовоеДвижение.Организация \t\t\t= ТекущаяСтрокаСоставаТУ.Организация;\n\t\t\t\t\t\t\tНовоеДвижение.Зона \t\t\t\t\t= Зона;\n\t\t\t\t\t\t\tНовоеДвижение.Недостача\t\t   \t\t= 1;\n\t\t\t\t\t\tКонецЕсли;\n\t\t\t\t\tКонецЦикла;\n\n\t\t\t\t\tЕсли НайденныйКонтейнер <> ЗаполняемыйКонтейнер Тогда\n\t\t\t\t\t\t// Блокировка контейнера\n\t\t\t\t\t\tНайденныйКонтейнерОбъект \t\t\t\t   = НайденныйКонтейнер.ПолучитьОбъект();\n\t\t\t\t\t\tНайденныйКонтейнерОбъект.Состояние \t\t   = Перечисления.усСостоянияКонтейнеров.Заблокирован;\n\t\t\t\t\t\tНайденныйКонтейнерОбъект.ПричинаБлокировки = Справочники.усПричиныБлокировкиКонтейнеров.ДублированиеТранспортныхУпаковок;\n\t\t\t\t\t\tНайденныйКонтейнерОбъект.Записать();\n\n\t\t\t\t\t\tТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(\"ru='Контейнер %1 заблокирован по причине дублирования с контейнером %2 транспортной упаковки %3';\n\t\t\t\t\t\t\t|en='The %1 container is locked due to duplication with the %2 container of the %3 transport packaging'\"),\n\t\t\t\t\t\tНайденныйКонтейнер, ЗаполняемыйКонтейнер, ЗаполняемаяТранспортнаяУпаковка);\n\n\t\t\t\t\t\tЗаписьЖурналаРегистрации(НСтр(\"ru='Блокировка контейнера';\n\t\t\t\t\t\t\t|en='Container lock'\", ОбщегоНазначения.КодОсновногоЯзыка()),\n\t\t\t\t\t\t\t\t\t\t\t\t УровеньЖурналаРегистрации.Ошибка, Задача.Метаданные(), НайденныйКонтейнер, ТекстПредупреждения);\n\t\t\t\t\tКонецЕсли;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\tКонецЦикла;\n\n\t// 8 - Записанные объекты\n\tВыборкаОбъекты = РезультатЗапроса[8].Выбрать();\n\tПока ВыборкаОбъекты.Следующий() Цикл\n\t\t// обновление реквизитов объекта ЦМТ\n\t\tНовоеДвижение = сткТаблицПроведения.усРеквизитыОбъектовЦМТ.Добавить();\n\t\tНовоеДвижение.Период \t\t\t\t= Дата;\n\t\tНовоеДвижение.Объект \t\t\t\t= ВыборкаОбъекты.Объект;\n\t\tНовоеДвижение.Номенклатура \t\t\t= ВыборкаОбъекты.Номенклатура;\n\t\tНовоеДвижение.ПартияНоменклатуры \t= ВыборкаОбъекты.ПартияНоменклатуры;\n\t\tНовоеДвижение.УпаковкаНоменклатуры  = ВыборкаОбъекты.УпаковкаНоменклатуры;\n\t\tНовоеДвижение.Организация \t\t\t= ВыборкаОбъекты.Организация;\n\t\tНовоеДвижение.Документ\t\t\t\t= Задача.Ссылка;\n\n\t\t// Изменение статуса объектов ЦМТ\n\t\tЕсли ВыборкаОбъекты.ТекущийСтатусНоменклатуры <> ВыборкаОбъекты.СтатусНоменклатуры Тогда\n\t\t\tНовоеДвижение = сткТаблицПроведения.усСтатусыОбъектовЦМТ.Добавить();\n\t\t\tНовоеДвижение.Период     = Дата;\n\t\t\tНовоеДвижение.Активность = Истина;\n\t\t\tНовоеДвижение.Объект\t = ВыборкаОбъекты.Объект;\n\t\t\tНовоеДвижение.Статус\t = ВыборкаОбъекты.СтатусНоменклатуры;\n\t\tКонецЕсли;\n\n\t\t// Зафиксируем расхождения\n\t\tЕсли ЗафиксироватьРасхождения Тогда\n\n\t\t\tКлючАналитики = усУправлениеСкладом.ЗначениеКлючаАналитики(ВыборкаОбъекты.Номенклатура, ВыборкаОбъекты.СтатусНоменклатуры, ВыборкаОбъекты.ПартияНоменклатуры, ВыборкаОбъекты.УпаковкаНоменклатуры);\n\t\t\t\n\t\t\tНовоеДвижение = сткТаблицПроведения.усРасхожденияОстатковОбъектовЦМТ.Добавить();\n\t\t\tНовоеДвижение.ВидДвижения \t\t\t= ВидДвиженияНакопления.Приход;\n\t\t\tНовоеДвижение.Период           \t\t= Дата;\n\t\t\tНовоеДвижение.Активность       \t\t= Истина;\n\t\t\tНовоеДвижение.КлючАналитикиУчетаНоменклатуры = КлючАналитики;\n\t\t\tНовоеДвижение.Объект\t\t   \t\t= ВыборкаОбъекты.Объект;\n\t\t\tНовоеДвижение.ТранспортнаяУпаковка \t= ВыборкаОбъекты.ТранспортнаяУпаковка;\n\t\t\tНовоеДвижение.Организация \t\t\t= ВыборкаОбъекты.Организация;\n\t\t\tНовоеДвижение.Зона \t\t\t\t\t= Зона;\n\t\t\tНовоеДвижение.Излишки\t\t   \t\t= 1;\n\t\tКонецЕсли;\n\tКонецЦикла;\n\n\t// 9 - Списанные объекты\n\tВыборкаОбъекты = РезультатЗапроса[9].Выбрать();\n\tПока ВыборкаОбъекты.Следующий() Цикл\n\n\t\t// Зафиксируем расхождения\n\t\tЕсли ЗафиксироватьРасхождения Тогда\n\n\t\t\tКлючАналитики = усУправлениеСкладом.ЗначениеКлючаАналитики(ВыборкаОбъекты.Номенклатура, ВыборкаОбъекты.СтатусНоменклатуры, ВыборкаОбъекты.ПартияНоменклатуры, ВыборкаОбъекты.УпаковкаНоменклатуры);\n\t\t\t\n\t\t\tНовоеДвижение = сткТаблицПроведения.усРасхожденияОстатковОбъектовЦМТ.Добавить();\n\t\t\tНовоеДвижение.ВидДвижения \t\t\t= ВидДвиженияНакопления.Приход;\n\t\t\tНовоеДвижение.Период           \t\t= Дата;\n\t\t\tНовоеДвижение.Активность       \t\t= Истина;\n\t\t\tНовоеДвижение.КлючАналитикиУчетаНоменклатуры = КлючАналитики;\n\t\t\tНовоеДвижение.Объект\t\t   \t\t= ВыборкаОбъекты.Объект;\n\t\t\tНовоеДвижение.ТранспортнаяУпаковка \t= ВыборкаОбъекты.ТранспортнаяУпаковка;\n\t\t\tНовоеДвижение.Организация \t\t\t= ВыборкаОбъекты.Организация;\n\t\t\tНовоеДвижение.Зона \t\t\t\t\t= Зона;\n\t\t\tНовоеДвижение.Недостача\t\t   \t\t= 1;\n\t\tКонецЕсли;\n\tКонецЦикла;\n\n\tЕсли ЗафиксироватьРасхождения Тогда\n\t\tсткТаблицПроведения.усРасхожденияОстатковОбъектовЦМТ.Свернуть(\"ВидДвижения, Период, Активность, КлючАналитикиУчетаНоменклатуры, Объект, ТранспортнаяУпаковка, Организация, Зона\", \"Недостача, Излишки\");\n\n\t\tДля Каждого СтрокаДвижения Из сткТаблицПроведения.усРасхожденияОстатковОбъектовЦМТ Цикл\n\t\t\t// Скорректируем количество > 1\n\t\t\tЕсли СтрокаДвижения.Недостача > 1 Тогда\n\t\t\t\tСтрокаДвижения.Недостача = 1;\n\t\t\tКонецЕсли;\n\n\t\t\tЕсли СтрокаДвижения.Излишки > 1 Тогда\n\t\t\t\tСтрокаДвижения.Излишки = 1;\n\t\t\tКонецЕсли;\n\n\t\t\t// Запишем движения по расхождениям в регистр усРасхождениеОстатков\n\t\t\tНовоеДвижение = сткТаблицПроведения.усРасхожденияОстатков.Добавить();\n\t\t\tНовоеДвижение.ВидДвижения \t\t\t= ВидДвиженияНакопления.Приход;\n\t\t\tНовоеДвижение.Период           \t\t= Дата;\n\t\t\tНовоеДвижение.Активность       \t\t= Истина;\n\t\t\tНовоеДвижение.КлючАналитикиУчетаНоменклатуры = СтрокаДвижения.КлючАналитикиУчетаНоменклатуры;\n\t\t\tНовоеДвижение.Организация \t\t\t= СтрокаДвижения.Организация;\n\t\t\tНовоеДвижение.Зона \t\t\t\t\t= СтрокаДвижения.Зона;\n\t\t\tНовоеДвижение.Недостача\t\t\t\t= ?(СтрокаДвижения.Недостача > 0, СтрокаДвижения.Недостача, 0);\n\t\t\tНовоеДвижение.Излишки\t\t\t\t= ?(СтрокаДвижения.Излишки > 0, СтрокаДвижения.Излишки, 0);\n\t\tКонецЦикла;\n\tКонецЕсли;\n\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\усСерверПечати\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\усСерверПечати\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/c143bc52b3f0b844509d45e27d706b6092d8cfaa/_bsl%5CResources%5C726598511%5CCommonModule%5C%D1%83%D1%81%D0%A1%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%9F%D0%B5%D1%87%D0%B0%D1%82%D0%B8%5CCommonModule.obj.bsl",
            "size": 4335,
            "truncated": false,
            "content": "&ИзменениеИКонтроль(\"Напечатать\")\nПроцедура Бюро1440_Напечатать(Документ, Принтер, ИдентификаторПечати)\n\t\t\n\tРежимПечати = усСерверПечатиВызовСервера.РежимРаботыСервераПечати();\n\t\n\tЕсли РежимПечати = ПредопределенноеЗначение(\"Перечисление.усРежимСервераПечати.МобильныйКлиент\") Тогда\n\t\t\n\t\tИдентификаторПечати = усСерверПечатиВызовСервера.ПолучитьИдентификаторПечатиДокумента(Документ, Принтер);\n\t\n\tИначеЕсли ОбщегоНазначения.ЭтоLinuxСервер() Тогда\n\t\t\n\t\tВременныйФайл = ЗагрузитьТабличныйДокументВоВременныйФайлPDF(Документ);\n\t\tИмяПринтера = Документ.ИмяПринтера;\n\t\t#Удаление \n\t\tФайловаяСистема.ЗапуститьПрограмму(СтрШаблон(\"lp -d %1 %2\", ИмяПринтера, ВременныйФайл));\n\t\t#КонецУдаления\n\t\t#Вставка  \n\t\t// ++ Ситек Булдаков 08.02.24 \n\t\tУстановитьПривилегированныйРежим(Истина);\n\t\tИспользоватьZPL\t= Константы.Бюро1440_ИспользоватьZPL.Получить();\n\t\tКаталог\t\t\t= Константы.Бюро1440_Каталог.Получить(); \n\t\tУстановитьПривилегированныйРежим(Ложь);   \n\t\t\n\t\tЕсли Не ИспользоватьZPL Тогда                                               \n\t\t\tФайловаяСистема.ЗапуститьПрограмму(СтрШаблон(\"lp -d %1 %2\", ИмяПринтера, ВременныйФайл));    \n\t\tИначе\n\t\t\tПараметрыЗапускаПрограммы = ФайловаяСистема.ПараметрыЗапускаПрограммы();\n\t\t\tПараметрыЗапускаПрограммы.ТекущийКаталог\t  = Каталог; // \"/home/usr1cv8/\";\n\t\t\tПараметрыЗапускаПрограммы.ДождатьсяЗавершения = Истина;   \n\t\t\t\n\t\t\tИмяФайлаZPL = ПолучитьИмяВременногоФайла();\n\t\t\tФайловаяСистема.ЗапуститьПрограмму(СтрШаблон(\"%1pdf2zpl -i %2 -o %3 -x 50 -y 0\", Каталог, ВременныйФайл, ИмяФайлаZPL), ПараметрыЗапускаПрограммы);\n\t\t\t\n\t\t\tФайловаяСистема.ЗапуститьПрограмму(СтрШаблон(\"lp -d %1 %2\", ИмяПринтера, ИмяФайлаZPL));    \n\t\tКонецЕсли;   \n\t\t// -- Ситек Булдаков 08.02.24\n\t\t#КонецВставки\n\t\t\t\t\t\n\tИначеЕсли РежимПечати = ПредопределенноеЗначение(\"Перечисление.усРежимСервераПечати.STPrint\") Тогда\n\t\t\n\t\tДвоичныеДанныеPDF = ЗагрузитьТабличныйДокументВДвоичныеДанныеPDF(Документ);\n\t\tНастройкиПечатиКомпоненты = НовыеНастройкиПечатиSTPrint(Документ);\n\t\tНапечататьЧерезSTPrint(ДвоичныеДанныеPDF, НастройкиПечатиКомпоненты, Принтер);\n\t\t\n\tИначеЕсли РежимПечати = ПредопределенноеЗначение(\"Перечисление.усРежимСервераПечати.FoxitReader\") Тогда\n\t\t\n\t\tВременныйФайл = ЗагрузитьТабличныйДокументВоВременныйФайлPDF(Документ);\n\t\tИмяПринтера = Документ.ИмяПринтера;\n\t\tНапечататьЧерезFoxitReader(ВременныйФайл, ИмяПринтера);\n\t\t\n\tИначеЕсли РежимПечати = ПредопределенноеЗначение(\"Перечисление.усРежимСервераПечати.Стандартный\") Тогда\n\t\t\n\t\tНапечататьЧерезOLEПодключение(Документ);\n\t\t\n\tКонецЕсли;\n\t\t\nКонецПроцедуры",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\усСервисныеФункцииВызовСервера\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\усСервисныеФункцииВызовСервера\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/7ca893fe4527a93b37fceca45ef9707cb659d25b/_bsl%5CResources%5C726598511%5CCommonModule%5C%D1%83%D1%81%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D0%BD%D1%8B%D0%B5%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%D0%92%D1%8B%D0%B7%D0%BE%D0%B2%D0%A1%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B0%5CCommonModule.obj.bsl",
            "size": 8138,
            "truncated": false,
            "content": "&ИзменениеИКонтроль(\"СоздатьПартию\")\nФункция Бюро1440_СоздатьПартию(Номенклатура, Код, Дата, СрокГодности, ДатаПроизводства, НомерДокументаПоступления, НаименованиеПартии = \"\", стДопРеквизиты = Неопределено, ПринятаСНарушениемСрокаГодности = Ложь, АкцизнаяМаркаСтарогоОбразца = Ложь, Поклажедатель = Неопределено, сткДопСвойства = Неопределено) Экспорт\n\n\tЕсли ЗначениеЗаполнено(Дата) Тогда\n\t\tДатаПартии = НачалоДня(Дата);\n\tИначе\n\t\tДатаПартии = НачалоДня(ТекущаяДатаСеанса());\n\tКонецЕсли;\n\n\tсткДанныеНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, Новый Структура(\"ШаблонНаименованияПартии\", \"МодельУчета.ШаблонНаименованияПартии\"));\n\tЕсли сткДанныеНоменклатуры.ШаблонНаименованияПартии = \"\"\"\"\"\" Тогда\n\t\tНаименование = НаименованиеПартии;\n\tИначе\n\t\t#Вставка  \n\t\t// ++ Ситек Булдаков 28.12.23\n\t\tЕсли Поклажедатель = Неопределено Тогда\n\t\t\tПоклажедатель\t= \"\";\n\t\tКонецЕсли;\n\t\t// -- Ситек Булдаков 28.12.23\n\t\t#КонецВставки\n\t\t// АПК:488-выкл безопасный режим не требуется\n\t\t//@skip-check server-execution-safe-mode\n\t\tНаименование = Вычислить(сткДанныеНоменклатуры.ШаблонНаименованияПартии);\n\t\t// АПК:488-вкл\n\t\t#Вставка  \n\t\t// ++ Ситек Булдаков 28.12.23\n\t\tЕсли Поклажедатель = \"\" Тогда\n\t\t\tПоклажедатель\t= Неопределено;\n\t\tКонецЕсли;\n\t\t// -- Ситек Булдаков 28.12.23\n\t\t#КонецВставки\n\tКонецЕсли;\n\n\tЕсли Не ЗначениеЗаполнено(Наименование) Тогда\n\t\tВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(\"ru='Указаны не все реквизиты партии у номенклатуры %1';\n\t\t\t|en='Not all batch attributes are specified for %1 products'\"), Номенклатура);\n\tИначе\n\t\tЗапрос = Новый Запрос;\n\t\tЗапрос.Текст = \"ВЫБРАТЬ\n\t\t|\tусПартииНоменклатуры.Ссылка\n\t\t|ИЗ\n\t\t|\tСправочник.усПартииНоменклатуры КАК усПартииНоменклатуры\n\t\t|ГДЕ\n\t\t|\tусПартииНоменклатуры.Наименование = &Наименование\n\t\t|\tИ усПартииНоменклатуры.Владелец = &Владелец\";\n\t\tЗапрос.УстановитьПараметр(\"Владелец\",         \t\t\tНоменклатура);\n\t\tЗапрос.УстановитьПараметр(\"Наименование\",      \t\t\tНаименование);\n\n\t\tВыборка = Запрос.Выполнить().Выбрать();\n\t\tЕсли Выборка.Следующий() Тогда\n\t\t\tВозврат Выборка.Ссылка;\n\t\tИначе\n\t\t\tНоваяПартия = Справочники.усПартииНоменклатуры.СоздатьЭлемент();\n\t\t\tНоваяПартия.Заполнить(Неопределено);\n\t\t\tНоваяПартия.Владелец         \t\t\t    = Номенклатура;\n\t\t\tНоваяПартия.Наименование                    = Наименование;\n\t\t\tНоваяПартия.Код              \t\t\t    = Код;\n\t\t\tНоваяПартия.ДатаПартии                      = ДатаПартии;\n\t\t\tНоваяПартия.ДатаПроизводства \t\t\t    = ДатаПроизводства;\n\t\t\tНоваяПартия.СрокГодности     \t\t\t    = СрокГодности;\n\t\t\tНоваяПартия.НомерДокументаПоступления \t    = НомерДокументаПоступления;\n\t\t\tНоваяПартия.ПринятаСНарушениемСрокаГодности = ПринятаСНарушениемСрокаГодности;\n\t\t\tНоваяПартия.АкцизнаяМаркаСтарогоОбразца     = АкцизнаяМаркаСтарогоОбразца;\n\t\t\tНоваяПартия.Поклажедатель\t\t\t\t\t= Поклажедатель;\n\t\t\tНоваяПартия.СтатусПартии\t\t\t\t\t= Перечисления.усСтатусыПартий.Доступна;\n\t\t\tНоваяПартия.ВестиУчетПоКодамЦМТ \t\t\t= усЦифроваяМаркировкаТоваровВызовСервера.ВестиУчетПоКодамЦМТ() И Номенклатура.МодельУчета.ВестиУчетПоКодамЦМТ;\n\n\t\t\t#Вставка  \n\t\t\t//++Крутских Ситек 03.02.25++\n\t\t\tЕсли НЕ ЗначениеЗаполнено(Код) Тогда\n\t\t\t\tНоваяПартия.Код = НомерДокументаПоступления;\n\t\t\tКонецЕсли;\t\t\t\n\t\t\t//--Крутских Ситек 03.02.25--\n\t\t\t#КонецВставки\n\t\t\t\n\t\t\tЕсли ТипЗнч(стДопРеквизиты) = Тип(\"Соответствие\") Тогда\n\t\t\t\tДля каждого Элемент Из стДопРеквизиты Цикл\n\t\t\t\t\tновСтр = НоваяПартия.ДополнительныеРеквизиты.Добавить();\n\t\t\t\t\tновСтр.Свойство = Элемент.Ключ;\n\t\t\t\t\tновСтр.Значение = Элемент.Значение;\n\t\t\t\tКонецЦикла;\n\t\t\tКонецЕсли;\n\n\t\t\tЕсли ТипЗнч(сткДопСвойства) = Тип(\"Структура\") Тогда\n\t\t\t\tДля Каждого Элемент Из сткДопСвойства Цикл\n\t\t\t\t\tНоваяПартия.ДополнительныеСвойства.Вставить(Элемент.Ключ, Элемент.Значение);\n\t\t\t\tКонецЦикла;\n\t\t\tКонецЕсли;\n\n\t\t\tЕсли НоваяПартия.ПроверитьЗаполнение() Тогда\n\t\t\t\tНоваяПартия.Записать();\n\t\t\tИначе\n\t\t\t\tВызватьИсключение НСтр(\"ru='Неудачное создание партии.';\n\t\t\t\t\t|en='Unsuccessful batch creation.'\");\n\t\t\tКонецЕсли;\n\n\t\t\tВозврат НоваяПартия.Ссылка;\n\t\tКонецЕсли;\n\tКонецЕсли;\n\nКонецФункции\n\n&ИзменениеИКонтроль(\"РазрешенОтборСверхПлана\")\nФункция Бюро1440_РазрешенОтборСверхПлана(Задача)\n\t\n\tСтадииОтгрузки = ПолучитьСтадииОтгрузки(Задача.ДокументОснование);\n\tсткДанныеСтадии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтадииОтгрузки, \"РазрешенОтборСверхПлана\");\n\tРезультат = (сткДанныеСтадии.РазрешенОтборСверхПлана = Истина);\n\t\n\t#Вставка\n\t//++ Николаев ситек 15.08.24 ICT-37999 \n\tДокументОснование = Задача.ДокументОснование; \n\tБюро1440_РазрешенОтборСверхПлана = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, \"Бюро1440_РазрешенОтборСверхПлана\");\n\tРезультат = (Бюро1440_РазрешенОтборСверхПлана = Истина);\n\t//-- Николаев ситек 15.08.24\n\t#КонецВставки\n\tВозврат Результат; \n\t\nКонецФункции",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\усСобытия\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\усСобытия\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/956d0c6d0aa929861596e56614b9c1221db7a2a3/_bsl%5CResources%5C726598511%5CCommonModule%5C%D1%83%D1%81%D0%A1%D0%BE%D0%B1%D1%8B%D1%82%D0%B8%D1%8F%5CCommonModule.obj.bsl",
            "size": 60739,
            "truncated": false,
            "content": "Процедура скВыполнитьАвтоматическуюСортировкуКонтейнераПоГруппе(КонтейнерЗадачи, Группа) Экспорт\t\n\t\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст = \n\t\"ВЫБРАТЬ\n\t|\tусЗадачаПеремещениеТовара.Ссылка КАК Ссылка,\n\t|\tусЗадачаПеремещениеТовара.Количество КАК Количество\n\t|ИЗ\n\t|\tДокумент.усЗадачаПеремещениеТовара КАК усЗадачаПеремещениеТовара\n\t|ГДЕ\n\t|\tусЗадачаПеремещениеТовара.НачальныйКонтейнер = &НачальныйКонтейнер\n\t|\tИ усЗадачаПеремещениеТовара.ТипЗадачи = &ТипЗадачи\n\t|\tИ не усЗадачаПеремещениеТовара.ПометкаУдаления \n\t|\tИ усЗадачаПеремещениеТовара.ДокументОснование.ГруппаОтбора = &ДокументОснование\";\n\t\n\tЗапрос.УстановитьПараметр(\"ДокументОснование\", Группа);\n\tЗапрос.УстановитьПараметр(\"НачальныйКонтейнер\", КонтейнерЗадачи);\n\tЗапрос.УстановитьПараметр(\"ТипЗадачи\", Перечисления.усТипыЗадач.Сортировка);\n\t\n\tРезультат = Запрос.Выполнить();\n\t\n\tЕсли Результат.Пустой() Тогда  // нет задач на сортировку\n\t\tмсвКонтейнеры = Новый Массив;    \n\t\tмсвКонтейнеры.Добавить(КонтейнерЗадачи);\n\t\tсткДанныеТипаСобытия = Новый Структура(\"РасчетПлановогоВремениИсполненияЗадач, ВидКонтрольногоВремени, ПлановоеВремя\"\n\t\t\t, Перечисления.усВариантыРасчетаПлановогоВремениИсполненияЗадач.ИсполнитьВТечении \n\t\t\t, Перечисления.усВидыКонтрольногоВремени.НачалоПланирования\n\t\t\t, НачалоДня(ТекущаяДатаСеанса()) + 86400);\n\t\t\n\t\tусСобытия.СоздатьСортировкуПоКонтейнерам(сткДанныеТипаСобытия, мсвКонтейнеры); \n\t\tЗапрос.Текст = Запрос.Текст + \" И усЗадачаПеремещениеТовара.Статус = &Статус\";\n\t\tЗапрос.УстановитьПараметр(\"Статус\", Перечисления.усСтатусыЗадач.КВыполнению);\n\n\t\tТипКонтейнера = Справочники.усТипыКонтейнеров.НеОпределен;\n\t\tВыборка = Запрос.Выполнить().Выбрать();\n\t\tПока Выборка.Следующий() цикл   \n\t\t\t\n\t\t\tКонтейнер = усСервисныеФункцииВызовСервера.СоздатьКонтейнер(ТипКонтейнера, \"\", 1);\n\t\t\tЗадача = Выборка.Ссылка.ПолучитьОбъект();\n\t\t\tОшибка = \"\";   \n\t\t\tОрганизацияДокумента = усПроведениеДокумента.ПолучитьОрганизациюДляДвижений(Задача.Организация);\n\t\t\t\n\t\t\tсткПараметрыАналитикиУчета = усЦифроваяМаркировкаТоваровСервер.ПолучитьПараметрыАналитикиУчета(Задача.Номенклатура, Задача.СтатусНоменклатуры, Задача.ПартияНоменклатуры, Задача.УпаковкаНоменклатуры, ОрганизацияДокумента);\n\t\t\tТаблицаКодовЦМТПлан = усЦифроваяМаркировкаТоваровСервер.ПолучитьСоставОбъектовЦМТПоКонтейнеру(Задача.НачальныйКонтейнер, , сткПараметрыАналитикиУчета);\n\t\t\tКоличество = Выборка.Количество;\n\t\t\tДля каждого стр из ТаблицаКодовЦМТПлан цикл \n\t\t\t\tКоличество = Количество - 1;\n\t\t\t\tНоваяСтрока = Задача.КодыЦМТ.Добавить();\n\t\t\t\tНоваяСтрока.ШтрихкодКИЗ = стр.ШтрихкодКИЗ; \n\t\t\t\tЕсли Количество = 0 Тогда\n\t\t\t\t\tПрервать;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЦикла;\n\t\t\tусУправлениеЗадачами.ВыполнитьДействиеПеремещениеТовара(Задача, Задача.НачальнаяЯчейка, Задача.НачальныйМастерКонтейнер, Контейнер, Задача.УпаковкаНоменклатуры, Задача.КоличествоУпаковок, Задача.Количество, -1, Ошибка);     \n\t\tКонецЦикла;\n\tКонецЕсли;\n\t\nКонецПроцедуры\n\n&ИзменениеИКонтроль(\"СоздатьСортировкуПоКонтейнерам\")\nПроцедура Бюро1440_СоздатьСортировкуПоКонтейнерам(сткПлановоеВремя, мсвКонтейнеров)\n\n\tЗапрос = Новый Запрос;\n\tЗапрос.Текст =\n\t\"ВЫБРАТЬ\n\t|\tусКонтейнеры.Ссылка КАК Контейнер,\n\t|\tусКонтейнеры.ДокументПривязки КАК ГруппаОтбора\n\t|ПОМЕСТИТЬ втКонтейнеры\n\t|ИЗ\n\t|\tСправочник.усКонтейнеры КАК усКонтейнеры\n\t|ГДЕ\n\t|\tусКонтейнеры.Ссылка В(&Контейнеры)\n\t|\tИ усКонтейнеры.ДокументПривязки ССЫЛКА Документ.усГруппаОтбора\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|\tКонтейнер\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусЗаказНаОтгрузку.Ссылка КАК ЗаказНаОтгрузку,\n\t|\tусЗаказНаОтгрузку.ГруппаОтбора КАК ГруппаОтбора\n\t|ПОМЕСТИТЬ втЗаказы\n\t|ИЗ\n\t|\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t|ГДЕ\n\t|\tусЗаказНаОтгрузку.ГруппаОтбора В\n\t|\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\tвтКонтейнеры.ГруппаОтбора\n\t|\t\t\tИЗ\n\t|\t\t\t\tвтКонтейнеры КАК втКонтейнеры)\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|\tЗаказНаОтгрузку\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусПоложениеКонтейнеровОстатки.Контейнер\n\t|ПОМЕСТИТЬ втКонтейнерыЗаказ\n\t|ИЗ\n\t|\tРегистрНакопления.усПоложениеКонтейнеров.Остатки(\n\t|\t\t\t,\n\t|\t\t\tКонтейнер.ДокументПривязки В\n\t|\t\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\t\tвтЗаказы.ЗаказНаОтгрузку\n\t|\t\t\t\tИЗ\n\t|\t\t\t\t\tвтЗаказы)) КАК усПоложениеКонтейнеровОстатки\n\t|ГДЕ\n\t|\tусПоложениеКонтейнеровОстатки.КоличествоОстаток = 1\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|\tусПоложениеКонтейнеровОстатки.Контейнер\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусОстаткиТоваровОстатки.Контейнер КАК Контейнер,\n\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры,\n\t|\tусОстаткиТоваровОстатки.КоличествоОстаток\n\t|ПОМЕСТИТЬ втСоставЗаказ\n\t|ИЗ\n\t|\tРегистрНакопления.усОстаткиТоваров.Остатки(\n\t|\t\t\t,\n\t|\t\t\tКонтейнер В\n\t|\t\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\t\tвтКонтейнерыЗаказ.Контейнер\n\t|\t\t\t\tИЗ\n\t|\t\t\t\t\tвтКонтейнерыЗаказ КАК втКонтейнерыЗаказ)) КАК усОстаткиТоваровОстатки\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|\tКонтейнер\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tвтКонтейнерыЗаказ.Контейнер.ДокументПривязки КАК ЗаказНаОтгрузку,\n\t|\tвтСоставЗаказ.КлючАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,\n\t|\tвтСоставЗаказ.КлючАналитикиУчетаНоменклатуры.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tвтСоставЗаказ.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tвтСоставЗаказ.КлючАналитикиУчетаНоменклатуры.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tвтСоставЗаказ.КоличествоОстаток КАК Отобрано\n\t|ПОМЕСТИТЬ втОстатки\n\t|ИЗ\n\t|\tвтКонтейнерыЗаказ КАК втКонтейнерыЗаказ\n\t|\t\tВНУТРЕННЕЕ СОЕДИНЕНИЕ втСоставЗаказ КАК втСоставЗаказ\n\t|\t\tПО втКонтейнерыЗаказ.Контейнер = втСоставЗаказ.Контейнер\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусКонтрольОтгрузкиОбороты.ЗаказНаОтгрузку,\n\t|\tусКонтрольОтгрузкиОбороты.Номенклатура,\n\t|\tусКонтрольОтгрузкиОбороты.СтатусНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.ПартияНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.УпаковкаНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.КоличествоЗапланированоМаксОборот КАК КоличествоЗапланированоОстаток\n\t|ПОМЕСТИТЬ втПлан\n\t|ИЗ\n\t|\tРегистрНакопления.усКонтрольОтгрузки.Обороты(\n\t|\t\t\t,\n\t|\t\t\t,\n\t|\t\t\t,\n\t|\t\t\tЗаказНаОтгрузку В\n\t|\t\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\t\tвтЗаказы.ЗаказНаОтгрузку\n\t|\t\t\t\tИЗ\n\t|\t\t\t\t\tвтЗаказы)) КАК усКонтрольОтгрузкиОбороты\n\t|ГДЕ\n\t|\tусКонтрольОтгрузкиОбороты.КоличествоЗапланированоМаксОборот > 0\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|\tусКонтрольОтгрузкиОбороты.ЗаказНаОтгрузку,\n\t|\tусКонтрольОтгрузкиОбороты.Номенклатура,\n\t|\tусКонтрольОтгрузкиОбороты.СтатусНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.ПартияНоменклатуры,\n\t|\tусКонтрольОтгрузкиОбороты.УпаковкаНоменклатуры\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tтбФакт.ЗаказНаОтгрузку,\n\t|\tтбФакт.Номенклатура,\n\t|\tтбФакт.СтатусНоменклатуры,\n\t|\tтбФакт.ПартияНоменклатуры,\n\t|\tтбФакт.УпаковкаНоменклатуры,\n\t|\tСУММА(тбФакт.КоличествоСпланировано) КАК КоличествоСпланировано\n\t|ПОМЕСТИТЬ втФакт\n\t|ИЗ\n\t|\t(ВЫБРАТЬ\n\t|\t\tусКонтрольОтгрузкиОбороты.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,\n\t|\t\tусКонтрольОтгрузкиОбороты.Номенклатура КАК Номенклатура,\n\t|\t\tусКонтрольОтгрузкиОбороты.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\t\tусКонтрольОтгрузкиОбороты.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\t\tусКонтрольОтгрузкиОбороты.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\t\tусКонтрольОтгрузкиОбороты.КоличествоСпланированоОборот + усКонтрольОтгрузкиОбороты.КоличествоОтгруженоОборот + усКонтрольОтгрузкиОбороты.КоличествоКСортировкеОборот КАК КоличествоСпланировано\n\t|\tИЗ\n\t|\t\tРегистрНакопления.усКонтрольОтгрузки.Обороты(\n\t|\t\t\t\t,\n\t|\t\t\t\t,\n\t|\t\t\t\t,\n\t|\t\t\t\tЗаказНаОтгрузку В\n\t|\t\t\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\t\t\tвтЗаказы.ЗаказНаОтгрузку\n\t|\t\t\t\t\tИЗ\n\t|\t\t\t\t\t\tвтЗаказы)) КАК усКонтрольОтгрузкиОбороты\n\t|\tГДЕ\n\t|\t\tусКонтрольОтгрузкиОбороты.КоличествоСпланированоОборот + усКонтрольОтгрузкиОбороты.КоличествоОтгруженоОборот + усКонтрольОтгрузкиОбороты.КоличествоКСортировкеОборот <> 0\n\t|\n\t|\tОБЪЕДИНИТЬ ВСЕ\n\t|\n\t|\tВЫБРАТЬ\n\t|\t\tвтОстатки.ЗаказНаОтгрузку,\n\t|\t\tвтОстатки.Номенклатура,\n\t|\t\tвтОстатки.СтатусНоменклатуры,\n\t|\t\tвтОстатки.ПартияНоменклатуры,\n\t|\t\tвтОстатки.УпаковкаНоменклатуры,\n\t|\t\tвтОстатки.Отобрано\n\t|\tИЗ\n\t|\t\tвтОстатки КАК втОстатки) КАК тбФакт\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|\tтбФакт.ЗаказНаОтгрузку,\n\t|\tтбФакт.Номенклатура,\n\t|\tтбФакт.СтатусНоменклатуры,\n\t|\tтбФакт.ПартияНоменклатуры,\n\t|\tтбФакт.УпаковкаНоменклатуры\n\t|\n\t|ИНДЕКСИРОВАТЬ ПО\n\t|\tтбФакт.ЗаказНаОтгрузку,\n\t|\tтбФакт.Номенклатура,\n\t|\tтбФакт.СтатусНоменклатуры,\n\t|\tтбФакт.ПартияНоменклатуры,\n\t|\tтбФакт.УпаковкаНоменклатуры\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tвтПлан.ЗаказНаОтгрузку,\n\t|\tвтПлан.Номенклатура,\n\t|\tвтПлан.СтатусНоменклатуры,\n\t|\tвтПлан.ПартияНоменклатуры,\n\t|\tвтПлан.УпаковкаНоменклатуры,\n\t|\tвтПлан.КоличествоЗапланированоОстаток,\n\t|\tСУММА(ЕСТЬNULL(втФакт.КоличествоСпланировано, 0)) КАК КоличествоСпланировано\n\t|ПОМЕСТИТЬ втИтог\n\t|ИЗ\n\t|\tвтПлан КАК втПлан\n\t|\t\tЛЕВОЕ СОЕДИНЕНИЕ втФакт КАК втФакт\n\t|\t\tПО втПлан.ЗаказНаОтгрузку = втФакт.ЗаказНаОтгрузку\n\t|\t\t\tИ втПлан.Номенклатура = втФакт.Номенклатура\n\t|\t\t\tИ (втПлан.СтатусНоменклатуры В (втФакт.СтатусНоменклатуры, ЗНАЧЕНИЕ(Справочник.усСтатусыНоменклатуры.ПустаяСсылка)))\n\t|\t\t\tИ (втПлан.ПартияНоменклатуры В (втФакт.ПартияНоменклатуры, ЗНАЧЕНИЕ(Справочник.усПартииНоменклатуры.ПустаяСсылка)))\n\t|\t\t\tИ (втПлан.УпаковкаНоменклатуры В (втФакт.УпаковкаНоменклатуры, ЗНАЧЕНИЕ(Справочник.усУпаковкиНоменклатуры.ПустаяСсылка)))\n\t|\n\t|СГРУППИРОВАТЬ ПО\n\t|\tвтПлан.ЗаказНаОтгрузку,\n\t|\tвтПлан.Номенклатура,\n\t|\tвтПлан.СтатусНоменклатуры,\n\t|\tвтПлан.ПартияНоменклатуры,\n\t|\tвтПлан.УпаковкаНоменклатуры,\n\t|\tвтПлан.КоличествоЗапланированоОстаток\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tвтИтог.ЗаказНаОтгрузку.ГруппаОтбора КАК ГруппаОтбора,\n\t|\tвтИтог.ЗаказНаОтгрузку,\n\t|\tвтИтог.Номенклатура КАК Номенклатура,\n\t|\tвтИтог.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tвтИтог.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tвтИтог.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tвтИтог.КоличествоЗапланированоОстаток - втИтог.КоличествоСпланировано КАК Количество\n\t|ИЗ\n\t|\tвтИтог КАК втИтог\n\t|ГДЕ\n\t|\tвтИтог.КоличествоЗапланированоОстаток > втИтог.КоличествоСпланировано\n\t|\n\t|УПОРЯДОЧИТЬ ПО\n\t|\tНоменклатура,\n\t|\tПартияНоменклатуры УБЫВ,\n\t|\tСтатусНоменклатуры УБЫВ,\n\t|\tвтИтог.ЗаказНаОтгрузку.ВажностьЗадач.Порядок,\n\t|\tвтИтог.ЗаказНаОтгрузку.ДатаОтгрузки\n\t|;\n\t|\n\t|////////////////////////////////////////////////////////////////////////////////\n\t|ВЫБРАТЬ\n\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,\n\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.СтатусНоменклатуры КАК СтатусНоменклатуры,\n\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры КАК ПартияНоменклатуры,\n\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.УпаковкаНоменклатуры КАК УпаковкаНоменклатуры,\n\t|\tусОстаткиТоваровОстатки.КоличествоОстаток КАК Количество,\n\t|\tусОстаткиТоваровОстатки.Контейнер КАК Контейнер,\n\t|\tусОстаткиТоваровОстатки.Контейнер.ДокументПривязки КАК ГруппаОтбора,\n\t|\tусОстаткиТоваровОстатки.Контейнер.ДокументПривязки.ЗонаСортировки КАК ЗонаСортировки\n\t|ИЗ\n\t|\tРегистрНакопления.усОстаткиТоваров.Остатки(\n\t|\t\t\t,\n\t|\t\t\tКонтейнер В\n\t|\t\t\t\t(ВЫБРАТЬ\n\t|\t\t\t\t\tвтКонтейнеры.Контейнер\n\t|\t\t\t\tИЗ\n\t|\t\t\t\t\tвтКонтейнеры КАК втКонтейнеры)) КАК усОстаткиТоваровОстатки\";\n\tЗапрос.УстановитьПараметр(\"Контейнеры\", мсвКонтейнеров);\n\n\tРезультат = Запрос.ВыполнитьПакет();\n\n\tтбзЗаказы       = Результат[8].Выгрузить();\n\tтбзГруппаОтбора = Результат[9].Выгрузить();\n\n\tсткПоиска = Новый Структура(\"ГруппаОтбора, Номенклатура\");\n\tДля Каждого текПлан Из тбзГруппаОтбора Цикл\n\t\tЗаполнитьЗначенияСвойств(сткПоиска, текПлан);\n\n\t\tсткДанныеПоложения = РегистрыНакопления.усПоложениеКонтейнеров.ПолучитьПоложениеКонтейнера(текПлан.Контейнер);\n\n\t\tЕсли Не ЗначениеЗаполнено(сткДанныеПоложения.Ячейка) Тогда\n\t\t\tПродолжить;\n\t\tКонецЕсли;\n\n\t\tЗонаСортировки = текПлан.ЗонаСортировки;\n\t\tЕсли Не ЗначениеЗаполнено(ЗонаСортировки) Тогда\n\t\t\tЗонаСортировки = усСервисныеФункцииВызовСервера.ПолучитьЗначениеКонстанты(\"усОсновнаяЗонаСортировки\");\n\t\tКонецЕсли;\n\n\t\tмсвСтрок = тбзЗаказы.НайтиСтроки(сткПоиска);\n\t\t#Вставка  \n\t\t// ++ Ситек Булдаков 22.12.23\n\t\tПоследняяСтрока = мсвСтрок.Количество(); \n\t\tНомерСтроки = 1;\n\t\t// -- Ситек Булдаков 22.12.23\n\t\t#КонецВставки\n\t\tДля Каждого текСтрока Из мсвСтрок Цикл\n\t\t\tЕсли (текСтрока.СтатусНоменклатуры = текПлан.СтатусНоменклатуры ИЛИ Не ЗначениеЗаполнено(текСтрока.СтатусНоменклатуры))\n\t\t\t\tИ (текСтрока.ПартияНоменклатуры = текПлан.ПартияНоменклатуры ИЛИ Не ЗначениеЗаполнено(текСтрока.ПартияНоменклатуры)) Тогда\n\n\t\t\t\tтекКоличество = Мин(текСтрока.Количество, текПлан.Количество);\n\t\t\t\t#Вставка  \n\t\t\t\t// ++ Ситек Булдаков 22.12.23\n\t\t\t\tНомерСтроки = НомерСтроки + 1;\n\t\t\t\tЕсли НомерСтроки > ПоследняяСтрока Тогда // сортируем в последний заказ весь остаток \n\t\t\t\t\tтекКоличество = текПлан.Количество;\n\t\t\t\tКонецЕсли;\n\t\t\t\t// -- Ситек Булдаков 22.12.23\n\t\t\t\t#КонецВставки\n\t\t\t\tЕсли текКоличество > 0 Тогда\n\n\t\t\t\t\tНоваяЗадача = Документы.усЗадачаПеремещениеТовара.СоздатьДокумент();\n\t\t\t\t\tНоваяЗадача.Заполнить(Неопределено);\n\t\t\t\t\tНоваяЗадача.Дата = ТекущаяДатаСеанса();\n\n\t\t\t\t\tНоваяЗадача.ТипЗадачи          = Перечисления.усТипыЗадач.Сортировка;\n\t\t\t\t\tНоваяЗадача.Статус             = Перечисления.усСтатусыЗадач.Новая;\n\t\t\t\t\tНоваяЗадача.Важность           = Перечисления.усВажностьЗадач.Обычная;\n\t\t\t\t\tНоваяЗадача.ПлановоеВремя      = РассчитатьПлановоеВремя(сткПлановоеВремя, текСтрока.ЗаказНаОтгрузку);\n\n\t\t\t\t\tНоваяЗадача.НачальнаяЗона            = сткДанныеПоложения.Зона;\n\t\t\t\t\tНоваяЗадача.НачальнаяЯчейка          = сткДанныеПоложения.Ячейка;\n\t\t\t\t\tНоваяЗадача.НачальныйМастерКонтейнер = сткДанныеПоложения.МастерКонтейнер;\n\t\t\t\t\tНоваяЗадача.НачальныйКонтейнер       = текПлан.Контейнер;\n\t\t\t\t\tНоваяЗадача.ТекущаяЗона              = сткДанныеПоложения.Зона;\n\t\t\t\t\tНоваяЗадача.ТекущаяЯчейка            = сткДанныеПоложения.Ячейка;\n\t\t\t\t\tНоваяЗадача.ТекущийМастерКонтейнер   = сткДанныеПоложения.МастерКонтейнер;\n\t\t\t\t\tНоваяЗадача.ТекущийКонтейнер         = текПлан.Контейнер;\n\t\t\t\t\tНоваяЗадача.КонечнаяЗона             = ЗонаСортировки;\n\n\t\t\t\t\tНоваяЗадача.Номенклатура       \t = текПлан.Номенклатура;\n\t\t\t\t\tНоваяЗадача.СтатусНоменклатуры \t = текПлан.СтатусНоменклатуры;\n\t\t\t\t\tНоваяЗадача.ПартияНоменклатуры \t = текПлан.ПартияНоменклатуры;\n\t\t\t\t\tНоваяЗадача.УпаковкаНоменклатуры = текПлан.УпаковкаНоменклатуры;\n\n\t\t\t\t\tКоэффициентУпаковки = ?(ЗначениеЗаполнено(НоваяЗадача.УпаковкаНоменклатуры.Коэффициент), НоваяЗадача.УпаковкаНоменклатуры.Коэффициент, 1);\n\t\t\t\t\tНоваяЗадача.КоличествоУпаковок = Цел(текКоличество / КоэффициентУпаковки);\n\t\t\t\t\tНоваяЗадача.Количество         = текКоличество;\n\n\t\t\t\t\tНоваяЗадача.ДокументОснование  = текСтрока.ЗаказНаОтгрузку;\n\t\t\t\t\tЕсли Не ЗначениеЗаполнено(НоваяЗадача.ДокументОснование) Тогда\n\t\t\t\t\t\tНоваяЗадача.ДокументОснование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(текПлан.Контейнер, \"ДокументПривязки\");\n\t\t\t\t\tКонецЕсли;\n\n\t\t\t\t\tНоваяЗадача.Записать(РежимЗаписиДокумента.Запись);\n\n\t\t\t\t\tОшибка = \"\";\n\t\t\t\t\tЕсли Не усУправлениеЗадачами.ПередатьЗадачуПеремещениеТовараНаИсполнение(НоваяЗадача, Ошибка) Тогда\n\t\t\t\t\t\tНоваяЗадача.Статус = Перечисления.усСтатусыЗадач.Отменена;\n\t\t\t\t\t\tНоваяЗадача.Записать(РежимЗаписиДокумента.Запись);\n\t\t\t\t\tИначе\n\t\t\t\t\t\tтекСтрока.Количество = текСтрока.Количество - текКоличество;\n\t\t\t\t\t\tтекПлан.Количество   = текПлан.Количество - текКоличество;\n\t\t\t\t\tКонецЕсли;\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tЕсли текПлан.Количество = 0 Тогда\n\t\t\t\t\tПрервать;\n\t\t\t\tКонецЕсли;\n\t\t\tКонецЕсли;\n\t\tКонецЦикла;\n\tКонецЦикла;\n\nКонецПроцедуры\n\n&ИзменениеИКонтроль(\"ОбработатьСкладскоеСобытие\")\nПроцедура Бюро1440_ОбработатьСкладскоеСобытие(ДокументОснование, ТипСобытия, ДатаЗаписи)\n\n\tИмяСобытияЗапись = НСтр(\"ru='Запись';\n\t\t|en='Record'\", ОбщегоНазначения.КодОсновногоЯзыка());\n\n\tсткДанныеТипаСобытия = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТипСобытия, \"ТипИсходногоДействия, АлгоритмОбработки, РасчетПлановогоВремениИсполненияЗадач, ВремяИсполнения, ИсполнитьК, ВидКонтрольногоВремени, КоличествоПопыток, ВремяОбработкиСобытия, Задержка, ВремяСозданияЗадачи\");\n\tЕсли сткДанныеТипаСобытия.ТипИсходногоДействия = Перечисления.усТипыДействийСобытий.КонтрольноеВремяПоЗаказуНаОтгрузку Тогда\n\t\tЕсли Не ПроверитьСоответствиеДокументаСобытию(ТипСобытия, ДокументОснование) Тогда\n\t\t\tПопытка\n\t\t\t\tтекЗапись = РегистрыСведений.усПроизошедшиеСкладскиеСобытия.СоздатьМенеджерЗаписи();\n\t\t\t\tтекЗапись.ДокументОснование = ДокументОснование;\n\t\t\t\tтекЗапись.ДатаЗаписи        = ДатаЗаписи;\n\t\t\t\tтекЗапись.ТипСобытия        = ТипСобытия;\n\t\t\t\tтекЗапись.Прочитать();\n\t\t\t\tЕсли НЕ текЗапись.Выбран() Тогда\n        \t\t\tтекЗапись.Заполнить(Неопределено);\n      \t\t\tКонецЕсли;\t\t\n\t\t\t\tтекЗапись.СтатусОтработки   = Перечисления.усСтатусыОтработкиСобытий.Закрыто;\n\t\t\t\tтекЗапись.ДатаОтработки     = ТекущаяДатаСеанса();\n\t\t\t\tтекЗапись.Записать();\n\t\t\tИсключение\n\t\t\t\tТекстОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());\n\t\t\t\tЗаписьЖурналаРегистрации(ИмяСобытияЗапись,\n\t\t\t\t\t\t\t\t\t\t УровеньЖурналаРегистрации.Ошибка, Метаданные.РегистрыСведений.усПроизошедшиеСкладскиеСобытия,, ТекстОшибки);\n\t\t\tКонецПопытки;\n\n\t\t\tВозврат;\n\t\tКонецЕсли;\n\tКонецЕсли;\n\n\tЕсли сткДанныеТипаСобытия.РасчетПлановогоВремениИсполненияЗадач = Перечисления.усВариантыРасчетаПлановогоВремениИсполненияЗадач.ИсполнитьВТечении Тогда\n\t\tсткДанныеТипаСобытия.Вставить(\"ПлановоеВремя\", ТекущаяДатаСеанса() + (сткДанныеТипаСобытия.ВремяИсполнения * 60));\n\tИначеЕсли сткДанныеТипаСобытия.РасчетПлановогоВремениИсполненияЗадач = Перечисления.усВариантыРасчетаПлановогоВремениИсполненияЗадач.ИсполнитьК Тогда\n\t\tЕсли (ТекущаяДатаСеанса() - НачалоДня(ТекущаяДатаСеанса())) >= (сткДанныеТипаСобытия.ИсполнитьК - '00010101') Тогда\n\t\t\tсткДанныеТипаСобытия.Вставить(\"ПлановоеВремя\", НачалоДня(ТекущаяДатаСеанса()) + 86400 + (сткДанныеТипаСобытия.ИсполнитьК - '00010101'));\n\t\tИначе\n\t\t\tсткДанныеТипаСобытия.Вставить(\"ПлановоеВремя\", НачалоДня(ТекущаяДатаСеанса()) + (сткДанныеТипаСобытия.ИсполнитьК - '00010101'));\n\t\tКонецЕсли;\n\tИначе\n\t\tсткДанныеТипаСобытия.Вставить(\"ПлановоеВремя\", ТекущаяДатаСеанса() + (усСервисныеФункцииВызовСервера.ПолучитьЗначениеКонстанты(\"усВремяИсполненияЗадачиПоУмолчанию\") * 60));\n\tКонецЕсли;\n\n\tДокументРезультат = Неопределено;\n\tУспешно = Истина;\n\tсткВозврат = Новый Структура(\"ДокументРезультат, Успешно\", ДокументРезультат, Успешно);\n\n\tПопытка\n\t\tЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.ПроизвольныйАлгоритм Тогда\n\t\t\tПроизвольныйАлгоритмОбработки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТипСобытия, \"ПроизвольныйАлгоритмОбработки\");\n\n\t\t\tУстановленБезопасныйРежим = БезопасныйРежим();\n\t\t\tУстановитьБезопасныйРежим(Истина);\n\t\t\tВыполнить(ПроизвольныйАлгоритмОбработки);\n\t\t\t\n\t\t\tЕсли Не УстановленБезопасныйРежим Тогда\n\t\t\t\tУстановитьБезопасныйРежим(Ложь);\n\t\t\tКонецЕсли;\n\t\t\t\n\t\t\tсткВозврат = Новый Структура(\"ДокументРезультат, Успешно\", ДокументРезультат, Успешно);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.СпланироватьРазмещение Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_СпланироватьРазмещение(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.СпланироватьРазмещениеТовара Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_СпланироватьРазмещениеТовара(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.ПереместитьВЗону Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_ПереместитьВЗону(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.ИзменитьСтатусКонтейнера Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_ИзменитьСтатусКонтейнера(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.СоздатьМаркировку Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_СоздатьМаркировку(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.СоздатьМаркировкуЦМТ Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_СоздатьМаркировкуЦМТ(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.СоздатьРейс Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_СоздатьРейс(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\t\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.СоздатьЗаказНаОтгрузку Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_СоздатьЗаказНаОтгрузку(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.СоздатьКонтроль Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_СоздатьКонтроль(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.Отгрузить Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_Отгрузить(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.СоздатьПредварительнуюПриемку Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_СоздатьПредварительнуюПриемку(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.СоздатьПриемку Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_СоздатьПриемку(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.СпланироватьОтбор Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_СпланироватьОтбор(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.ПередатьЗадачиВОтбор Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_ПередатьВОтбор(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.СоздатьСортировку Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_СоздатьСортировку(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.ИзменениеСтатусаТовара Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_ИзменитьСтатусТовара(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.СоздатьАктСверки Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_СоздатьАктСверки(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.СоздатьВнутреннийЗаказ Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_СоздатьВнутреннийЗаказ(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.ОтменитьОтбор Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_ОтменитьОтбор(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.ЗарегистрироватьУслугу Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_ЗарегистрироватьУслугу(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия, ДатаЗаписи);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.СоздатьКомплектацию Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_СоздатьКомплектацию(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.СпланироватьУкладку Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_СоздатьЗадачиУпаковки(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.ВыполнениеДополнительнойОперации Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_ВыполнениеДополнительнойОперации(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.СкорректироватьЗаказ Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_СкорректироватьЗаказ(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n        ИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.НапоминаниеПользователю Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_НапоминаниеПользователю(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.ОповеститьПользователя Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_ОповеститьПользователя(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.Списать Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_Списать(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.ИзменитьСтатусЯчейки Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_ИзменитьСтатусЯчейки(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\t\t\t\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.ИзменитьСостояниеКонтейнера Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_ИзменитьСостояниеКонтейнера(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\t\t#Вставка  \n\t\t// ++ Ситек Булдаков 27.12.23\n\t\tИначеЕсли сткДанныеТипаСобытия.АлгоритмОбработки = Перечисления.усАлгоритмыОбработкиСобытия.Бюро1440_ОповещениеКонтрагента Тогда\n\t\t\tсткВозврат = ОбработатьСкладскоеСобытие_ОповеститьКонтрагента(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия);\n\t\t// -- Ситек Булдаков 27.12.23\n\t\t#КонецВставки\n\t\tКонецЕсли;\n\tИсключение\n\t\tТекстОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());\n\t\tЗаписьЖурналаРегистрации(НСтр(\"ru='Обработка события';\n\t\t\t|en='Event processing'\", ОбщегоНазначения.КодОсновногоЯзыка()),\n\t\t\t\t\t\t\t\t УровеньЖурналаРегистрации.Ошибка, ДокументОснование.Метаданные(), ДокументОснование, ТекстОшибки);\n\t\tсткВозврат.Успешно = Ложь;\n\tКонецПопытки;\n\n\tтекДата = ТекущаяДатаСеанса();\n\tПопытка\n\t\tтекЗапись = РегистрыСведений.усПроизошедшиеСкладскиеСобытия.СоздатьМенеджерЗаписи();\n\t\tтекЗапись.ДокументОснование = ДокументОснование;\n\t\tтекЗапись.ДатаЗаписи        = ДатаЗаписи;\n\t\tтекЗапись.ТипСобытия        = ТипСобытия;\n\t\tтекЗапись.Прочитать();\n\t\tЕсли НЕ текЗапись.Выбран() Тогда\n        \tтекЗапись.Заполнить(Неопределено);\n      \tКонецЕсли;\t\n\t\tЕсли сткВозврат.Успешно Тогда\n\t\t\tтекЗапись.СтатусОтработки   = Перечисления.усСтатусыОтработкиСобытий.Закрыто;\n\t\t\tтекЗапись.ДокументРезультат = сткВозврат.ДокументРезультат;\n\t\tИначеЕсли текЗапись.НомерПопытки < сткДанныеТипаСобытия.КоличествоПопыток Тогда\n\t\t\tЕсли сткДанныеТипаСобытия.ВремяОбработкиСобытия = Перечисления.усВремяОбработкиСобытия.СоздатьСЗадержкой Тогда\n\t\t\t\tДатаГенерации     = текДата + (60 * сткДанныеТипаСобытия.Задержка);\n\t\t\tИначеЕсли сткДанныеТипаСобытия.ВремяОбработкиСобытия = Перечисления.усВремяОбработкиСобытия.ВОпределенноеВремя Тогда\n\t\t\t\tСекундСНачалаДня = сткДанныеТипаСобытия.ВремяСозданияЗадачи - '00010101000000';\n\t\t\t\tЕсли текДата - НачалоДня(текДата) > СекундСНачалаДня Тогда\n\t\t\t\t\tДатаГенерации = НачалоДня(текДата) + 86400 + СекундСНачалаДня;\n\t\t\t\tИначе\n\t\t\t\t\tДатаГенерации = НачалоДня(текДата) + СекундСНачалаДня;\n\t\t\t\tКонецЕсли;\n\t\t\tИначе\n\t\t\t\tДатаГенерации     = текДата;\n\t\t\tКонецЕсли;\n\t\t\tтекЗапись.ДатаГенерации     = ДатаГенерации;\n\t\t\tтекЗапись.НомерПопытки      = текЗапись.НомерПопытки + 1;\n\t\t\tтекЗапись.СтатусОтработки   = Перечисления.усСтатусыОтработкиСобытий.Открыто;\n\t\tИначе\n\t\t\tтекЗапись.СтатусОтработки   = Перечисления.усСтатусыОтработкиСобытий.ОшибкаОбработки;\n\t\t\tтекЗапись.ДокументРезультат = Неопределено;\n\t\tКонецЕсли;\n\t\tтекЗапись.ДатаОтработки     = текДата;\n\t\tтекЗапись.Записать();\n\tИсключение\n\t\tТекстОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());\n\t\tЗаписьЖурналаРегистрации(ИмяСобытияЗапись,\n\t\t\t\t\t\t\t\t УровеньЖурналаРегистрации.Ошибка, Метаданные.РегистрыСведений.усПроизошедшиеСкладскиеСобытия,, ТекстОшибки);\n\tКонецПопытки;\n\nКонецПроцедуры   \n\nФункция ОбработатьСкладскоеСобытие_ОповеститьКонтрагента(ДокументОснование, ТипСобытия, сткДанныеТипаСобытия)\n\tсткДанные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТипСобытия, \"ШаблонПисьма, Наименование\");\n\tсткВозврат = Новый Структура(\"ДокументРезультат, Успешно\", Неопределено, Истина);\n\n\tМассивКонтрагентов\t= Новый Массив;\n\tЕсли сткДанныеТипаСобытия.ТипИсходногоДействия = Перечисления.усТипыДействийСобытий.ЗаписьЗаказаНаОтгрузку\n\t\tИЛИ сткДанныеТипаСобытия.ТипИсходногоДействия = Перечисления.усТипыДействийСобытий.ИзменениеСтатусаЗаказаНаОтгрузку\n\t\tИЛИ сткДанныеТипаСобытия.ТипИсходногоДействия = Перечисления.усТипыДействийСобытий.КонтрольноеВремяПоЗаказуНаОтгрузку Тогда\n\t\t\tКонтрагент\t= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, \"Контрагент\");\n\t\t\tМассивКонтрагентов.Добавить(Контрагент);\n\tИначеЕсли сткДанныеТипаСобытия.ТипИсходногоДействия = Перечисления.усТипыДействийСобытий.ЗаписьРейса\n\t\tИЛИ сткДанныеТипаСобытия.ТипИсходногоДействия = Перечисления.усТипыДействийСобытий.ИзменениеСтатусаРейса Тогда\n\t\t\tЗапрос\t= Новый Запрос;  \n\t\t\tЗапрос.УстановитьПараметр(\"ДокументОснование\", ДокументОснование);\n\t\t\tЗапрос.Текст\t= \"ВЫБРАТЬ\n\t\t\t            \t  |\tусЗаказНаОтгрузку.Контрагент КАК Контрагент\n\t\t\t            \t  |ИЗ\n\t\t\t            \t  |\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t\t\t            \t  |ГДЕ\n\t\t\t            \t  |\tусЗаказНаОтгрузку.Рейс = &ДокументОснование\"; \n\t\t\tРезультатЗапроса\t= Запрос.Выполнить().Выгрузить();\n\t\t\tМассивКонтрагентов\t= РезультатЗапроса.ВыгрузитьКолонку(\"Контрагент\"); \n\tИначеЕсли сткДанныеТипаСобытия.ТипИсходногоДействия = Перечисления.усТипыДействийСобытий.ИзменениеСтатусаВолны Тогда\n\t\tЗапрос\t= Новый Запрос;  \n\t\tЗапрос.УстановитьПараметр(\"ДокументОснование\", ДокументОснование);\n\t\tЗапрос.Текст\t= \"ВЫБРАТЬ\n\t\t            \t  |\tусЗаказНаОтгрузку.Контрагент КАК Контрагент\n\t\t            \t  |ИЗ\n\t\t            \t  |\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t\t            \t  |ГДЕ\n\t\t            \t  |\tусЗаказНаОтгрузку.Волна = &ДокументОснование\"; \n\t\tРезультатЗапроса\t= Запрос.Выполнить().Выгрузить();\n\t\tМассивКонтрагентов\t= РезультатЗапроса.ВыгрузитьКолонку(\"Контрагент\");\n\tИначеЕсли сткДанныеТипаСобытия.ТипИсходногоДействия = Перечисления.усТипыДействийСобытий.ИзменениеСтатусаГруппыОтбора Тогда\n\t    Запрос\t= Новый Запрос;  \n\t\tЗапрос.УстановитьПараметр(\"ДокументОснование\", ДокументОснование);\n\t\tЗапрос.Текст\t= \"ВЫБРАТЬ\n\t\t            \t  |\tусЗаказНаОтгрузку.Контрагент КАК Контрагент\n\t\t            \t  |ИЗ\n\t\t            \t  |\tДокумент.усЗаказНаОтгрузку КАК усЗаказНаОтгрузку\n\t\t            \t  |ГДЕ\n\t\t            \t  |\tусЗаказНаОтгрузку.ГруппаОтбора = &ДокументОснование\"; \n\t\tРезультатЗапроса\t= Запрос.Выполнить().Выгрузить();\n\t\tМассивКонтрагентов\t= РезультатЗапроса.ВыгрузитьКолонку(\"Контрагент\");\n\tИначеЕсли сткДанныеТипаСобытия.ТипИсходногоДействия = Перечисления.усТипыДействийСобытий.ИзменениеСтатусаВнутреннегоЗаказа Тогда \n\t\tЗапрос\t= Новый Запрос;  \n\t\tЗапрос.УстановитьПараметр(\"ДокументОснование\", ДокументОснование);\n\t\tЗапрос.Текст\t= \"ВЫБРАТЬ\n\t\t            \t  |\tусВнутреннийЗаказ.ЗаказНаОтгрузку.Контрагент КАК Контрагент\n\t\t            \t  |ИЗ\n\t\t            \t  |\tДокумент.усВнутреннийЗаказ КАК усВнутреннийЗаказ\n\t\t            \t  |ГДЕ\n\t\t            \t  |\tусВнутреннийЗаказ.Ссылка = &ДокументОснование\"; \n\t\tРезультатЗапроса\t= Запрос.Выполнить().Выгрузить();\n\t\tМассивКонтрагентов\t= РезультатЗапроса.ВыгрузитьКолонку(\"Контрагент\");\n\tИначе\n\t\tТекстОшибки = НСтр(\"ru = 'Не известное событие'\");\n\t\tЗаписьЖурналаРегистрации(НСтр(\"ru = 'Обработка события'; en = 'Event processing'\", ОбщегоНазначения.КодОсновногоЯзыка()),\n\t\t\t\t\t\t\t\t\t\t УровеньЖурналаРегистрации.Ошибка, ДокументОснование.Метаданные(), ДокументОснование, ТекстОшибки);\n\t\tсткВозврат.Успешно = Ложь;\n\t\tВозврат сткВозврат;\n\tКонецЕсли;\n\n\tТема\t\t= \"\";\n\tТекст\t\t= \"\";\n\tТипТекста\t= \"\";\n\t\n\tУстановитьБезопасныйРежим(Истина);\n\tЕсли ЗначениеЗаполнено(сткДанные.ШаблонПисьма) Тогда\n\t\tУстановитьБезопасныйРежим(Истина);\n\t\tВыполнить(сткДанные.ШаблонПисьма);\n\t\tУстановитьБезопасныйРежим(Ложь);\n\tКонецЕсли;\n\tУстановитьБезопасныйРежим(Ложь);\n\n\tЕсли Тема = \"\" Тогда\n\t\tТема = сткДанные.Наименование + \" \" + Строка(ДокументОснование);\n\tКонецЕсли;  \n\t\n\tМассивПолучателей = Новый Массив;  \n\t\n\tТаблицаАдресов\t= УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(МассивКонтрагентов, , Справочники.ВидыКонтактнойИнформации.EmailКонтрагенты); \n\tДля каждого СтрокаАдреса Из ТаблицаАдресов Цикл\n\t\tАдрес\t= СтрокаАдреса.Представление;\n\t\tЕсли Не ЗначениеЗаполнено(Адрес) Тогда \n\t\t\tТекстОшибки = СтрШаблон(НСтр(\"ru = 'Не указан e-mail получателя письма %1'; en = 'The %1 email recipient address is not specified'\"), СтрокаАдреса.Объект);\n\t\t\tЗаписьЖурналаРегистрации(НСтр(\"ru = 'Обработка события'; en = 'Event processing'\", ОбщегоНазначения.КодОсновногоЯзыка()),\n\t\t\t\t\t\t\t\t\t\t УровеньЖурналаРегистрации.Ошибка, ДокументОснование.Метаданные(), ДокументОснование, ТекстОшибки); \n\t\t\tПродолжить; \n\t\tКонецЕсли; \n\t\t\n\t\tМассивПолучателей.Добавить(Новый Структура(\"Адрес, Представление\", Адрес, Строка(СтрокаАдреса.Объект)));\n\tКонецЦикла;\n\t\n\tПисьмо = РаботаСПочтовымиСообщениями.ПодготовитьПисьмо(Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты,\n\t\t\t Новый Структура(\"Кому, Тело, Тема, ТипТекста\", МассивПолучателей, Текст, Тема, ТипТекста));\n\n\tРаботаСПочтовымиСообщениями.ОтправитьПисьмо(Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты, Письмо);\n\t\n\tВозврат сткВозврат;\nКонецФункции\n// -- Ситек Булдаков 27.12.23",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\усТСДОсновной\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\усТСДОсновной\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": "1C Enterprise",
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/044b179cece4c0f10c519bc0e123349e3a1270d5/_bsl%5CResources%5C726598511%5CCommonModule%5C%D1%83%D1%81%D0%A2%D0%A1%D0%94%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D0%BD%D0%BE%D0%B9%5CCommonModule.obj.bsl",
            "size": 402386,
            "truncated": true,
            "content": "#Область ПрограммныйИнтерфейс\n\n//++Крутских Ситек 18.02.25++\n&Вместо(\"ПолучитьСтраницу\")\nФункция Бюро1440_ПолучитьСтраницу(IMEI, Операция, Страница, текДействие, IDUser, сткПараметры)   \n\tФорма = ПродолжитьВызов(IMEI, Операция, Страница, текДействие, IDUser, сткПараметры);\n   // ++ Ситек Ситников А.В. 29.10.2024 Перевод номенклатуры на учёт в разрезе сроков годности\n\tЕсли Операция = \"ВводСрокаХранения\" Тогда\n\t\tФорма = усТСДСервисныеФункции.ПолучитьФорму_ВводСрокаХранения(Страница, текДействие);\n\t\t// -- Ситек Ситников А.В. 29.10.2024 Перевод номенклатуры на учёт в разрезе сроков годности  \n\tКонецЕсли;\n\nВозврат Форма;\n\n\nКонецФункции \n//--Крутских Ситек 18.02.25\n\n //++Крутских Ситек 18.02.25++\n&Вместо(\"ОбработатьДанные\")\nФункция Бюро1440_ОбработатьДанные(сткПараметры, сткДанные, текДействие)\n   ТекущаяОперация = сткПараметры.Операция;\n\t   // ++ Ситек Ситников А.В. 29.10.2024 Перевод номенклатуры на учёт в разрезе сроков годности\n\tЕсли ТекущаяОперация = \"ВводСрокаХранения\" Тогда\n\t\tусТСДСервисныеФункции.ОбработатьПараметры_ВводСрокаХранения(сткПараметры, сткДанные, текДействие);\n\t// -- Ситек Ситников А.В. 29.10.2024 Перевод номенклатуры на учёт в разрезе сроков годности  \n\n\t\n\t\tсткПараметры.Страница = Формат(сткПараметры.Страница, \"ЧГ=0\");\n\t\tсткПараметры.СледующаяСтраница = Формат(сткПараметры.СледующаяСтраница, \"ЧГ=0\");\n\t\tсткПараметры.ПредыдущаяСтраница = Формат(сткПараметры.ПредыдущаяСтраница, \"ЧГ=0\");\n\n\t\tВозврат сткПараметры; \n\tИначе    \n\t\tВозврат ПродолжитьВызов(сткПараметры, сткДанные, текДействие);\n\tКонецЕсли;\n\nКонецФункции \n//--Крутских Ситек 18.02.25\n\n#КонецОбласти\n\n#Область СлужебныеПроцедурыИФункции\n\n#Область СтандартныеФормы\n\n&ИзменениеИКонтроль(\"ПолучитьСтандартнуюФормуТСД_ПараметрыПартии\")\nФункция Бюро1440_ПолучитьСтандартнуюФормуТСД_ПараметрыПартии(ШиринаПодписи, текДействие, Страница)\n\n\tсткВидимость = ПолучитьВидимостьЭлементовПартии(Страница);\n\n\tТипЭлемента = \"\";\n\tСмещение    = Страница%5;\n\n\tНомерПредыдущейСтраницы = Страница;\n\tНомерСледующейСтраницы  = Страница;\n\n\txdtoСтраница = усТСДЭлементыФорм.ПолучитьСтраницу(, Страница, Ложь);\n\txdtoПоследовательность = xdtoСтраница.Последовательность();\n\n\tСтраницаДопРеквизиты = Ложь;\n\tСтраницаШКПроизводителя = Ложь;\n\tДополнительныеРеквизиты = ПараметрыПартии_ПолучитьДополнительныеРеквизиты();\n\tЕсли ДополнительныеРеквизиты=Неопределено Тогда\n\t\tЕсли Страница>=10000 Тогда\n\t\t\tСтраница=400+Страница%100;\n\t\tКонецЕсли;\n\tКонецЕсли;\n\tЕсли Страница>=2000 И Страница<2100 Тогда\n\t\tСтраницаШКПроизводителя = Истина;\n\tИначеЕсли Страница>=10000 Тогда\n\t\tСтраницаДопРеквизиты = Истина;\n\t\tНомерДопРеквизита = Цел((Страница-10000)/100);\n\tКонецЕсли;\n\n\t// элементы\n\tусТСДЭлементыФорм.ДобавитьЗаголовок(xdtoПоследовательность, xdtoСтраница, \"[##Заголовок##]\", Истина);\n\tусТСДЭлементыФорм.ДобавитьЗаголовок(xdtoПоследовательность, xdtoСтраница, НСтр(\"ru='НОВАЯ ПАРТИЯ';\n\t\t|en='NEW BATCH'\"));\n\tусТСДЭлементыФорм.ДобавитьТекст(xdtoПоследовательность, xdtoСтраница, \"[##прНоменклатура##]\", Истина, \"Bold\");\n\n\tЕсли сткВидимость.НомерПартии Тогда\n\t\tЕсли Смещение = 0 И НЕ СтраницаДопРеквизиты И НЕ СтраницаШКПроизводителя Тогда\n\t\t\tусТСДЭлементыФорм.ДобавитьАктивноеПолеВвода(xdtoПоследовательность, xdtoСтраница, \"НомерПартии\", НСтр(\"ru='№ партии:';\n\t\t\t\t|en='Batch No.:'\"),,,,, 80);\n\t\t\tТипЭлемента = \"НомерПартии\";\n\t\t\tНомерСледующейСтраницы = Страница + ?(сткВидимость.ДатаПартии, 1, ?(сткВидимость.СрокГодности ИЛИ сткВидимость.ДатаПроизводства,  2, 0));\n\t\tИначе\n\t\t\tусТСДЭлементыФорм.ДобавитьНеактивноеПолеВвода(xdtoПоследовательность, xdtoСтраница, \"НомерПартии\", НСтр(\"ru='№ партии:';\n\t\t\t\t|en='Batch No.:'\"), \"[##НомерПартии##]\", Истина, 80);\n\t\tКонецЕсли;\n\tКонецЕсли;\n\tЕсли сткВидимость.ДатаПартии Тогда\n\t\tЕсли (ТипЭлемента = \"\" И Смещение = 0 ИЛИ Смещение = 1) И НЕ СтраницаДопРеквизиты И НЕ СтраницаШКПроизводителя Тогда\n\t\t\tусТСДЭлементыФорм.ДобавитьАктивноеПолеВвода(xdtoПоследовательность, xdtoСтраница, \"ДатаПартии\", НСтр(\"ru='Дата партии:';\n\t\t\t\t|en='Batch date:'\"),,,,, 80,, \"Date\");\n\t\t\tТипЭлемента = \"ДатаПартии\";\n\t\t\tНомерСледующейСтраницы = Страница + ?(сткВидимость.СрокГодности ИЛИ сткВидимость.ДатаПроизводства,  ?(сткВидимость.НомерПартии, 1, 2), 0);\n\t\tИначе\n\t\t\tусТСДЭлементыФорм.ДобавитьНеактивноеПолеВвода(xdtoПоследовательность, xdtoСтраница, \"ДатаПартии\", НСтр(\"ru='Дата партии:';\n\t\t\t\t|en='Batch date:'\"), \"[##ДатаПартии##]\", Истина, 80);\n\t\tКонецЕсли;\n\tКонецЕсли;\n\tЕсли сткВидимость.СрокГодности Тогда\n\t\tЕсли (ТипЭлемента = \"\" И Смещение = 0 ИЛИ Смещение = 2) И НЕ СтраницаДопРеквизиты И НЕ СтраницаШКПроизводителя Тогда\n\t\t\t#Удаление\n\t\t\tусТСДЭлементыФорм.ДобавитьАктивноеПолеВвода(xdtoПоследовательность, xdtoСтраница, \"СрокГодности\", НСтр(\"ru='Срок годн.:';\n\t\t\t\t|en='Shelf life:'\"),,,,, 75,, \"Date\");\n\t\t\tТипЭлемента = \"СрокГодности\";\n\t\t\t#КонецУдаления\n\t\t\t#Вставка  \n\t\t\t// ++ Ситек Булдаков 25.12.23\n\t\t\tЕсли текДействие.РабочийПоток.СкладскаяОперация = Справочники.усСкладскиеОперации.ПриемкаПослеПредварительнойПриемки ИЛИ текДействие.РабочийПоток.СкладскаяОперация = Справочники.усСкладскиеОперации.Приемка Тогда\n\t\t\t\tусТСДЭлементыФорм.ДобавитьАктивноеПолеВвода(xdtoПоследовательность, xdtoСтраница, \"СрокГодности\", НСтр(\"ru = 'Дата окончания срока годности.:'; en = 'Shelf life:'\"),,,,, 75,, \"Date\");\n\t\t\t\tТипЭлемента = \"СрокГодности\";\t\t\t\t\n\t\t\tИначе\t\t\t\n\t\t\t\tусТСДЭлементыФорм.ДобавитьАктивноеПолеВвода(xdtoПоследовательность, xdtoСтраница, \"СрокГодности\", НСтр(\"ru = 'Срок годн.:'; en = 'Shelf life:'\"),,,,, 75,, \"Date\");\n\t\t\t\tТипЭлемента = \"СрокГодности\";\n\t\t\tКонецЕсли;\n\t\t\t// -- Ситек Булдаков 25.12.23\n\t\t\t#КонецВставки \n\t\tИначе\n\t\t\tусТСДЭлементыФорм.ДобавитьНеактивноеПолеВвода(xdtoПоследовательность, xdtoСтраница, \"СрокГодности\", НСтр(\"ru='Срок годн.:';\n\t\t\t\t|en='Shelf life:'\"), \"[##СрокГодности##]\", Истина, 80);\n\t\tКонецЕсли;\n\tКонецЕсли;\n\tЕсли сткВидимость.ДатаПроизводства Тогда\n\t\tЕсли (ТипЭлемента = \"\" И Смещение = 0 ИЛИ Смещение = 2) И НЕ СтраницаДопРеквизиты И НЕ СтраницаШКПроизводителя Тогда\n\t\t\tусТСДЭлементыФорм.ДобавитьАктивноеПолеВвода(xdtoПоследовательность, xdtoСтраница, \"ДатаПроизводства\", НСтр(\"ru='Дата произв.:';\n\t\t\t\t|en='Production date:'\"),,,,, 75,, \"Date\");\n\t\t\tТипЭлемента = \"ДатаПроизводства\";\n\t\tИначе\n\t\t\tусТСДЭлементыФорм.ДобавитьНеактивноеПолеВвода(xdtoПоследовательность, xdtoСтраница, \"ДатаПроизводства\", НСтр(\"ru='Дата произв.:';\n\t\t\t\t|en='Production date:'\"), \"[##ДатаПроизводства##]\", Истина, 80);\n\t\tКонецЕсли;\n\tКонецЕсли;\n\n\tВыбратьИзСписка=Ложь;\n\tЕсли ДополнительныеРеквизиты<>Неопределено Тогда\n\t\tинд=0;\n\t\tПока инд < ДополнительныеРеквизиты.Количество() Цикл\n\t\t\tДопРеквизит=\"ДопРеквизитСправочника\"+Строка(инд+1);\n\t\t\tПолеТекст = ДополнительныеРеквизиты[инд].Наименование;\n\n\t\t\tЕсли НомерДопРеквизита = инд Тогда\n\n\t\t\t\tТипЗначения = ДополнительныеРеквизиты[инд].Тип;\n\t\t\t\tТипТекст = \"String\";\n\n\t\t\t\tЕсли ТипЗначения = Тип(\"Число\") Тогда\n\t\t\t\t\tТипТекст = \"float\";\n\t\t\t\tИначеЕсли ТипЗначения = Тип(\"Дата\") Тогда\n\t\t\t\t\tТипТекст = \"Date\";\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tусТСДЭлементыФорм.ДобавитьАктивноеПолеВвода(xdtoПоследовательность, xdtoСтраница, ДопРеквизит, ПолеТекст+\":\",,,,, 75,, ТипТекст);\n\t\t\t\tТипЭлемента = ДопРеквизит;\n\n\t\t\t\tОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗначения);\n\t\t\t\tЕсли ОбъектМетаданных <> Неопределено И ОбщегоНазначения.ЭтоСправочник(ОбъектМетаданных) Тогда\n\t\t\t\t\tВыбратьИзСписка = Истина;\n\t\t\t\tКонецЕсли;\n\n\t\t\t\tНомерСледующейСтраницы = Страница + 100;\n\t\t\tИначе\n\t\t\t\tусТСДЭлементыФорм.ДобавитьНеактивноеПолеВвода(xdtoПоследовательность, xdtoСтраница, ДопРеквизит, ПолеТекст+\":\", \"[##пр\"+ДопРеквизит+\"##]\", Истина, 80);\n\t\t\tКонецЕсли;\n\t\t\tинд=инд+1;\n\t\tКонецЦикла;\n\n\t\tЕсли НомерСледующейСтраницы = Страница И НомерСледующейСтраницы < 10000 Тогда\n\t\t\tЕсли НомерСледующейСтраницы > 2000 Тогда\n\t\t\t\tНомерСледующейСтраницы = Страница - 2000 + 400;\n\t\t\tКонецЕсли;\n\t\t\tНомерСледующейСтраницы = Страница + 10000 - 400;\n\t\tКонецЕсли;\n\n\t\tЕсли Страница >= 10100 Тогда\n\t\t\tНомерПредыдущейСтраницы = Страница-100;\n\t\tИначеЕсли Страница >= 10000 Тогда\n\t\t\tНомерПредыдущейСтраницы = Страница-10000+400;\n\t\t\tЕсли сткВидимость.СрокГодности И ПолучитьФункциональнуюОпцию(\"усИспользуетсяУчетСерийныхНомеровТовара\") Тогда\n\t\t\t\tНомерПредыдущейСтраницы = НомерПредыдущейСтраницы + 2000 - 400;\n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\n\n\tКонецЕсли;\n\n\tЕсли ТипЭлемента = \"\" Тогда\n\t\tусТСДЭлементыФорм.ДобавитьКнопкиДаНет(xdtoПоследовательность, xdtoСтраница, НСтр(\"ru='Да';\n\t\t\t|en='Yes'\"), НСтр(\"ru='Нет';\n\t\t\t|en='No'\"));\n\t\tЕсли НЕ СтраницаДопРеквизиты Тогда\n\t\t\tНомерПредыдущейСтраницы = Страница - 1;\n\t\tКонецЕсли;\n\tКонецЕсли;\n\n\tЕсли ТипЭлемента = \"НомерПартии\" Тогда\n\t\tусТСДЭлементыФорм.ДобавитьКомментарий(xdtoПоследовательность, xdtoСтраница, \"[##Ошибка##]\" + НСтр(\"ru='Введите номер партии товара';\n\t\t\t|en='Enter goods batch number'\"), Истина);\n\tИначеЕсли ТипЭлемента = \"ДатаПартии\" Тогда\n\t\tусТСДЭлементыФорм.ДобавитьКомментарий(xdtoПоследовательность, xdtoСтраница, \"[##Ошибка##]\" + НСтр(\"ru='Введите дату партии товара';\n\t\t\t|en='Enter goods batch date'\"), Истина);\n\tИначеЕсли ТипЭлемента = \"СрокГодности\" Тогда\n\t\tусТСДЭлементыФорм.ДобавитьКомментарий(xdtoПоследовательность, xdtoСтраница, \"[##Ошибка##]\" + НСтр(\"ru='Введите срок годности товара';\n\t\t\t|en='Enter goods shelf life'\"), Истина);\n\tИначеЕсли ТипЭлемента = \"ДатаПроизводства\" Тогда\n\t\tусТСДЭлементыФорм.ДобавитьКомментарий(xdtoПоследовательность, xdtoСтраница, \"[##Ошибка##]\" + НСтр(\"ru='Введите дату производства товара';\n\t\t\t|en='Enter goods production date'\"), Истина);\n\tИначеЕсли СтраницаДопРеквизиты Тогда\n\t\tЕсли ТипЭлемента <> \"\" Тогда\n\t\t\tусТСДЭлементыФорм.ДобавитьКомментарий(xdtoПоследовательность, xdtoСтраница, \"[##Ошибка##]\" + НСтр(\"ru='Введите значение';\n\t\t\t\t|en='Enter value'\"), Истина);\n\t\tИначе\n\t\t\tусТСДЭлементыФорм.ДобавитьКомментарий(xdtoПоследовательность, xdtoСтраница, \"[##Ошибка##]\" + НСтр(\"ru='Создать партию?';\n\t\t\t\t|en='Create batch?'\"), Истина);\n\t\tКонецЕсли;\n\tИначе\n\t\tусТСДЭлементыФорм.ДобавитьКомментарий(xdtoПоследовательность, xdtoСтраница, \"[##Ошибка##]\" + НСтр(\"ru='Товар просрочен. Создать партию?';\n\t\t\t|en='Goods are expired. Create batch?'\"), Истина);\n\tКонецЕсли;\n\tусТСДЭлементыФорм.ДобавитьПодсказку(xdtoПоследовательность, xdtoСтраница, \"[##Подсказка##]\", Истина);\n\n\tКомандаВернуться = ПолучитьСочетаниеКнопок(Справочники.усКомандыРадиотерминалов.СтандартныеФункцииВернуться);\n\n\t// меню\n\tДеревоМеню = усТСДЭлементыФорм.СформироватьДеревоМеню();\n\tЕсли ВыбратьИзСписка Тогда\n\t\tНовыйПункт = ДеревоМеню.Строки.Добавить();\n\t\tНовыйПункт.Наименование = НСтр(\"ru='Выбрать из списка';\n\t\t\t|en='Select from list'\");\n\tКонецЕсли;\n\tНовыйПункт = ДеревоМеню.Строки.Добавить();\n\tНовыйПункт.Наименование = КомандаВернуться.Описание;\n\tусТСДЭлементыФорм.ДобавитьМеню(xdtoПоследовательность, xdtoСтраница, ДеревоМеню);\n\n\txdtoСобытия = усТСДЭлементыФорм.ПолучитьСобытия(xdtoПоследовательность, xdtoСтраница);\n\n\t// обработчики событий\n\tЕсли ТипЭлемента = \"\" Тогда// вопрос\n\t\t// да\n\t\tмсвУсловий = Новый Массив;\n\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Операция\", \"[##ПредыдущаяОперация##]\", Истина));\n\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Страница\", \"[##ПредыдущаяСтраница##]\", Истина));\n\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Поддействие\", \"СоздатьПартию\"));\n\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеВызовВебСервисаДанные());\n\t\tЕсли ДополнительныеРеквизиты<>Неопределено Тогда\n\t\t\tинд=0;\n\t\t\tПока инд < ДополнительныеРеквизиты.Количество() Цикл\n\t\t\t\tДопРеквизит=\"ДопРеквизитСправочника\"+Строка(инд+1);\n\t\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(ДопРеквизит, \"\"));\n\t\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"пр\"+ДопРеквизит, \"\"));\n\t\t\t\tинд=инд+1;\n\t\t\tКонецЦикла;\n\t\tКонецЕсли;\n\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеПереходКСледующейСтранице(\"[##Операция##]\", \"[##Страница##]\", Истина));\n\t\tусТСДЭлементыФорм.ДобавитьСобытиеНажатияКнопки(xdtoСобытия, \"кнДа\", мсвУсловий);\n\n\t\t// нет\n\t\tмсвУсловий = Новый Массив;\n\t\tЕсли НомерПредыдущейСтраницы = Страница Тогда\n\t\t\tЕсли ДополнительныеРеквизиты<>Неопределено Тогда\n\t\t\t\tинд=0;\n\t\t\t\tПока инд < ДополнительныеРеквизиты.Количество() Цикл\n\t\t\t\t\tДопРеквизит=\"ДопРеквизитСправочника\"+Строка(инд+1);\n\t\t\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(ДопРеквизит, \"\"));\n\t\t\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"пр\"+ДопРеквизит, \"\"));\n\t\t\t\t\tинд=инд+1;\n\t\t\t\tКонецЦикла;\n\t\t\tКонецЕсли;\n\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Операция\", \"[##ПредыдущаяОперация##]\", Истина));\n\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Страница\", \"[##ПредыдущаяСтраница##]\", Истина));\n\t\tИначе\n\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Страница\", НомерПредыдущейСтраницы));\n\t\tКонецЕсли;\n\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеПереходКСледующейСтранице(\"[##Операция##]\", \"[##Страница##]\", Истина));\n\t\tусТСДЭлементыФорм.ДобавитьСобытиеНажатияКнопки(xdtoСобытия, \"кнНет\", мсвУсловий);\n\tИначе\n\t\tмсвУсловий = Новый Массив;\n\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Ошибка\", \"\"));\n\t\tЕсли СтраницаДопРеквизиты Тогда\n\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Поддействие\", \"ВведенДопРеквизит\"));\n\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеВызовВебСервисаДанные());\n\t\tИначе\n\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьУсловиеПроверкиНезаполненности(ТипЭлемента, \"СтандартнаяФорма\", Страница));\n\t\t\tЕсли ТипЭлемента = \"ДатаПроизводства\" ИЛИ ТипЭлемента = \"СрокГодности\" Тогда\n\t\t\t\tПараметрыПартии_Дата_ПолучитьУсловиеДаты(мсвУсловий, ТипЭлемента);\n\t\t\tКонецЕсли;\n\t\t\tЕсли НомерСледующейСтраницы = Страница Тогда\n\t\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Операция\", \"[##ПредыдущаяОперация##]\", Истина));\n\t\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Страница\", \"[##ПредыдущаяСтраница##]\", Истина));\n\t\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Поддействие\", \"СоздатьПартию\"));\n\t\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеВызовВебСервисаДанные());\n\t\t\tИначе\n\t\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Страница\", НомерСледующейСтраницы));\n\t\t\tКонецЕсли;\n\t\tКонецЕсли;\n\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеПереходКСледующейСтранице(\"[##Операция##]\", \"[##Страница##]\", Истина));\n\t\tусТСДЭлементыФорм.ДобавитьСобытияВводаЗначения(xdtoСобытия, ТипЭлемента, мсвУсловий,, Ложь);\n\n\t\t// возврат назад\n\t\tмсвУсловий = Новый Массив;\n\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Ошибка\", \"\"));\n\t\tЕсли НомерПредыдущейСтраницы = Страница Тогда\n\t\t\tЕсли ДополнительныеРеквизиты<>Неопределено Тогда\n\t\t\t\tинд=0;\n\t\t\t\tПока инд < ДополнительныеРеквизиты.Количество() Цикл\n\t\t\t\t\tДопРеквизит=\"ДопРеквизитСправочника\"+Строка(инд+1);\n\t\t\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(ДопРеквизит, \"\"));\n\t\t\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"пр\"+ДопРеквизит, \"\"));\n\t\t\t\t\tинд=инд+1;\n\t\t\t\tКонецЦикла;\n\t\t\tКонецЕсли;\n\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Операция\", \"[##ПредыдущаяОперация##]\", Истина));\n\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Страница\", \"[##ПредыдущаяСтраница##]\", Истина));\n\t\tИначе\n\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Страница\", НомерПредыдущейСтраницы));\n\t\tКонецЕсли;\n\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеПереходКСледующейСтранице(\"[##Операция##]\", \"[##Страница##]\", Истина));\n\t\tусТСДЭлементыФорм.ДобавитьСобытияВозвратаНазад(xdtoСобытия, ТипЭлемента, мсвУсловий);\n\tКонецЕсли;\n\n\t// выбрать из списка\n\tЕсли ВыбратьИзСписка Тогда\n\t\tмсвУсловий = Новый Массив;\n\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"ДинамическаяФорма\", \"ВыборИзСписка\"));\n\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Поддействие\", \"\"));\n\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Ошибка\",      \"\"));\n\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеВызовВебСервисаДинамическаяФорма());\n\t\tусТСДЭлементыФорм.ДобавитьСобытиеНажатияКнопки(xdtoСобытия, НСтр(\"ru='Выбрать из списка';\n\t\t\t|en='Select from list'\"), мсвУсловий);\n\t\tусТСДЭлементыФорм.ДобавитьСобытиеНажатияГорячейКнопки(xdtoСобытия, ТипЭлемента, Ложь, Ложь, Ложь, 115, мсвУсловий);\n\tКонецЕсли;\n\n\t// вернуться\n\tмсвУсловий = Новый Массив;\n\tЕсли ДополнительныеРеквизиты<>Неопределено Тогда\n\t\tинд=0;\n\t\tПока инд < ДополнительныеРеквизиты.Количество() Цикл\n\t\t\tДопРеквизит=\"ДопРеквизитСправочника\"+Строка(инд+1);\n\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(ДопРеквизит, \"\"));\n\t\t\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"пр\"+ДопРеквизит, \"\"));\n\t\t\tинд=инд+1;\n\t\tКонецЦикла;\n\tКонецЕсли;\n\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Операция\", \"[##ПредыдущаяОперация##]\", Истина));\n\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Страница\", \"[##ПредыдущаяСтраница##]\", Истина));\n\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеПереходКСледующейСтранице(\"[##Операция##]\", \"[##Страница##]\", Истина));\n\tусТСДЭлементыФорм.ДобавитьСобытиеНажатияКнопки(xdtoСобытия, КомандаВернуться.Описание, мсвУсловий);\n\tЕсли КомандаВернуться.Кнопка <> 0 Тогда\n\t\tусТСДЭлементыФорм.ДобавитьСобытиеНажатияГорячейКнопки(xdtoСобытия,, КомандаВернуться.Alt, КомандаВернуться.Ctrl, КомандаВернуться.Shift, КомандаВернуться.Кнопка, мсвУсловий);\n\tКонецЕсли;\n\n\tВозврат xdtoСтраница;\n\nКонецФункции\n\n// Добавляет условие перехода к новой странице\n//\n// Параметры:\n//  мсвУсловий - Массив, условия\n//  Параметр   - Строка - имя параметра\n//\n// Возвращаемое значение:\n//  xdtoУсловие - значение XDTO\n//\nПроцедура Вопрос_ПолучитьУсловиеПереходаКНовойСтраницеПереопр(мсвУсловий, НоваяСтраница, НовоеДействие, Нет = Ложь) //Ситек ICT-41402 Николаев ++\n\t\t\n\t// восстановить операцию\n\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Операция\", \"[##ПредыдущаяОперация##]\", Истина));\n\n\t// новая страница установлена?\n\txdtoУсловие  = усТСДЭлементыФорм.ПолучитьУсловие(\"[##\"+НоваяСтраница+\"##]\", \"null\", \"!=\");\n\txdtoПоследовательностьУсловие = xdtoУсловие.Последовательность();\n\n\txdtoДействие = усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Страница\", \"[##\"+НоваяСтраница+\"##]\", Истина);\n\txdtoПоследовательностьУсловие.Добавить(xdtoУсловие.Свойства().Получить(\"Action\"), xdtoДействие); \n\t\n\t//Надо вызвать поддействие, это этим условием оно не вызывается в случае когда нет \n\t//ошибка когда страница после нажатия не изменяется в начальной операции, то невозможно обнулить параметр Ответ\n\tЕсли Нет Тогда  \n\t\txdtoДействие       = усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Поддействие\", \"[##\"+НовоеДействие+\"##]\", Истина);\n\t\txdtoПоследовательностьУсловие.Добавить(xdtoУсловие.Свойства().Получить(\"Action\"), xdtoДействие);\n\t\t\n\t\txdtoДействие       = усТСДЭлементыФорм.ПолучитьДействиеВызовВебСервисаДанные();\n\t\txdtoПоследовательностьУсловие.Добавить(xdtoУсловие.Свойства().Получить(\"Action\"), xdtoДействие);\t\t\n\tКонецЕсли;\n\n\txdtoДействие = усТСДЭлементыФорм.ПолучитьДействиеПереходКСледующейСтранице(\"[##Операция##]\", \"[##Страница##]\", Истина);\n\txdtoПоследовательностьУсловие.Добавить(xdtoУсловие.Свойства().Получить(\"Condition\"), xdtoДействие);\n\n\tмсвУсловий.Добавить(xdtoУсловие);\n\n\t// установить новое поддействие\n\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Поддействие\", \"[##\"+НовоеДействие+\"##]\", Истина));\n\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеВызовВебСервисаДанные());\n\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеПереходКСледующейСтранице(\"[##Операция##]\", \"[##Страница##]\", Истина));\n\nКонецПроцедуры\n\n&ИзменениеИКонтроль(\"ПолучитьСтандартнуюФормуТСД_Вопрос\")\nФункция Бюро1440_ПолучитьСтандартнуюФормуТСД_Вопрос(ШиринаПодписи, текДействие, Страница)\n\n\txdtoСтраница = усТСДЭлементыФорм.ПолучитьСтраницу(, Страница);\n\txdtoПоследовательность = xdtoСтраница.Последовательность();\n\n\t// элементы\n\tусТСДЭлементыФорм.ДобавитьЗаголовок(xdtoПоследовательность, xdtoСтраница, \"[##Заголовок##]\", Истина);\n\tусТСДЭлементыФорм.ДобавитьКомментарий(xdtoПоследовательность, xdtoСтраница, \"[##Вопрос##]\", Истина);\n\tусТСДЭлементыФорм.ДобавитьКнопкиДаНет(xdtoПоследовательность, xdtoСтраница, НСтр(\"ru='Да';\n\t\t|en='Yes'\"), НСтр(\"ru='Нет';\n\t\t|en='No'\"));\n\n\txdtoСобытия = усТСДЭлементыФорм.ПолучитьСобытия(xdtoПоследовательность, xdtoСтраница);\n\n\t// да\n\tмсвУсловий = Новый Массив;\n\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Ответ\", \"Да\"));\n    #Вставка\n\t//Ситек ICT-41402 Николаев ++\n\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Вопрос\", \"\"));\n\t//Ситек ICT-41402 Николаев --\n\t#КонецВставки\n\n\tВопрос_ПолучитьУсловиеПереходаКНовойСтранице(мсвУсловий, \"СледующаяСтраница\", \"СледующееДействие\");\n\tусТСДЭлементыФорм.ДобавитьСобытиеНажатияКнопки(xdtoСобытия, \"кнДа\", мсвУсловий);\n\n\t// нет\n\tмсвУсловий = Новый Массив;\n\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Ответ\", \"Нет\"));\n    #Вставка\n\t//Ситек ICT-41402 Николаев ++\n\tмсвУсловий.Добавить(усТСДЭлементыФорм.ПолучитьДействиеУстановкаЗначения(\"Вопрос\", \"\"));\n\t//Ситек ICT-41402 Николаев --\n\t#КонецВставки\n\n\t#Удаление\n\tВопрос_ПолучитьУсловиеПереходаКНовойСтранице(мсвУсловий, \"ПредыдущаяСтраница\", \"ПредыдущееДействие\");\n\t#КонецУдаления\n\t#Вставка\n\t//Ситек ICT-41402 Николаев ++\n\tВопрос_ПолучитьУсловиеПереходаКНовойСтраницеПереопр(мсвУсловий, \"ПредыдущаяСтраница\", \"ПредыдущееДействие\", Истина);\n\t//Ситек ICT-41402 Николаев --\n\t#КонецВставки\n\tусТСДЭлементыФорм.ДобавитьСобытиеНажатияКнопки(xdtoСобытия, \"кнНет\", мсвУсловий);\n\n\tВозврат xdtoСтраница;\n\nКонецФункции  \n\n#КонецОбласти\n\n#Область ДинамическиеФормы\n\n&ИзменениеИКонтроль(\"ПолучитьФорму_ВыборИзСписка\")\nФункция Бюро1440_ПолучитьФорму_ВыборИзСписка(сткПараметры, сткДанные, текДействие)\n\n\tЭлементВыбора    = \"\";\n\tВыводитьВТаблице = Истина;\n\tВыводитьНомера   = Истина;\n\tТаблицаНоменклатуры = Неопределено;\n\tсткДанные.Свойство(\"ТаблицаНоменклатуры\", ТаблицаНоменклатуры);\n\n\tКомментарий = \"\";\n\n\tЕсли сткПараметры.дВыбратьПартию = \"Да\" Тогда\n\n\t\tВыводитьНомера   = Ложь;\n\n\t\tЭлементВыбора = \"ПартияНоменклатуры\";\n\t\tКомментарий = НСтр(\"ru='Выберите партию...';\n\t\t\t|en='Select batch...'\");\n\n\t\tЗапрос = Новый Запрос;\n\n\t\tЕсли сткПараметры.дВыбратьПартиюСН = \"Да\" Тогда\n\t\t\tНезначащиеСимволы = Константы.усКоличествоНезначащихСимволовВАкцизе.Получить();\n\t\t\tДлинаАкциза       = Константы.усДлинаАкциза.Получить();\n\n\t\t\tЗапрос.Текст =\n\t\t\t\"ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t\t\t|\tусСерийныеНомера.ПартияНоменклатуры\n\t\t\t|ИЗ\n\t\t\t|\tРегистрСведений.усСерийныеНомера КАК усСерийныеНомера\n\t\t\t|ГДЕ\n\t\t\t|\tусСерийныеНомера.Номенклатура = &Номенклатура\";\n\t\t\tЕсли ПолучитьФункциональнуюОпцию(\"усУчетСерийныхНомеровПоДиапазонам\") Тогда\n\t\t\t\tЗапрос.Текст = Запрос.Текст +\n\t\t\t\t\"\tИ ПОДСТРОКА(усСерийныеНомера.СерийныйНомер, \" + Формат(?(ДлинаАкциза, ДлинаАкциза, СтрДлина(сткПараметры.ПартияНоменклатуры) - НезначащиеСимволы) + 1, \"ЧН=0; ЧГ=0\") + \", 1) = \"\"\"\"\n\t\t\t\t|\tИ усСерийныеНомера.СерийныйНомер <= &СерийныйНомер\n\t\t\t\t|\tИ ПОДСТРОКА(усСерийныеНомера.СерийныйНомерПо, \" + Формат(?(ДлинаАкциза, ДлинаАкциза, СтрДлина(сткПараметры.ПартияНоменклатуры) - НезначащиеСимволы), \"ЧН=0; ЧГ=0\") + \", 1) <> \"\"\"\"\n\t\t\t\t|\tИ усСерийныеНомера.СерийныйНомерПо >= &СерийныйНомер\";\n\t\t\tИначе\n\t\t\t\tЗапрос.Текст = Запрос.Текст + \" И усСерийныеНомера.СерийныйНомер = &СерийныйНомер\";\n\t\t\tКонецЕсли;\n\t\t\tЗапрос.Текст = Запрос.Текст + \" УПОРЯДОЧИТЬ ПО усСерийныеНомера.ПартияНоменклатуры.Наименование\";\n\t\t\tЗапрос.УстановитьПараметр(\"Номенклатура\",  сткДанные.Номенклатура);\n\t\t\tЗапрос.УстановитьПараметр(\"СерийныйНомер\", Сред(сткПараметры.ПартияНоменклатуры, НезначащиеСимволы + 1, ?(ДлинаАкциза, ДлинаАкциза, СтрДлина(сткПараметры.ПартияНоменклатуры) - НезначащиеСимволы)));\n\t\tИначе\n\t\t\tЕсли сткДанные.Свойство(\"ПоддействиеСН\") Тогда\n\t\t\t\tсткДанные.Удалить(\"ПоддействиеСН\");\n\t\t\tКонецЕсли;\n\n\t\t\tВариантВыбораПартии = Перечисления.усВариантыВыбораПартии.Получить(сткПараметры.дВариантВыбораПартии);\n\n\t\t\tЕсли ВариантВыбораПартии = Перечисления.усВариантыВыбораПартии.ПартииВОстаткахСклада Тогда\n\t\t\t\tЗапрос.Текст =\n\t\t\t\t\"ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t\t\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры КАК ПартияНоменклатуры\n\t\t\t\t|ИЗ\n\t\t\t\t|\tРегистрНакопления.усОстаткиТоваров.Остатки(\n\t\t\t\t|\t\t\t,\n\t\t\t\t|\t\t\tКлючАналитикиУчетаНоменклатуры.Номенклатура = &Номенклатура\n\t\t\t\t|\t\t\t\tИ КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры <> ЗНАЧЕНИЕ(Справочник.усПартииНоменклатуры.ПустаяСсылка)) КАК усОстаткиТоваровОстатки\n\t\t\t\t|ГДЕ\n\t\t\t\t|\tусОстаткиТоваровОстатки.КоличествоОстаток > 0\n\t\t\t\t|\n\t\t\t\t|УПОРЯДОЧИТЬ ПО\n\t\t\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры.Наименование\";\n\n\t\t\tИначеЕсли ВариантВыбораПартии = Перечисления.усВариантыВыбораПартии.ПартииВОстаткахЯчейки Тогда\n\t\t\t\tЗапрос.Текст =\n\t\t\t\t\"ВЫБРАТЬ\n\t\t\t\t|\tусПоложениеКонтейнеровОстатки.Контейнер КАК Контейнер\n\t\t\t\t|ПОМЕСТИТЬ втКонтейнеры\n\t\t\t\t|ИЗ\n\t\t\t\t|\tРегистрНакопления.усПоложениеКонтейнеров.Остатки(, Ячейка = &Ячейка) КАК усПоложениеКонтейнеровОстатки\n\t\t\t\t|ГДЕ\n\t\t\t\t|\tусПоложениеКонтейнеровОстатки.КоличествоОстаток > 0\n\t\t\t\t|\n\t\t\t\t|ИНДЕКСИРОВАТЬ ПО\n\t\t\t\t|\tКонтейнер\n\t\t\t\t|;\n\t\t\t\t|\n\t\t\t\t|////////////////////////////////////////////////////////////////////////////////\n\t\t\t\t|ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t\t\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры КАК ПартияНоменклатуры\n\t\t\t\t|ИЗ\n\t\t\t\t|\tРегистрНакопления.усОстаткиТоваров.Остатки(\n\t\t\t\t|\t\t\t,\n\t\t\t\t|\t\t\tКонтейнер В\n\t\t\t\t|\t\t\t\t\t(ВЫБРАТЬ\n\t\t\t\t|\t\t\t\t\t\tвтКонтейнеры.Контейнер\n\t\t\t\t|\t\t\t\t\tИЗ\n\t\t\t\t|\t\t\t\t\t\tвтКонтейнеры КАК втКонтейнеры)\n\t\t\t\t|\t\t\t\tИ КлючАналитикиУчетаНоменклатуры.Номенклатура = &Номенклатура\n\t\t\t\t|\t\t\t\tИ КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры <> ЗНАЧЕНИЕ(Справочник.усПартииНоменклатуры.ПустаяСсылка)) КАК усОстаткиТоваровОстатки\n\t\t\t\t|ГДЕ\n\t\t\t\t|\tусОстаткиТоваровОстатки.КоличествоОстаток > 0\n\t\t\t\t|\n\t\t\t\t|УПОРЯДОЧИТЬ ПО\n\t\t\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры.Наименование\";\n\t\t\t\tЗапрос.УстановитьПараметр(\"Ячейка\", сткДанные.Ячейка);\n\n\t\t\tИначеЕсли ВариантВыбораПартии = Перечисления.усВариантыВыбораПартии.ПартииВОстаткахКонтейнера Тогда\n\t\t\t\tЗапрос.Текст =\n\t\t\t\t\"ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t\t\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры КАК ПартияНоменклатуры\n\t\t\t\t|ИЗ\n\t\t\t\t|\tРегистрНакопления.усОстаткиТоваров.Остатки(\n\t\t\t\t|\t\t\t,\n\t\t\t\t|\t\t\tКонтейнер = &Контейнер\n\t\t\t\t|\t\t\t\tИ КлючАналитикиУчетаНоменклатуры.Номенклатура = &Номенклатура\n\t\t\t\t|\t\t\t\tИ КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры <> ЗНАЧЕНИЕ(Справочник.усПартииНоменклатуры.ПустаяСсылка)) КАК усОстаткиТоваровОстатки\n\t\t\t\t|ГДЕ\n\t\t\t\t|\tусОстаткиТоваровОстатки.КоличествоОстаток > 0\n\t\t\t\t|\n\t\t\t\t|УПОРЯДОЧИТЬ ПО\n\t\t\t\t|\tусОстаткиТоваровОстатки.КлючАналитикиУчетаНоменклатуры.ПартияНоменклатуры.Наименование\";\n\t\t\t\tЗапрос.УстановитьПараметр(\"Контейнер\", сткДанные.Контейнер);\n\n\t\t\tИначеЕсли ВариантВыбораПартии = Перечисления.усВариантыВыбораПартии.ПартииИзОжидаемойПриемки Тогда\n\t\t\t\tЗапрос.Текст =\n\t\t\t\t\"ВЫБРАТЬ РАЗЛИЧНЫЕ\n\t\t\t\t|\tусКонтрольПриемки.ПартияНоменклатуры\n\t\t\t\t|ИЗ\n\t\t\t\t|\tРегистрНакопления.усКонтрольПриемки КАК усКонтрольПриемки\n\t\t\t\t|ГДЕ\n\t\t\t\t|\tусКонтрольПриемки.ОжидаемаяПриемка = &ДокументОснование\n\t\t\t\t|\tИ усКонтрольПриемки.Номенклатура = &Номенклатура\n\t\t\t\t|\tИ усКонтрольПриемки.КоличествоЗапланировано > 0\n\t\t\t\t|\tИ усКонтрольПриемки.ПартияНоменклатуры <> ЗНАЧЕНИЕ(Справочник.усПартииНоменклатуры.ПустаяСсылка)\n\t\t\t\t|\n\t\t\t\t|УПОРЯДОЧИТЬ ПО\n\t\t\t\t|\tусКонтрольПриемки.ПартияНоменклатуры.Наименование\";\n\t\t\t\tЗапрос.УстановитьПараметр(\"ДокументОснование\", сткДанные.ДокументОснование);\n\n\t\t\tИначе\n\t\t\t\tЗапрос.Текст =\n\t\t\t\t\"ВЫБРАТЬ\n\t\t\t\t|\tусПартииНоменклатуры.Ссылка КАК ПартияНоменклатуры\n\t\t\t\t|ИЗ\n\t\t\t\t|\tСправочник.усПартииНоменклатуры КАК усПартииНоменклатуры\n\t\t\t\t|ГДЕ\n\t\t\t\t|\tусПартииНоменклатуры.Владелец = &Номенклатура\n\t\t\t\t|\tИ НЕ усПартииНоменклатуры.ПометкаУдаления\n\t\t\t\t|\n\t\t\t\t|УПОРЯДОЧИТЬ ПО\n\t\t\t\t|\tусПартииНоменклатуры.Наименов",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\усТСДОтбор\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\усТСДОтбор\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/236c495473805fc40cc17ae8404e5128a1f8cd38/_bsl%5CResources%5C726598511%5CCommonModule%5C%D1%83%D1%81%D0%A2%D0%A1%D0%94%D0%9E%D1%82%D0%B1%D0%BE%D1%80%5CCommonModule.obj.bsl",
            "size": 110117,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\усТСДПеремещение\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\усТСДПеремещение\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/8ce393301566907d0008e837c5c5eb1598ff50c2/_bsl%5CResources%5C726598511%5CCommonModule%5C%D1%83%D1%81%D0%A2%D0%A1%D0%94%D0%9F%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D1%89%D0%B5%D0%BD%D0%B8%D0%B5%5CCommonModule.obj.bsl",
            "size": 179987,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\усТСДПереопределяемый\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\усТСДПереопределяемый\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/da52c317145960cd2e273d8f054a3a42feb1d75b/_bsl%5CResources%5C726598511%5CCommonModule%5C%D1%83%D1%81%D0%A2%D0%A1%D0%94%D0%9F%D0%B5%D1%80%D0%B5%D0%BE%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F%D0%B5%D0%BC%D1%8B%D0%B9%5CCommonModule.obj.bsl",
            "size": 1710,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\усТСДПриемка\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\усТСДПриемка\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/622a11f4a98be3f5b6b2e0d183a547d7a9e27868/_bsl%5CResources%5C726598511%5CCommonModule%5C%D1%83%D1%81%D0%A2%D0%A1%D0%94%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B0%5CCommonModule.obj.bsl",
            "size": 300198,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\усТСДРазмещение\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\усТСДРазмещение\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/fd7deab9a74c8a721197210d24daadf34619202f/_bsl%5CResources%5C726598511%5CCommonModule%5C%D1%83%D1%81%D0%A2%D0%A1%D0%94%D0%A0%D0%B0%D0%B7%D0%BC%D0%B5%D1%89%D0%B5%D0%BD%D0%B8%D0%B5%5CCommonModule.obj.bsl",
            "size": 5931,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\усТСДРегламентныеФункции\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\усТСДРегламентныеФункции\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/f3515b1e086de70d599a562992cbba480775d432/_bsl%5CResources%5C726598511%5CCommonModule%5C%D1%83%D1%81%D0%A2%D0%A1%D0%94%D0%A0%D0%B5%D0%B3%D0%BB%D0%B0%D0%BC%D0%B5%D0%BD%D1%82%D0%BD%D1%8B%D0%B5%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%5CCommonModule.obj.bsl",
            "size": 1267268,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\усТСДСервисныеФункции\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\усТСДСервисныеФункции\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/eab531d7f30fbcc50a3f7ca5903077af737616f8/_bsl%5CResources%5C726598511%5CCommonModule%5C%D1%83%D1%81%D0%A2%D0%A1%D0%94%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D0%BD%D1%8B%D0%B5%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%5CCommonModule.obj.bsl",
            "size": 51906,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\CommonModule\\усУправлениеЗадачами\\CommonModule.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\CommonModule\\усУправлениеЗадачами\\CommonModule.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/df002eff24a790b22232bb9263ac3edd456c9e6a/_bsl%5CResources%5C726598511%5CCommonModule%5C%D1%83%D1%81%D0%A3%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B0%D0%BC%D0%B8%5CCommonModule.obj.bsl",
            "size": 104986,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\DataProcessor\\Бюро1440_ЗагрузкаИзТД\\Form\\Форма\\Form.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\DataProcessor\\Бюро1440_ЗагрузкаИзТД\\Form\\Форма\\Form.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/1c83736e4fcd36ead83eddf57ba96976b00fb4e5/_bsl%5CResources%5C726598511%5CDataProcessor%5C%D0%91%D1%8E%D1%80%D0%BE1440_%D0%97%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D0%B0%D0%98%D0%B7%D0%A2%D0%94%5CForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%5CForm.obj.bsl",
            "size": 42872,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\DataProcessor\\Бюро1440_СменитьПоклажедателяДляНоменклатурВКонтейнерах\\DataProcessorCommand\\СменитьПоклажедателяДляНоменклатурВКонтейнерах\\DataProcessorCommand.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\DataProcessor\\Бюро1440_СменитьПоклажедателяДляНоменклатурВКонтейнерах\\DataProcessorCommand\\СменитьПоклажедателяДляНоменклатурВКонтейнерах\\DataProcessorCommand.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/83288fdd884f747f532e113b790539b0b0806dba/_bsl%5CResources%5C726598511%5CDataProcessor%5C%D0%91%D1%8E%D1%80%D0%BE1440_%D0%A1%D0%BC%D0%B5%D0%BD%D0%B8%D1%82%D1%8C%D0%9F%D0%BE%D0%BA%D0%BB%D0%B0%D0%B6%D0%B5%D0%B4%D0%B0%D1%82%D0%B5%D0%BB%D1%8F%D0%94%D0%BB%D1%8F%D0%9D%D0%BE%D0%BC%D0%B5%D0%BD%D0%BA%D0%BB%D0%B0%D1%82%D1%83%D1%80%D0%92%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%B0%D1%85%5CDataProcessorCommand%5C%D0%A1%D0%BC%D0%B5%D0%BD%D0%B8%D1%82%D1%8C%D0%9F%D0%BE%D0%BA%D0%BB%D0%B0%D0%B6%D0%B5%D0%B4%D0%B0%D1%82%D0%B5%D0%BB%D1%8F%D0%94%D0%BB%D1%8F%D0%9D%D0%BE%D0%BC%D0%B5%D0%BD%D0%BA%D0%BB%D0%B0%D1%82%D1%83%D1%80%D0%92%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%B0%D1%85%5CDataProcessorCommand.obj.bsl",
            "size": 1210,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\DataProcessor\\Бюро1440_СменитьПоклажедателяДляНоменклатурВКонтейнерах\\Form\\Бюро1440_ФормаВыбораНоменклатурДляСменыПоклажедателя\\Form.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\DataProcessor\\Бюро1440_СменитьПоклажедателяДляНоменклатурВКонтейнерах\\Form\\Бюро1440_ФормаВыбораНоменклатурДляСменыПоклажедателя\\Form.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/05dd810cb905d19c0790dc3b6fd33515ab21f03b/_bsl%5CResources%5C726598511%5CDataProcessor%5C%D0%91%D1%8E%D1%80%D0%BE1440_%D0%A1%D0%BC%D0%B5%D0%BD%D0%B8%D1%82%D1%8C%D0%9F%D0%BE%D0%BA%D0%BB%D0%B0%D0%B6%D0%B5%D0%B4%D0%B0%D1%82%D0%B5%D0%BB%D1%8F%D0%94%D0%BB%D1%8F%D0%9D%D0%BE%D0%BC%D0%B5%D0%BD%D0%BA%D0%BB%D0%B0%D1%82%D1%83%D1%80%D0%92%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%B0%D1%85%5CForm%5C%D0%91%D1%8E%D1%80%D0%BE1440_%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%92%D1%8B%D0%B1%D0%BE%D1%80%D0%B0%D0%9D%D0%BE%D0%BC%D0%B5%D0%BD%D0%BA%D0%BB%D0%B0%D1%82%D1%83%D1%80%D0%94%D0%BB%D1%8F%D0%A1%D0%BC%D0%B5%D0%BD%D1%8B%D0%9F%D0%BE%D0%BA%D0%BB%D0%B0%D0%B6%D0%B5%D0%B4%D0%B0%D1%82%D0%B5%D0%BB%D1%8F%5CForm.obj.bsl",
            "size": 15480,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\DataProcessor\\усГенерацияКонтейнеров\\DataProcessorCommand\\СформироватьКонтейнеры\\DataProcessorCommand.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\DataProcessor\\усГенерацияКонтейнеров\\DataProcessorCommand\\СформироватьКонтейнеры\\DataProcessorCommand.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/b007ef8a316d8656ee43ae07760756cfd99279fe/_bsl%5CResources%5C726598511%5CDataProcessor%5C%D1%83%D1%81%D0%93%D0%B5%D0%BD%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D1%8F%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%BE%D0%B2%5CDataProcessorCommand%5C%D0%A1%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D1%82%D1%8C%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D1%8B%5CDataProcessorCommand.obj.bsl",
            "size": 1515,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\DataProcessor\\усГенерацияКонтейнеров\\Form\\Форма\\Form.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\DataProcessor\\усГенерацияКонтейнеров\\Form\\Форма\\Form.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/d7b929efcd3f639a6adbfec272ca8d2f242e53c4/_bsl%5CResources%5C726598511%5CDataProcessor%5C%D1%83%D1%81%D0%93%D0%B5%D0%BD%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D1%8F%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%BE%D0%B2%5CForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%5CForm.obj.bsl",
            "size": 4322,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\DataProcessor\\усПечатьЭтикеток\\DataProcessor.mgr.bsl": {
            "filename": "_bsl\\Resources\\726598511\\DataProcessor\\усПечатьЭтикеток\\DataProcessor.mgr.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/3875b8d0a85b98570c0da9a9ecd101a2c76deabf/_bsl%5CResources%5C726598511%5CDataProcessor%5C%D1%83%D1%81%D0%9F%D0%B5%D1%87%D0%B0%D1%82%D1%8C%D0%AD%D1%82%D0%B8%D0%BA%D0%B5%D1%82%D0%BE%D0%BA%5CDataProcessor.mgr.bsl",
            "size": 34586,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\DataProcessor\\усПечатьЭтикеток\\Form\\Форма\\Form.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\DataProcessor\\усПечатьЭтикеток\\Form\\Форма\\Form.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/729489805a0fa83346d97af3c23de9a45ab81e1b/_bsl%5CResources%5C726598511%5CDataProcessor%5C%D1%83%D1%81%D0%9F%D0%B5%D1%87%D0%B0%D1%82%D1%8C%D0%AD%D1%82%D0%B8%D0%BA%D0%B5%D1%82%D0%BE%D0%BA%5CForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%5CForm.obj.bsl",
            "size": 15322,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\DataProcessor\\усПланированиеЗадач\\Form\\ПеремещениеТовара\\Form.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\DataProcessor\\усПланированиеЗадач\\Form\\ПеремещениеТовара\\Form.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/25a9b6873959dd6fe90e6ea92988dbcd2b2bb6c1/_bsl%5CResources%5C726598511%5CDataProcessor%5C%D1%83%D1%81%D0%9F%D0%BB%D0%B0%D0%BD%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%D0%97%D0%B0%D0%B4%D0%B0%D1%87%5CForm%5C%D0%9F%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D1%89%D0%B5%D0%BD%D0%B8%D0%B5%D0%A2%D0%BE%D0%B2%D0%B0%D1%80%D0%B0%5CForm.obj.bsl",
            "size": 13443,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\DataProcessor\\усПланированиеЗадач\\Form\\ПросмотрЗадач\\Form.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\DataProcessor\\усПланированиеЗадач\\Form\\ПросмотрЗадач\\Form.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/cf49560cc16bf0d3c21f9f4a5d64e5332bccc1a5/_bsl%5CResources%5C726598511%5CDataProcessor%5C%D1%83%D1%81%D0%9F%D0%BB%D0%B0%D0%BD%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%D0%97%D0%B0%D0%B4%D0%B0%D1%87%5CForm%5C%D0%9F%D1%80%D0%BE%D1%81%D0%BC%D0%BE%D1%82%D1%80%D0%97%D0%B0%D0%B4%D0%B0%D1%87%5CForm.obj.bsl",
            "size": 399,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усАктСверкиИнвентаризации\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усАктСверкиИнвентаризации\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/a0c5708a88a045a5b9c7b8a0e18cc12ed98c327d/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%90%D0%BA%D1%82%D0%A1%D0%B2%D0%B5%D1%80%D0%BA%D0%B8%D0%98%D0%BD%D0%B2%D0%B5%D0%BD%D1%82%D0%B0%D1%80%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8%5CDocumentForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%94%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CDocumentForm.obj.bsl",
            "size": 15008,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усГруппаОтбора\\Document.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усГруппаОтбора\\Document.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/907dd0dccbd974fed3cadfb5e89f8e44fd20c579/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%93%D1%80%D1%83%D0%BF%D0%BF%D0%B0%D0%9E%D1%82%D0%B1%D0%BE%D1%80%D0%B0%5CDocument.obj.bsl",
            "size": 329,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усГруппаОтбора\\DocumentCommand\\Бюро1440_АвтоматическаяСортировка\\DocumentCommand.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усГруппаОтбора\\DocumentCommand\\Бюро1440_АвтоматическаяСортировка\\DocumentCommand.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/cc6f33ef7ec8cd69e360bdd7b9996774eed41a57/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%93%D1%80%D1%83%D0%BF%D0%BF%D0%B0%D0%9E%D1%82%D0%B1%D0%BE%D1%80%D0%B0%5CDocumentCommand%5C%D0%91%D1%8E%D1%80%D0%BE1440_%D0%90%D0%B2%D1%82%D0%BE%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F%D0%A1%D0%BE%D1%80%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0%5CDocumentCommand.obj.bsl",
            "size": 2987,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усГруппаОтбора\\DocumentCommand\\Бюро1440_ОтгрузитьНепосредственно\\DocumentCommand.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усГруппаОтбора\\DocumentCommand\\Бюро1440_ОтгрузитьНепосредственно\\DocumentCommand.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/8a690bebc168585faa4f57b8d00956a755c6fc10/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%93%D1%80%D1%83%D0%BF%D0%BF%D0%B0%D0%9E%D1%82%D0%B1%D0%BE%D1%80%D0%B0%5CDocumentCommand%5C%D0%91%D1%8E%D1%80%D0%BE1440_%D0%9E%D1%82%D0%B3%D1%80%D1%83%D0%B7%D0%B8%D1%82%D1%8C%D0%9D%D0%B5%D0%BF%D0%BE%D1%81%D1%80%D0%B5%D0%B4%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D0%BE%5CDocumentCommand.obj.bsl",
            "size": 3505,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усГруппаОтбора\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усГруппаОтбора\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/806ee529761b465a2f9f2649bb35332afb056f8e/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%93%D1%80%D1%83%D0%BF%D0%BF%D0%B0%D0%9E%D1%82%D0%B1%D0%BE%D1%80%D0%B0%5CDocumentForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%94%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CDocumentForm.obj.bsl",
            "size": 10344,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усЗадачаПеремещениеКонтейнера\\Document.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усЗадачаПеремещениеКонтейнера\\Document.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/873faef26ee743337b6ca9f2beaacebd95abdf24/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B0%D0%9F%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D1%89%D0%B5%D0%BD%D0%B8%D0%B5%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%B0%5CDocument.obj.bsl",
            "size": 1770,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усЗадачаПеремещениеКонтейнера\\DocumentForm\\ФормаВыбораЯчейкиРазмещения\\DocumentForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усЗадачаПеремещениеКонтейнера\\DocumentForm\\ФормаВыбораЯчейкиРазмещения\\DocumentForm.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/739266a1d2450000a51ff6ff75dd600b267fa7c2/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B0%D0%9F%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D1%89%D0%B5%D0%BD%D0%B8%D0%B5%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%B0%5CDocumentForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%92%D1%8B%D0%B1%D0%BE%D1%80%D0%B0%D0%AF%D1%87%D0%B5%D0%B9%D0%BA%D0%B8%D0%A0%D0%B0%D0%B7%D0%BC%D0%B5%D1%89%D0%B5%D0%BD%D0%B8%D1%8F%5CDocumentForm.obj.bsl",
            "size": 621,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усЗадачаПеремещениеТовара\\Document.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усЗадачаПеремещениеТовара\\Document.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/c118e3714a78e78030ce63057dce313b7e690eca/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B0%D0%9F%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D1%89%D0%B5%D0%BD%D0%B8%D0%B5%D0%A2%D0%BE%D0%B2%D0%B0%D1%80%D0%B0%5CDocument.obj.bsl",
            "size": 10732,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усЗадачаПеремещениеТовара\\DocumentCommand\\УстановитьСтатусВыполнена\\DocumentCommand.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усЗадачаПеремещениеТовара\\DocumentCommand\\УстановитьСтатусВыполнена\\DocumentCommand.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/25e16a4c553d1bc033fc618533b5ea93137ef44a/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B0%D0%9F%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D1%89%D0%B5%D0%BD%D0%B8%D0%B5%D0%A2%D0%BE%D0%B2%D0%B0%D1%80%D0%B0%5CDocumentCommand%5C%D0%A3%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%B8%D1%82%D1%8C%D0%A1%D1%82%D0%B0%D1%82%D1%83%D1%81%D0%92%D1%8B%D0%BF%D0%BE%D0%BB%D0%BD%D0%B5%D0%BD%D0%B0%5CDocumentCommand.obj.bsl",
            "size": 1899,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усЗадачаПеремещениеТовара\\DocumentForm\\ФормаВыбораЯчейкиРазмещения\\DocumentForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усЗадачаПеремещениеТовара\\DocumentForm\\ФормаВыбораЯчейкиРазмещения\\DocumentForm.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/4a44813af273a2b48f2e88f3a19faa9cba5fd3cd/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B0%D0%9F%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D1%89%D0%B5%D0%BD%D0%B8%D0%B5%D0%A2%D0%BE%D0%B2%D0%B0%D1%80%D0%B0%5CDocumentForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%92%D1%8B%D0%B1%D0%BE%D1%80%D0%B0%D0%AF%D1%87%D0%B5%D0%B9%D0%BA%D0%B8%D0%A0%D0%B0%D0%B7%D0%BC%D0%B5%D1%89%D0%B5%D0%BD%D0%B8%D1%8F%5CDocumentForm.obj.bsl",
            "size": 8621,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усЗадачаПересчет\\Document.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усЗадачаПересчет\\Document.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/adb8525f996b168b9f9b105503b5db70f58089ce/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B0%D0%9F%D0%B5%D1%80%D0%B5%D1%81%D1%87%D0%B5%D1%82%5CDocument.obj.bsl",
            "size": 48607,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усЗаказНаОтгрузку\\Document.mgr.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усЗаказНаОтгрузку\\Document.mgr.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/bc9e44ad032e32ea977afeb70f19ea6e3bd26ede/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%97%D0%B0%D0%BA%D0%B0%D0%B7%D0%9D%D0%B0%D0%9E%D1%82%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D1%83%5CDocument.mgr.bsl",
            "size": 37058,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усЗаказНаОтгрузку\\Document.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усЗаказНаОтгрузку\\Document.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/d00afa8e7a859dda71509359a8dd3f899cfadfe4/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%97%D0%B0%D0%BA%D0%B0%D0%B7%D0%9D%D0%B0%D0%9E%D1%82%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D1%83%5CDocument.obj.bsl",
            "size": 1037,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усЗаказНаОтгрузку\\DocumentCommand\\ОтгрузитьНепосредственно\\DocumentCommand.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усЗаказНаОтгрузку\\DocumentCommand\\ОтгрузитьНепосредственно\\DocumentCommand.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/0e2cd32e37514a9b7f713976a7b2ba67d358316d/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%97%D0%B0%D0%BA%D0%B0%D0%B7%D0%9D%D0%B0%D0%9E%D1%82%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D1%83%5CDocumentCommand%5C%D0%9E%D1%82%D0%B3%D1%80%D1%83%D0%B7%D0%B8%D1%82%D1%8C%D0%9D%D0%B5%D0%BF%D0%BE%D1%81%D1%80%D0%B5%D0%B4%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D0%BE%5CDocumentCommand.obj.bsl",
            "size": 2140,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усЗаказНаОтгрузку\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усЗаказНаОтгрузку\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/39b41081d8ddaa57604c1e4c77032835d0475159/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%97%D0%B0%D0%BA%D0%B0%D0%B7%D0%9D%D0%B0%D0%9E%D1%82%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D1%83%5CDocumentForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%94%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CDocumentForm.obj.bsl",
            "size": 3388,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усМаркировка\\Document.mgr.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усМаркировка\\Document.mgr.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/7b9209e85f1997de810a2281449ef7214acbe766/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%9C%D0%B0%D1%80%D0%BA%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0%5CDocument.mgr.bsl",
            "size": 7093,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усМаркировка\\Document.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усМаркировка\\Document.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/11f8e8b6970541fe774c8f87025bc1b8decf25f0/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%9C%D0%B0%D1%80%D0%BA%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0%5CDocument.obj.bsl",
            "size": 46523,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усМаркировка\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усМаркировка\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/a66798c297913a1dccff93309eee4a3f875984f7/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%9C%D0%B0%D1%80%D0%BA%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0%5CDocumentForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%94%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CDocumentForm.obj.bsl",
            "size": 825,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усОжидаемаяПриемка\\Document.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усОжидаемаяПриемка\\Document.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/f86c582a3b7a3bbb53f42a8629f8d291a436560c/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%9E%D0%B6%D0%B8%D0%B4%D0%B0%D0%B5%D0%BC%D0%B0%D1%8F%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B0%5CDocument.obj.bsl",
            "size": 9021,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усОжидаемаяПриемка\\DocumentCommand\\УстановитьСтатусЗавершена\\DocumentCommand.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усОжидаемаяПриемка\\DocumentCommand\\УстановитьСтатусЗавершена\\DocumentCommand.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/6e6c03b1991622eb7a2f460d6240ea89e58670a9/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%9E%D0%B6%D0%B8%D0%B4%D0%B0%D0%B5%D0%BC%D0%B0%D1%8F%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B0%5CDocumentCommand%5C%D0%A3%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%B8%D1%82%D1%8C%D0%A1%D1%82%D0%B0%D1%82%D1%83%D1%81%D0%97%D0%B0%D0%B2%D0%B5%D1%80%D1%88%D0%B5%D0%BD%D0%B0%5CDocumentCommand.obj.bsl",
            "size": 5357,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усОжидаемаяПриемка\\DocumentForm\\ФормаВыбора\\DocumentForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усОжидаемаяПриемка\\DocumentForm\\ФормаВыбора\\DocumentForm.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/a16bee8a8d6e2cf44c95a115a39fdf288bbc1bb7/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%9E%D0%B6%D0%B8%D0%B4%D0%B0%D0%B5%D0%BC%D0%B0%D1%8F%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B0%5CDocumentForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%92%D1%8B%D0%B1%D0%BE%D1%80%D0%B0%5CDocumentForm.obj.bsl",
            "size": 666,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усОжидаемаяПриемка\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усОжидаемаяПриемка\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/5275cc480a13e21da1ff7503a9d6ddd0962d142e/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%9E%D0%B6%D0%B8%D0%B4%D0%B0%D0%B5%D0%BC%D0%B0%D1%8F%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B0%5CDocumentForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%94%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CDocumentForm.obj.bsl",
            "size": 9722,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усОжидаемаяПриемка\\DocumentForm\\ФормаСписка\\DocumentForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усОжидаемаяПриемка\\DocumentForm\\ФормаСписка\\DocumentForm.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/56d28b4520c72ec2a487b915a3a58d2c020ac2a0/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%9E%D0%B6%D0%B8%D0%B4%D0%B0%D0%B5%D0%BC%D0%B0%D1%8F%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B0%5CDocumentForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%A1%D0%BF%D0%B8%D1%81%D0%BA%D0%B0%5CDocumentForm.obj.bsl",
            "size": 1497,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усПредварительнаяПриемка\\Document.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усПредварительнаяПриемка\\Document.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/7eaf2dbe3e1fd425aa978d19e60ee35577d94bb6/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%9F%D1%80%D0%B5%D0%B4%D0%B2%D0%B0%D1%80%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B0%5CDocument.obj.bsl",
            "size": 8318,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усПредварительнаяПриемка\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усПредварительнаяПриемка\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/03c85778c2eef50a8ff9a3ead00b339784613112/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%9F%D1%80%D0%B5%D0%B4%D0%B2%D0%B0%D1%80%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B0%5CDocumentForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%94%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CDocumentForm.obj.bsl",
            "size": 14146,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усПриемка\\Document.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усПриемка\\Document.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/1ecf115453ce361b5161e4104a740f2cd7462fe5/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B0%5CDocument.obj.bsl",
            "size": 338,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усПриемка\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усПриемка\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/23bcf9aaa50b881cf52e932e7a2e5c5dc03c95f5/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B0%5CDocumentForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%94%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CDocumentForm.obj.bsl",
            "size": 3236,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усСтрокаЗаказаНаОтгрузку\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усСтрокаЗаказаНаОтгрузку\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/c018b5a3c4de3cb93cf23e7e05f654ec4cd478b2/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%A1%D1%82%D1%80%D0%BE%D0%BA%D0%B0%D0%97%D0%B0%D0%BA%D0%B0%D0%B7%D0%B0%D0%9D%D0%B0%D0%9E%D1%82%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D1%83%5CDocumentForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%94%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CDocumentForm.obj.bsl",
            "size": 7402,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усСтрокаОжидаемойПриемки\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усСтрокаОжидаемойПриемки\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/ccb27a775ff77aa39f4ad3edf5da8743c906a872/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%A1%D1%82%D1%80%D0%BE%D0%BA%D0%B0%D0%9E%D0%B6%D0%B8%D0%B4%D0%B0%D0%B5%D0%BC%D0%BE%D0%B9%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B8%5CDocumentForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%94%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CDocumentForm.obj.bsl",
            "size": 360,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усСтрокаПредварительнойПриемки\\Document.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усСтрокаПредварительнойПриемки\\Document.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/4abe29bc57c4b68bdbf072ae578187e36ebf37f0/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%A1%D1%82%D1%80%D0%BE%D0%BA%D0%B0%D0%9F%D1%80%D0%B5%D0%B4%D0%B2%D0%B0%D1%80%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D0%B9%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B8%5CDocument.obj.bsl",
            "size": 30716,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усСтрокаПриемки\\Document.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усСтрокаПриемки\\Document.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/f6194dd68e96b1c3cbc35cdcb8a2302f9a84fbfc/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%A1%D1%82%D1%80%D0%BE%D0%BA%D0%B0%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B8%5CDocument.obj.bsl",
            "size": 105623,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Document\\усСтрокаПриемки\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Document\\усСтрокаПриемки\\DocumentForm\\ФормаДокумента\\DocumentForm.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/561b4666fca6b07accf80a3bb51ff29cf2ee8609/_bsl%5CResources%5C726598511%5CDocument%5C%D1%83%D1%81%D0%A1%D1%82%D1%80%D0%BE%D0%BA%D0%B0%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B8%5CDocumentForm%5C%D0%A4%D0%BE%D1%80%D0%BC%D0%B0%D0%94%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%5CDocumentForm.obj.bsl",
            "size": 5131,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Enum\\усАлгоритмыОбработкиСобытия\\Enum.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Enum\\усАлгоритмыОбработкиСобытия\\Enum.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/65e0f83aa1ff4888fb7ebff75e65588969a1fd28/_bsl%5CResources%5C726598511%5CEnum%5C%D1%83%D1%81%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC%D1%8B%D0%9E%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8%D0%A1%D0%BE%D0%B1%D1%8B%D1%82%D0%B8%D1%8F%5CEnum.obj.bsl",
            "size": 38647,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Enum\\усТипыАктаСверкиИнвентаризации\\Enum.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Enum\\усТипыАктаСверкиИнвентаризации\\Enum.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/cfc08dc3357825638244ae6dd32146e706f54df2/_bsl%5CResources%5C726598511%5CEnum%5C%D1%83%D1%81%D0%A2%D0%B8%D0%BF%D1%8B%D0%90%D0%BA%D1%82%D0%B0%D0%A1%D0%B2%D0%B5%D1%80%D0%BA%D0%B8%D0%98%D0%BD%D0%B2%D0%B5%D0%BD%D1%82%D0%B0%D1%80%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8%5CEnum.obj.bsl",
            "size": 906,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\HTTPService\\Бюро1440_ВитринаДанных\\HTTPService.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\HTTPService\\Бюро1440_ВитринаДанных\\HTTPService.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/232b1748889ee566fa7aa346f6d50061d7ebb41f/_bsl%5CResources%5C726598511%5CHTTPService%5C%D0%91%D1%8E%D1%80%D0%BE1440_%D0%92%D0%B8%D1%82%D1%80%D0%B8%D0%BD%D0%B0%D0%94%D0%B0%D0%BD%D0%BD%D1%8B%D1%85%5CHTTPService.obj.bsl",
            "size": 7685,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Report\\Бюро1440_ОтчетПоОстаткамИДвижениюВЯчейках\\Report.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Report\\Бюро1440_ОтчетПоОстаткамИДвижениюВЯчейках\\Report.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/3f82e4125c368969c61b2b96c0da4f4d422d05a8/_bsl%5CResources%5C726598511%5CReport%5C%D0%91%D1%8E%D1%80%D0%BE1440_%D0%9E%D1%82%D1%87%D0%B5%D1%82%D0%9F%D0%BE%D0%9E%D1%81%D1%82%D0%B0%D1%82%D0%BA%D0%B0%D0%BC%D0%98%D0%94%D0%B2%D0%B8%D0%B6%D0%B5%D0%BD%D0%B8%D1%8E%D0%92%D0%AF%D1%87%D0%B5%D0%B9%D0%BA%D0%B0%D1%85%5CReport.obj.bsl",
            "size": 2681,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Report\\Бюро1440_ПроинвентаризованныеЯчейки\\Report.mgr.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Report\\Бюро1440_ПроинвентаризованныеЯчейки\\Report.mgr.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/9e045b7c9d7fab460a8b2b985be5c36ccf2b8261/_bsl%5CResources%5C726598511%5CReport%5C%D0%91%D1%8E%D1%80%D0%BE1440_%D0%9F%D1%80%D0%BE%D0%B8%D0%BD%D0%B2%D0%B5%D0%BD%D1%82%D0%B0%D1%80%D0%B8%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D1%8B%D0%B5%D0%AF%D1%87%D0%B5%D0%B9%D0%BA%D0%B8%5CReport.mgr.bsl",
            "size": 3230,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\Report\\ЗакрытиеПредварительныхПриемок\\Report.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\Report\\ЗакрытиеПредварительныхПриемок\\Report.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/e0b8c0bc6b723c35e0ebbfb931a6a279a719083c/_bsl%5CResources%5C726598511%5CReport%5C%D0%97%D0%B0%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5%D0%9F%D1%80%D0%B5%D0%B4%D0%B2%D0%B0%D1%80%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D1%8B%D1%85%D0%9F%D1%80%D0%B8%D0%B5%D0%BC%D0%BE%D0%BA%5CReport.obj.bsl",
            "size": 5637,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        },
        "_bsl\\Resources\\726598511\\WebService\\axExchange\\WebService.obj.bsl": {
            "filename": "_bsl\\Resources\\726598511\\WebService\\axExchange\\WebService.obj.bsl",
            "type": "text/plain",
            "language": null,
            "raw_url": "https://gist.githubusercontent.com/Untru/f54484ad2b2ca7f900d0800186ddf420/raw/b916d9c1c8998e4fa66b4abce80986f110257b34/_bsl%5CResources%5C726598511%5CWebService%5CaxExchange%5CWebService.obj.bsl",
            "size": 9688,
            "truncated": true,
            "content": "",
            "encoding": "utf-8"
        }
    },
    "public": false,
    "created_at": "2025-07-03T11:19:18Z",
    "updated_at": "2025-07-03T11:19:19Z",
    "description": "Gist создан из 1С 03.07.2025 14:19:12",
    "comments": 0,
    "user": null,
    "comments_enabled": true,
    "comments_url": "https://api.github.com/gists/f54484ad2b2ca7f900d0800186ddf420/comments",
    "owner": {
        "login": "Untru",
        "id": 60393326,
        "node_id": "MDQ6VXNlcjYwMzkzMzI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/60393326?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Untru",
        "html_url": "https://github.com/Untru",
        "followers_url": "https://api.github.com/users/Untru/followers",
        "following_url": "https://api.github.com/users/Untru/following{/other_user}",
        "gists_url": "https://api.github.com/users/Untru/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Untru/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Untru/subscriptions",
        "organizations_url": "https://api.github.com/users/Untru/orgs",
        "repos_url": "https://api.github.com/users/Untru/repos",
        "events_url": "https://api.github.com/users/Untru/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Untru/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "forks": [],
    "history": [
        {
            "user": {
                "login": "Untru",
                "id": 60393326,
                "node_id": "MDQ6VXNlcjYwMzkzMzI2",
                "avatar_url": "https://avatars.githubusercontent.com/u/60393326?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Untru",
                "html_url": "https://github.com/Untru",
                "followers_url": "https://api.github.com/users/Untru/followers",
                "following_url": "https://api.github.com/users/Untru/following{/other_user}",
                "gists_url": "https://api.github.com/users/Untru/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Untru/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Untru/subscriptions",
                "organizations_url": "https://api.github.com/users/Untru/orgs",
                "repos_url": "https://api.github.com/users/Untru/repos",
                "events_url": "https://api.github.com/users/Untru/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Untru/received_events",
                "type": "User",
                "user_view_type": "public",
                "site_admin": false
            },
            "version": "1a4c44ac47d8f35fe6a566e38a386cbdfcb3e708",
            "committed_at": "2025-07-03T11:19:18Z",
            "change_status": {
                "total": 43420,
                "additions": 43420,
                "deletions": 0
            },
            "url": "https://api.github.com/gists/f54484ad2b2ca7f900d0800186ddf420/1a4c44ac47d8f35fe6a566e38a386cbdfcb3e708"
        }
    ],
    "truncated": false
}