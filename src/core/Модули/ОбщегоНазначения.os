Функция ДопустимоеРасширение(Расширения) Экспорт

	Возврат ВалидныеРасширения().Найти(Расширения) <> Неопределено;

КонецФункции

Функция ВалидныеРасширения()

	Расширения = Новый 	Массив;
	Расширения.Добавить("epf");
	Расширения.Добавить("ert");
	Расширения.Добавить("cf");
	Расширения.Добавить("cfe");
	Возврат Расширения;
	
КонецФункции

Функция ТекстыМодулей(ПапкаРазбора) Экспорт
	
	Маска = "*.bsl";
	ДлинаПути = СтрДлина(ПапкаРазбора);	

	Файлы = НайтиФайлы(ПапкаРазбора, Маска, Истина);
  	
	ФайлыДляAPI = Новый Соответствие();
	Для Каждого Файл Из Файлы Цикл
		
		НомерВхождения = СтрНайти(Файл.ПолноеИмя, ПапкаРазбора);	
		ИмяФайлаПубликации = Сред(Файл.ПолноеИмя, ДлинаПути + НомерВхождения + 1);	

		Текст = Новый ЧтениеТекста();
		Текст.Открыть(Файл.ПолноеИмя, КодировкаТекста.UTF8NoBOM);
		
		ТекстМодуля = Текст.Прочитать();
		ТекстМодуля = СокрЛП(ТекстМодуля);
		Текст.Закрыть();
	      
        ФайлыДляAPI.Вставить(ИмяФайлаПубликации, ТекстМодуля);

	КонецЦикла;
	Возврат ФайлыДляAPI;

КонецФункции

Функция СоздатьОглавлениеИзJSON(JSON) Экспорт
    
    Результат = "";
     
    // Создаем структуру для группировки файлов
    ТипыОбъектов = Новый Соответствие;
    ТипыОбъектов.Вставить("Catalog", "Справочник");
    ТипыОбъектов.Вставить("Document", "Документ");
    ТипыОбъектов.Вставить("DataProcessor", "Обработка");
    ТипыОбъектов.Вставить("Report", "Отчет");
    ТипыОбъектов.Вставить("CommonModule", "Общий модуль");
    ТипыОбъектов.Вставить("CommonForm", "Общая форма");
    
    ТипыМодулей = Новый Соответствие;
    ТипыМодулей.Вставить("obj", "Модуль объекта");
    ТипыМодулей.Вставить("mgr", "Модуль менеджера");
    ТипыМодулей.Вставить("Form", "Модуль формы");
    
    // Создаем дерево для хранения структуры
    Дерево = Новый Соответствие;
    
    // Обрабатываем каждый файл
    Для Каждого КлючИЗначение Из Данные.files Цикл
        ИмяФайла = КлючИЗначение.Ключ;
        ДанныеФайла = КлючИЗначение.Значение;
        
        // Разбираем путь к файлу
        ЧастиПути = СтрРазделить(ИмяФайла, "\", Ложь);
        
        // Первые части пути - Resources\726598511
        Если ЧастиПути.Количество() < 3 Тогда
            Продолжить;
        КонецЕсли;
        
        ТипОбъекта = ЧастиПути[2];
        ИмяОбъекта = ЧастиПути[3];
        
        // Определяем тип модуля
        ТипМодуля = "";
        ИмяМодуля = "";
        Если ЧастиПути.Количество() >= 5 Тогда
            ПоследняяЧасть = ЧастиПути[ЧастиПути.Количество() - 1];
            ЧастиИмени = СтрРазделить(ПоследняяЧасть, ".", Ложь);
            Если ЧастиИмени.Количество() >= 3 Тогда
                ТипМодуля = ЧастиИмени[ЧастиИмени.Количество() - 2];
            КонецЕсли;
            ИмяМодуля = ПоследняяЧасть;
        КонецЕсли;
        
        // Формируем описание
        Описание = "";
        Если ТипыОбъектов[ТипОбъекта] <> Неопределено Тогда
            Описание = ТипыОбъектов[ТипОбъекта] + " - " + ИмяОбъекта;
            
            Если ТипыМодулей[ТипМодуля] <> Неопределено Тогда
                Описание = Описание + " - " + ТипыМодулей[ТипМодуля];
            КонецЕсли;
        КонецЕсли;
        
        // Добавляем в дерево
        Если Не Дерево.Свойство(ТипОбъекта) Тогда
            Дерево.Вставить(ТипОбъекта, Новый Соответствие);
        КонецЕсли;
        
        Если Не Дерево[ТипОбъекта].Свойство(ИмяОбъекта) Тогда
            Дерево[ТипОбъекта].Вставить(ИмяОбъекта, Новый Массив);
        КонецЕсли;
        
        Элемент = Новый Структура("Описание, Ссылка", Описание, ДанныеФайла.raw_url);
        Дерево[ТипОбъекта][ИмяОбъекта].Добавить(Элемент);
    КонецЦикла;
    
    // Формируем Markdown
    Результат = Результат + "# Оглавление репозитория" + Символы.ПС + Символы.ПС;
    
    Для Каждого КлючИЗначение Из Дерево Цикл
        ТипОбъекта = КлючИЗначение.Ключ;
        Объекты = КлючИЗначение.Значение;
        
        Результат = Результат + "## " + ТипыОбъектов[ТипОбъекта] + Символы.ПС + Символы.ПС;
        
        Для Каждого КлючИЗначение2 Из Объекты Цикл
            ИмяОбъекта = КлючИЗначение2.Ключ;
            Модули = КлючИЗначение2.Значение;
            
            Результат = Результат + "### " + ИмяОбъекта + Символы.ПС + Символы.ПС;
            
            Для Каждого Модуль Из Модули Цикл
                Результат = Результат + "- [" + Модуль.Описание + "](" + Модуль.Ссылка + ")" + Символы.ПС;
            КонецЦикла;
            
            Результат = Результат + Символы.ПС;
        КонецЦикла;
    КонецЦикла;
    
    Возврат Результат;
КонецФункции