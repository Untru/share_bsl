#Область ПрограмныйИнтерфейс

Функция ДопустимоеРасширение(Расширения) Экспорт
    
    Возврат ВалидныеРасширения().Найти(Расширения) <> Неопределено;
    
КонецФункции

Функция ТекстыМодулей(ПапкаРазбора) Экспорт
    
    Маска = "*.bsl";
    ДлинаПути = СтрДлина(ПапкаРазбора);
    
    Файлы = НайтиФайлы(ПапкаРазбора, Маска, Истина);
    
    ФайлыДляAPI = Новый Соответствие();
    Для Каждого Файл Из Файлы Цикл
       
        ПапкаРазбора = СтрЗаменить(ПапкаРазбора, "/", "\");
        НомерВхождения = СтрНайти(Файл.ПолноеИмя, ПапкаРазбора);
        ИмяФайлаПубликации = Сред(Файл.ПолноеИмя, ДлинаПути + НомерВхождения + 1);
        
        Текст = Новый ЧтениеТекста();
        Текст.Открыть(Файл.ПолноеИмя, КодировкаТекста.UTF8NoBOM);
        
        ТекстМодуля = Текст.Прочитать();
        ТекстМодуля = СокрЛП(ТекстМодуля);
        Текст.Закрыть();
        
        ФайлыДляAPI.Вставить(ИмяФайлаПубликации, ТекстМодуля);
        
    КонецЦикла;
    Возврат ФайлыДляAPI;
    
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Разбор объектов 1с по их пути
// примеры пути
// Форма cf - _bsl\Resources\726598511\Catalog\Контрагенты\CatalogForm\ФормаЭлемента\CatalogForm.obj.bsl
// Модуль Объекта, менеджера -  _bsl\Resources\726598511\Catalog\Номенклатура\Catalog.mgr.bsl
// При разборе epf - _bsl\Resources\726598549\ExternalDataProcessor.obj.bsl
Функция ДеревоОбъектов(Данные) Экспорт
    
    Дерево = Новый Соответствие();
    Для Каждого КлючИЗначение Из Данные["files"] Цикл
        
        ИмяФайла = КлючИЗначение.Ключ;
        ДанныеФайла = КлючИЗначение.Значение;
        
        ЧастиПути = СтрРазделить(ИмяФайла, "\", Ложь);
        Если ЧастиПути.Количество() = 1 Тогда
            Продолжить;
        КонецЕсли;
        
        Если ЧастиПути.ВГраница() = 1 Тогда //разобрана внешняя обработка
            ТипОбъекта = "ВнешняяОбработка";
            ИмяОбъекта = "Обработка";
            ТипыМодулей = "Модуль объекта";
        Иначе
            ТипыОбъектов = ТипыОбъектов();
            ТипОбъекта = ТипыОбъектов[ЧастиПути[0]];
            ИмяОбъекта = ЧастиПути[1];
            КоличествоЧастейПриПутиКформам = 4;
            ТипыМодулей = ТипыМодулей();
            Если ЧастиПути.ВГраница() = КоличествоЧастейПриПутиКформам Тогда
                ТипМодуля = ЧастиПути[3];
            Иначе
                ТипМодуля = ТипыМодулей[СтрЗаменить(ЧастиПути[2], ЧастиПути[0] + ".", "")];
            КонецЕсли;
        КонецЕсли;
       
        Если Дерево.Получить(ТипОбъекта) = Неопределено Тогда
            Дерево.Вставить(ТипОбъекта, Новый Соответствие);
        КонецЕсли;
        
        Если Дерево[ТипОбъекта].Получить(ИмяОбъекта) = Неопределено Тогда
            Дерево[ТипОбъекта].Вставить(ИмяОбъекта, Новый Массив);
        КонецЕсли;
        
        Элемент = Новый Структура("Описание, Ссылка", ТипМодуля, ДанныеФайла["raw_url"]);
        
        Дерево[ТипОбъекта][ИмяОбъекта].Добавить(Элемент);
        
    КонецЦикла;
    Возврат Дерево;
КонецФункции

Функция ВалидныеРасширения()
    
    Расширения = Новый Массив;
    Расширения.Добавить("epf");
    Расширения.Добавить("ert");
    Расширения.Добавить("cf");
    Расширения.Добавить("cfe");
    Возврат Расширения;
    
КонецФункции

Функция ТипыОбъектов()
    
    Типы = Новый Соответствие;
    Типы.Вставить("Catalog", "Справочник");
    Типы.Вставить("CommonForm", "Общая форма");    
    Типы.Вставить("CommonCommand", "Команда");
    Типы.Вставить("CommonModule", "Общий модуль");
    Типы.Вставить("DataProcessor", "Обработка");
    Типы.Вставить("Document", "Документ");
    Типы.Вставить("Enum", "Перечисление");
    Типы.Вставить("HTTPService", "HTTP-сервис");
    Типы.Вставить("Report", "Отчет");
    Типы.Вставить("WebService", "Веб-сервис");    
    Типы.Вставить("Form", "Форма");
    
    Возврат Типы;
КонецФункции

Функция ТипыМодулей()
    
    ТипыМодулей = Новый Соответствие;
    ТипыМодулей.Вставить("mgr.bsl", " Модуль менеджера");
    ТипыМодулей.Вставить("obj.bsl", " Модуль объекта");
    Возврат ТипыМодулей;
    
КонецФункции

#КонецОбласти