&Пластилин
Перем МенеджерСущностей;

&Пластилин
Перем Декомпилятор;

&Пластилин
Перем Поделка;

&Пластилин
Перем СервисыПубликации;

&Пластилин
Перем ХранилищеСущностейИсторияПубликаций;

&Желудь
Процедура ПриСозданииОбъекта()
	
КонецПроцедуры


Функция ОбработатьФайл(ДанныеДляРазбораФайла) Экспорт
	
	Каталог = "unpack/" + ДанныеДляРазбораФайла.ИДПубликации;
	КаталогИсходник = "bin/" + ДанныеДляРазбораФайла.ИДПубликации;
	СоздатьКаталог(Каталог);
	СоздатьКаталог(КаталогИсходник);
	ПутьКФайлу = СтрШаблон("%1/%2", КаталогИсходник, ДанныеДляРазбораФайла.ИмяФайла);
	
	ДанныеДляРазбораФайла.ДвоичныеДанные.Записать(ПутьКФайлу);
	
	Декомпилятор.РазобратьФайл(ПутьКФайлу, Каталог);
	ТекстыМодулей = РаботаСМодулями.ТекстыМодулей(Каталог);
	ДанныеПубликации = Опубликовать(ТекстыМодулей);
	СохранитьЗаписьОФайле(ДанныеДляРазбораФайла.ПользовательИД, 
		ДанныеДляРазбораФайла.ИмяФайла, ДанныеПубликации.ИДПубликации, ДанныеДляРазбораФайла.ИДФайла);	

	УдалитьФайлы(Каталог);
	УдалитьФайлы(КаталогИсходник);
	
	Возврат ДанныеПубликации.СсылкаНаПубликацию;

КонецФункции

Функция ПолучитьСписокПубликаций(ОтправляемыйФайл) Экспорт
	
	ПрошлыеПубликации = Новый Соответствие;
	Сущности = НайтиЗаписьОФайле(ОтправляемыйФайл.ПользовательИД, ОтправляемыйФайл.ИмяФайла);
	Если Сущности.Количество() Тогда
		
		Для Каждого Сущность Из Сущности Цикл
			ПрошлыеПубликации.Вставить(Строка(Сущность.ДатаОтправки), Сущность.Идентификатор);
		КонецЦикла;
		ПрошлыеПубликации.Вставить("Сделать новую публикацию", "NEW");
		
		Возврат ПрошлыеПубликации;
	КонецЕсли;
	
	Возврат ПрошлыеПубликации;
	
КонецФункции

Функция НовыйОтправляемыйФайл() Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("ПользовательИД");
	Результат.Вставить("ИмяФайла");
	Возврат Результат;
	
КонецФункции

Функция НовыйДанныеДляРазбораФайла() Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("ПользовательИД");
	Результат.Вставить("ИмяФайла");
	Результат.Вставить("ИДПубликации");
	Результат.Вставить("ДвоичныеДанные");
	Результат.Вставить("Обновление");	
	Результат.Вставить("ИДФайла");
	
	Возврат Результат;
	
КонецФункции
Функция НайтиЗаписьОФайле(ИДПользователя, ИмяФайла)
	
	Отбор = Новый Соответствие;
	Отбор.Вставить("ИДПользователя", ИДПользователя);
	Отбор.Вставить("ИмяФайла", ИмяФайла);
	Сущности = МенеджерСущностей.Получить(Тип("ИсторияПубликаций"), Отбор);
	Возврат Сущности;
	
КонецФункции

Функция Опубликовать(ТекстыМодулей)
	
	Результат = Новый Структура("СсылкаНаПубликацию, ИДПубликации");
	Публикаторы = Поделка.НайтиЖелуди("Публикатор", , "Соответствие");
	Для Каждого Публикатор Из Публикаторы Цикл
		
		Если СервисыПубликации[Публикатор.Ключ] = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Ссылки = Публикатор.Значение.Опубликовать(ТекстыМодулей);
		ТекстыОтправки = Новый Массив;
		Если Ссылки.Количество() Тогда
			Для Каждого Ссылка Из Ссылки Цикл
				ТекстыОтправки.Добавить(СтрШаблон("Ссылка на код: %1", Ссылка.Значение));
			КонецЦикла;
			Результат.СсылкаНаПубликацию = СтрСоединить(ТекстыОтправки, Символы.ПС);			
			Результат.ИДПубликации = Ссылка.Ключ;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;

КонецФункции

Процедура СохранитьЗаписьОФайле(ИДПользователя, ИмяФайла, ИДПубликации, ИДФайла)
	
	ИсторияПубликаций = ХранилищеСущностейИсторияПубликаций.СоздатьЭлемент();
	ИсторияПубликаций.ИДПользователя = ИДПользователя;
	ИсторияПубликаций.ИмяФайла = ИмяФайла;	
	ИсторияПубликаций.ДатаОтправки = ТекущаяДата();	
	ИсторияПубликаций.ИДПубликации = ИДПубликации;	
	ИсторияПубликаций.ИДФайла = ИДФайла;
	ИсторияПубликаций.Сохранить();

КонецПроцедуры