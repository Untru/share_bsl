&Пластилин
Перем МенеджерСущностей;

&Пластилин
Перем Декомпилятор;

&Пластилин
Перем Поделка;


&Пластилин("Публикаторы", Тип = "Соответствие")
Перем Публикаторы;

&Деталька("SHARESERVICE")
Перем СервисыПубликации;

&Пластилин
Перем ХранилищеСущностейИсторияПубликаций;

&Пластилин
Перем ХранилищеСущностейИсторияФайлов;

&ЛогПубликация
Перем Лог;

&Желудь
Процедура ПриСозданииОбъекта()
	
КонецПроцедуры

// Обработка входящего файла, разбор и публикация
//  Параметры:
//		Структура - см НовыйДанныеДляРазбораФайла
//
//  Возвращаемое значение:
//    Строка - ссылка на публикацию кода
//
Функция ОбработатьФайл(ДанныеДляРазбораФайла) Экспорт
	
	Каталог = "unpack/" + ДанныеДляРазбораФайла.НомерСеанса;
	КаталогИсходник = "bin/" + ДанныеДляРазбораФайла.НомерСеанса;
	СоздатьКаталог(Каталог);
	СоздатьКаталог(КаталогИсходник);
	ПутьКФайлу = СтрШаблон("%1/%2", КаталогИсходник, ДанныеДляРазбораФайла.ИмяФайла);
	
	Лог.Информация("Записываем файл");
	ДанныеДляРазбораФайла.ДвоичныеДанные.Записать(ПутьКФайлу);
	
	Лог.Информация("Разбираем файл");
	Декомпилятор.РазобратьФайл(ПутьКФайлу, Каталог);
	
	Лог.Информация("Публикуем");
	ТекстыМодулей = РаботаСМодулями.ТекстыМодулей(Каталог);
	ДанныеПубликации = Опубликовать(ТекстыМодулей, ДанныеДляРазбораФайла);
	ДанныеДляРазбораФайла.ИДПубликации = ДанныеПубликации.ИДПубликации;
	СохранитьЗаписьОФайле(ДанныеДляРазбораФайла);	

	УдалитьФайлы(Каталог);
	УдалитьФайлы(КаталогИсходник);
	
	Возврат ДанныеПубликации.СсылкаНаПубликацию;

КонецФункции

// Получить список прошлых публикаций
//  Параметры:
//		Структура - см НовыйОтправляемыйФайл	
//
//  Возвращаемое значение:
//   Соответствие
//		* Ключ - Дата публикации
//		* Значение - Идентификатор записи БД
Функция СписокПубликаций(ОтправляемыйФайл) Экспорт
	
	ИдентификаторИДФайла = ИнформацияОФайлеПоИД(ОтправляемыйФайл.ИДФайла);

	ПрошлыеПубликации = Новый Соответствие;
	Сущности = НайтиЗаписьОФайле(ОтправляемыйФайл.ИДПользователя, ОтправляемыйФайл.ИмяФайла);
	Если Сущности.Количество() Тогда
		
		Для Каждого Сущность Из Сущности Цикл
			ПрошлыеПубликации.Вставить(Строка(Сущность.ДатаОтправки), Сущность.Идентификатор);
		КонецЦикла;
		ПрошлыеПубликации.Вставить("Сделать новую публикацию", "NEW_" + ИдентификаторИДФайла.Идентификатор);
		
		Возврат ПрошлыеПубликации;
	КонецЕсли;
	
	Возврат ПрошлыеПубликации;
	
КонецФункции

Функция НовыйОтправляемыйФайл() Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("ИДПользователя");
	Результат.Вставить("ИмяФайла");
	Результат.Вставить("ИДФайла");	
	Возврат Результат;
	
КонецФункции

Функция НовыйДанныеДляРазбораФайла() Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("ИДПользователя");
	Результат.Вставить("ИмяФайла");
	Результат.Вставить("НомерСеанса");
	Результат.Вставить("ИДПубликации");
	Результат.Вставить("ДвоичныеДанные");
	Результат.Вставить("Обновление");	
	Результат.Вставить("ИДФайла");
	
	Возврат Результат;
	
КонецФункции

Функция Опубликовать(ТекстыМодулей, ДанныеДляРазбораФайла)
	
	Результат = Новый Структура("СсылкаНаПубликацию, ИДПубликации");
	Для Каждого Публикатор Из Публикаторы Цикл
		
		Если СервисыПубликации.Найти(Публикатор.Ключ) = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Ссылки = Публикатор.Значение.Опубликовать(ТекстыМодулей, ДанныеДляРазбораФайла);
		ТекстыОтправки = Новый Массив;
		Если Ссылки.Количество() Тогда
			Для Каждого Ссылка Из Ссылки Цикл
				ТекстыОтправки.Добавить(СтрШаблон("Ссылка на код: %1", Ссылка.Значение));
			КонецЦикла;
			Результат.СсылкаНаПубликацию = СтрСоединить(ТекстыОтправки, Символы.ПС);			
			Результат.ИДПубликации = Ссылка.Ключ;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;

КонецФункции

#Область РаботаСБазой

Процедура СохранитьИнформациюОФайле(ИнформациюОФайле) Экспорт

	ИсторияФайлов = ХранилищеСущностейИсторияФайлов.СоздатьЭлемент();
	ИсторияФайлов.ИДФайла = ИнформациюОФайле.ИДФайла;	
	ИсторияФайлов.ИмяФайла = ИнформациюОФайле.ИмяФайла;
	ИсторияФайлов.Сохранить();

КонецПроцедуры

Функция НайтиЗаписьОФайле(ИДПользователя, ИмяФайла)
	
	Отбор = Новый Соответствие;
	Отбор.Вставить("ИДПользователя", ИДПользователя);
	Отбор.Вставить("ИмяФайла", ИмяФайла);
	Сущности = МенеджерСущностей.Получить(Тип("ИсторияПубликаций"), Отбор);
	Возврат Сущности;
	
КонецФункции

Функция ИнформацияОФайлеПоИдентификатору(Идентификатор) Экспорт
	
	Отбор = Новый Соответствие;
	Отбор.Вставить("Идентификатор", Идентификатор);
	Сущность = МенеджерСущностей.ПолучитьОдно(Тип("ИсторияФайлов"), Отбор);
	Возврат Сущность;
	
КонецФункции

Функция ИнформацияОПубликацииПоИдентификатору(Идентификатор) Экспорт
	
	Отбор = Новый Соответствие;
	Отбор.Вставить("Идентификатор", Идентификатор);
	Сущность = МенеджерСущностей.ПолучитьОдно(Тип("ИсторияПубликаций"), Отбор);
	Возврат Сущность;
	
КонецФункции
Функция ИнформацияОФайлеПоИД(ИДФайла) Экспорт
	
	Отбор = Новый Соответствие;
	Отбор.Вставить("ИДФайла", ИДФайла);
	Сущность = МенеджерСущностей.ПолучитьОдно(Тип("ИсторияФайлов"), Отбор);
	Возврат Сущность;
	
КонецФункции

Процедура СохранитьЗаписьОФайле(ДанныеФайла)
	
	ИсторияПубликаций = ХранилищеСущностейИсторияПубликаций.СоздатьЭлемент();
	ИсторияПубликаций.ИДПользователя = ДанныеФайла.ИДПользователя;
	ИсторияПубликаций.ИмяФайла = ДанныеФайла.ИмяФайла;	
	ИсторияПубликаций.ДатаОтправки = ТекущаяДата();	
	ИсторияПубликаций.ИДПубликации = ДанныеФайла.ИДПубликации;	
	ИсторияПубликаций.ИДФайла = ДанныеФайла.ИДФайла;
	ИсторияПубликаций.Сохранить();

КонецПроцедуры

#КонецОбласти

